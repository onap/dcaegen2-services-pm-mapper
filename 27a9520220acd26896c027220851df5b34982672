{
  "comments": [
    {
      "key": {
        "uuid": "1f9c9d42_8b94cdfb",
        "filename": "Changelog.md",
        "patchSetId": 15
      },
      "lineNbr": 7,
      "author": {
        "id": 93
      },
      "writtenOn": "2022-02-02T23:48:02Z",
      "side": 1,
      "message": "We are not tracking release date on this changelog. \n\nThe convention we have been following on most/all dcae repo to indicate the date when this version was updated i.e gerrit submission date itself.",
      "range": {
        "startLine": 7,
        "startChar": 13,
        "endLine": 7,
        "endChar": 27
      },
      "revId": "27a9520220acd26896c027220851df5b34982672",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a052dcf0_6dced24c",
        "filename": "Changelog.md",
        "patchSetId": 15
      },
      "lineNbr": 7,
      "author": {
        "id": 6310
      },
      "writtenOn": "2022-02-04T09:30:32Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1f9c9d42_8b94cdfb",
      "range": {
        "startLine": 7,
        "startChar": 13,
        "endLine": 7,
        "endChar": 27
      },
      "revId": "27a9520220acd26896c027220851df5b34982672",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "17a507de_2cbd9d34",
        "filename": "src/main/java/org/onap/dcaegen2/services/pmmapper/ssl/SSLContextFactory.java",
        "patchSetId": 15
      },
      "lineNbr": 60,
      "author": {
        "id": 105
      },
      "writtenOn": "2022-02-02T19:43:17Z",
      "side": 1,
      "message": "Does the null return allow us to fall back to an insecure, in-the-clear, network path?\n\nOr does it prevent it?\n\nIf it does, that is not good. We should NOT default to a lack of security, but should instead fail.\n\nShould an exception be thrown instead?",
      "revId": "27a9520220acd26896c027220851df5b34982672",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "463ec9ea_1ef2f419",
        "filename": "src/main/java/org/onap/dcaegen2/services/pmmapper/ssl/SSLContextFactory.java",
        "patchSetId": 15
      },
      "lineNbr": 60,
      "author": {
        "id": 93
      },
      "writtenOn": "2022-02-02T23:48:02Z",
      "side": 1,
      "message": "The intent of this change is default to non-ssl mode when certificates are unavailable -  which is not really an error condition to be handled as exception. \n\nAlternatively hasCertPathsConfigured check can be handled in main class directly and if true then invoke this method",
      "parentUuid": "17a507de_2cbd9d34",
      "revId": "27a9520220acd26896c027220851df5b34982672",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d8641825_8115a853",
        "filename": "src/main/java/org/onap/dcaegen2/services/pmmapper/ssl/SSLContextFactory.java",
        "patchSetId": 15
      },
      "lineNbr": 60,
      "author": {
        "id": 6310
      },
      "writtenOn": "2022-02-04T09:30:32Z",
      "side": 1,
      "message": "As I mentioned, hasCertPathsConfigured can exist in App (and should), but it require much more effort to cover by unit tests. Both of solution (in SSLContextFactory and in App) haave same logic, but current implementation allow to easy cover all cert configuration cases.",
      "parentUuid": "463ec9ea_1ef2f419",
      "revId": "27a9520220acd26896c027220851df5b34982672",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c441cf76_19e506d7",
        "filename": "src/main/java/org/onap/dcaegen2/services/pmmapper/ssl/SSLContextFactory.java",
        "patchSetId": 15
      },
      "lineNbr": 60,
      "author": {
        "id": 105
      },
      "writtenOn": "2022-02-07T16:21:51Z",
      "side": 1,
      "message": "The security guidelines are that it\u0027s okay to have a path that goes to an insecure mode, but it must be EXPLICITLY configured. That is, the default case is always secure, and a lack of information to support that is an error condition, unless that explicit configuration is added. Something like the following:\n\nif (!hasCertPathsConfigured(...)) {\n   if (explicit configuring allowing insecure mode is set) {\n      logger....warn(\"... Skip creating SSL Context\");\n      return null;\n   throw new CertificateInformationMissing();\n}\n\nThis allows you to explicitly skip SSL for unit tests or other purposes, but still prevents falling back accidentally to an insecure mode.",
      "parentUuid": "d8641825_8115a853",
      "revId": "27a9520220acd26896c027220851df5b34982672",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "727cb1b6_de5b7298",
        "filename": "src/main/java/org/onap/dcaegen2/services/pmmapper/ssl/SSLContextFactory.java",
        "patchSetId": 15
      },
      "lineNbr": 60,
      "author": {
        "id": 93
      },
      "writtenOn": "2022-02-07T19:45:03Z",
      "side": 1,
      "message": "Discussed with Tony and clarified expectation on DCAEGEN2-3038\n\n if (explicit configuring allowing insecure mode is set)  --\u003e This can be controlled with \" !enable_tls\" property in application config\n\nException must be thrown if TLS is enabled and if certificates are missing/null. See jira for details.",
      "parentUuid": "c441cf76_19e506d7",
      "revId": "27a9520220acd26896c027220851df5b34982672",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "820cb3f4_d09dd9aa",
        "filename": "src/main/java/org/onap/dcaegen2/services/pmmapper/ssl/SSLContextFactory.java",
        "patchSetId": 15
      },
      "lineNbr": 60,
      "author": {
        "id": 105
      },
      "writtenOn": "2022-02-11T21:28:34Z",
      "side": 1,
      "message": "Thank you",
      "parentUuid": "727cb1b6_de5b7298",
      "revId": "27a9520220acd26896c027220851df5b34982672",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    }
  ]
}