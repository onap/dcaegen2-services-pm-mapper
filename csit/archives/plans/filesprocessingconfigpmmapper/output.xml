<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20210521 12:12:06.249" generator="Robot 3.2.2 (Python 2.7.17 on linux2)">
<suite source="/home/lasse/upstream/pm-mapper/csit/tests/filesprocessingconfigpmmapper" id="s1" name="plans/filesprocessingconfigpmmapper">
<suite source="/home/lasse/upstream/pm-mapper/csit/tests/filesprocessingconfigpmmapper/filesprocessingconfigpmmapper.robot" id="s1-s1" name="Filesprocessingconfigpmmapper">
<test id="s1-s1-t1" name="Verify that PM Mapper rejects 6-9 messages when limitRate is 1 and threads count is 1">
<kw name="RestartPmmapper">
<arguments>
<arg>${CONFIG_ENVS_1_1}</arg>
</arguments>
<kw name="Remove Container" library="DockerContainerManager">
<arguments>
<arg>${CLIENT_CONTAINER_NAME}</arg>
</arguments>
<status status="PASS" endtime="20210521 12:12:07.129" starttime="20210521 12:12:06.444"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20210521 12:12:12.131" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20210521 12:12:12.131" starttime="20210521 12:12:07.130"></status>
</kw>
<kw name="Run Pmmapper Container" library="DockerContainerManager">
<arguments>
<arg>${DOCKER_CLIENT_IMAGE}</arg>
<arg>${CLIENT_CONTAINER_NAME}</arg>
<arg>${envs}</arg>
<arg>${DR_NODE_IP}</arg>
<arg>${NODE_IP}</arg>
</arguments>
<status status="PASS" endtime="20210521 12:12:12.704" starttime="20210521 12:12:12.132"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>15s</arg>
</arguments>
<msg timestamp="20210521 12:12:27.705" level="INFO">Slept 15 seconds</msg>
<status status="PASS" endtime="20210521 12:12:27.706" starttime="20210521 12:12:12.704"></status>
</kw>
<status status="PASS" endtime="20210521 12:12:27.707" starttime="20210521 12:12:06.443"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>Afirst-</arg>
</arguments>
<assign>
<var>${testname}</var>
</assign>
<msg timestamp="20210521 12:12:27.710" level="INFO">${testname} = Afirst-</msg>
<status status="PASS" endtime="20210521 12:12:27.710" starttime="20210521 12:12:27.708"></status>
</kw>
<kw name="SendFilesToDatarouter">
<arguments>
<arg>${testname}</arg>
</arguments>
<kw type="for" name="${i} IN RANGE [ 10 ]">
<kw type="foritem" name="${i} = 0">
<kw name="SendToDatarouter">
<arguments>
<arg>${FILE_PATH}</arg>
<arg>${NR_VALID_METADATA_PATH}</arg>
<arg>X-ONAP-RequestID=${i}</arg>
<arg>${testnr}</arg>
<arg>${i}</arg>
</arguments>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${filepath}</arg>
</arguments>
<assign>
<var>${pmdata}</var>
</assign>
<msg timestamp="20210521 12:12:27.718" html="yes" level="INFO">Getting file '&lt;a href="file:///home/lasse/upstream/pm-mapper/csit/tests/filesprocessingconfigpmmapper/assets/ABigFile.xml"&gt;/home/lasse/upstream/pm-mapper/csit/tests/filesprocessingconfigpmmapper/assets/ABigFile.xml&lt;/a&gt;'.</msg>
<msg timestamp="20210521 12:12:27.720" level="INFO">${pmdata} = &lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;?xml-stylesheet type="text/xsl" href="MeasDataCollection.xsl"?&gt;
&lt;measCollecFile xmlns="http://www.3gpp.org/ftp/specs/archive/32_series/32.435#measCollec"
xmlns:...</msg>
<status status="PASS" endtime="20210521 12:12:27.720" starttime="20210521 12:12:27.717"></status>
</kw>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${metadatapath}</arg>
</arguments>
<assign>
<var>${metatdata}</var>
</assign>
<msg timestamp="20210521 12:12:27.724" html="yes" level="INFO">Getting file '&lt;a href="file:///home/lasse/upstream/pm-mapper/csit/tests/filesprocessingconfigpmmapper/assets/valid_metadata.json"&gt;/home/lasse/upstream/pm-mapper/csit/tests/filesprocessingconfigpmmapper/assets/valid_metadata.json&lt;/a&gt;'.</msg>
<msg timestamp="20210521 12:12:27.725" level="INFO">${metatdata} = {
    "productName": "gnb",
    "vendorName": "Ericsson",
    "lastEpochMicrosec": "1538478000000",
    "sourceName": "oteNB5309",
    "startEpochMicrosec": "1538478900000",
    "timeZoneOffset": "UTC...</msg>
<status status="PASS" endtime="20210521 12:12:27.725" starttime="20210521 12:12:27.721"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>${testnr}</arg>
<arg>${i}</arg>
<arg>.xml</arg>
</arguments>
<assign>
<var>${newFilename}</var>
</assign>
<msg timestamp="20210521 12:12:27.727" level="INFO">${newFilename} = Afirst-0.xml</msg>
<status status="PASS" endtime="20210521 12:12:27.728" starttime="20210521 12:12:27.725"></status>
</kw>
<kw name="PutCall">
<arguments>
<arg>${PUBLISH_NODE_URL}/${newFilename}</arg>
<arg>${request_id}</arg>
<arg>${pmdata}</arg>
<arg>${metatdata.replace("\n","")}</arg>
<arg>pmmapper</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>X-ONAP-RequestID=${request_id}</arg>
<arg>X-DMAAP-DR-META=${meta}</arg>
<arg>Content-Type=application/octet-stream</arg>
<arg>X-DMAAP-DR-ON-BEHALF-OF=${user}</arg>
<arg>Authorization=Basic cG1tYXBwZXI6cG1tYXBwZXI=</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20210521 12:12:27.733" level="INFO">${headers} = {u'X-ONAP-RequestID': u'X-ONAP-RequestID=0', u'X-DMAAP-DR-META': u'{    "productName": "gnb",    "vendorName": "Ericsson",    "lastEpochMicrosec": "1538478000000",    "sourceName": "oteNB5309",    "st...</msg>
<status status="PASS" endtime="20210521 12:12:27.733" starttime="20210521 12:12:27.732"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>requests.put('${url}', data="""${data}""", headers=${headers}, verify=False, allow_redirects=False)</arg>
<arg>requests</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20210521 12:12:27.901" level="INFO">/usr/local/lib/python2.7/dist-packages/urllib3/connectionpool.py:988: InsecureRequestWarning: Unverified HTTPS request is being made to host '172.18.0.2'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings
  InsecureRequestWarning,</msg>
<msg timestamp="20210521 12:12:27.901" level="INFO">${resp} = &lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20210521 12:12:27.901" starttime="20210521 12:12:27.733"></status>
</kw>
<msg timestamp="20210521 12:12:27.901" level="INFO">${resp} = &lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20210521 12:12:27.901" starttime="20210521 12:12:27.728"></status>
</kw>
<kw name="VerifyResponse">
<arguments>
<arg>${resp.status_code}</arg>
<arg>204</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${actual_response_value}</arg>
<arg>${expected_response_value}</arg>
</arguments>
<msg timestamp="20210521 12:12:27.903" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210521 12:12:27.903" starttime="20210521 12:12:27.902"></status>
</kw>
<status status="PASS" endtime="20210521 12:12:27.903" starttime="20210521 12:12:27.901"></status>
</kw>
<status status="PASS" endtime="20210521 12:12:27.904" starttime="20210521 12:12:27.713"></status>
</kw>
<status status="PASS" endtime="20210521 12:12:27.904" starttime="20210521 12:12:27.713"></status>
</kw>
<kw type="foritem" name="${i} = 1">
<kw name="SendToDatarouter">
<arguments>
<arg>${FILE_PATH}</arg>
<arg>${NR_VALID_METADATA_PATH}</arg>
<arg>X-ONAP-RequestID=${i}</arg>
<arg>${testnr}</arg>
<arg>${i}</arg>
</arguments>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${filepath}</arg>
</arguments>
<assign>
<var>${pmdata}</var>
</assign>
<msg timestamp="20210521 12:12:27.906" html="yes" level="INFO">Getting file '&lt;a href="file:///home/lasse/upstream/pm-mapper/csit/tests/filesprocessingconfigpmmapper/assets/ABigFile.xml"&gt;/home/lasse/upstream/pm-mapper/csit/tests/filesprocessingconfigpmmapper/assets/ABigFile.xml&lt;/a&gt;'.</msg>
<msg timestamp="20210521 12:12:27.906" level="INFO">${pmdata} = &lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;?xml-stylesheet type="text/xsl" href="MeasDataCollection.xsl"?&gt;
&lt;measCollecFile xmlns="http://www.3gpp.org/ftp/specs/archive/32_series/32.435#measCollec"
xmlns:...</msg>
<status status="PASS" endtime="20210521 12:12:27.906" starttime="20210521 12:12:27.905"></status>
</kw>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${metadatapath}</arg>
</arguments>
<assign>
<var>${metatdata}</var>
</assign>
<msg timestamp="20210521 12:12:27.907" html="yes" level="INFO">Getting file '&lt;a href="file:///home/lasse/upstream/pm-mapper/csit/tests/filesprocessingconfigpmmapper/assets/valid_metadata.json"&gt;/home/lasse/upstream/pm-mapper/csit/tests/filesprocessingconfigpmmapper/assets/valid_metadata.json&lt;/a&gt;'.</msg>
<msg timestamp="20210521 12:12:27.907" level="INFO">${metatdata} = {
    "productName": "gnb",
    "vendorName": "Ericsson",
    "lastEpochMicrosec": "1538478000000",
    "sourceName": "oteNB5309",
    "startEpochMicrosec": "1538478900000",
    "timeZoneOffset": "UTC...</msg>
<status status="PASS" endtime="20210521 12:12:27.907" starttime="20210521 12:12:27.906"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>${testnr}</arg>
<arg>${i}</arg>
<arg>.xml</arg>
</arguments>
<assign>
<var>${newFilename}</var>
</assign>
<msg timestamp="20210521 12:12:27.908" level="INFO">${newFilename} = Afirst-1.xml</msg>
<status status="PASS" endtime="20210521 12:12:27.908" starttime="20210521 12:12:27.907"></status>
</kw>
<kw name="PutCall">
<arguments>
<arg>${PUBLISH_NODE_URL}/${newFilename}</arg>
<arg>${request_id}</arg>
<arg>${pmdata}</arg>
<arg>${metatdata.replace("\n","")}</arg>
<arg>pmmapper</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>X-ONAP-RequestID=${request_id}</arg>
<arg>X-DMAAP-DR-META=${meta}</arg>
<arg>Content-Type=application/octet-stream</arg>
<arg>X-DMAAP-DR-ON-BEHALF-OF=${user}</arg>
<arg>Authorization=Basic cG1tYXBwZXI6cG1tYXBwZXI=</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20210521 12:12:27.911" level="INFO">${headers} = {u'X-ONAP-RequestID': u'X-ONAP-RequestID=1', u'X-DMAAP-DR-META': u'{    "productName": "gnb",    "vendorName": "Ericsson",    "lastEpochMicrosec": "1538478000000",    "sourceName": "oteNB5309",    "st...</msg>
<status status="PASS" endtime="20210521 12:12:27.911" starttime="20210521 12:12:27.910"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>requests.put('${url}', data="""${data}""", headers=${headers}, verify=False, allow_redirects=False)</arg>
<arg>requests</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20210521 12:12:28.029" level="INFO">/usr/local/lib/python2.7/dist-packages/urllib3/connectionpool.py:988: InsecureRequestWarning: Unverified HTTPS request is being made to host '172.18.0.2'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings
  InsecureRequestWarning,</msg>
<msg timestamp="20210521 12:12:28.029" level="INFO">${resp} = &lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20210521 12:12:28.029" starttime="20210521 12:12:27.911"></status>
</kw>
<msg timestamp="20210521 12:12:28.030" level="INFO">${resp} = &lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20210521 12:12:28.030" starttime="20210521 12:12:27.908"></status>
</kw>
<kw name="VerifyResponse">
<arguments>
<arg>${resp.status_code}</arg>
<arg>204</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${actual_response_value}</arg>
<arg>${expected_response_value}</arg>
</arguments>
<msg timestamp="20210521 12:12:28.032" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210521 12:12:28.032" starttime="20210521 12:12:28.031"></status>
</kw>
<status status="PASS" endtime="20210521 12:12:28.032" starttime="20210521 12:12:28.030"></status>
</kw>
<status status="PASS" endtime="20210521 12:12:28.032" starttime="20210521 12:12:27.904"></status>
</kw>
<status status="PASS" endtime="20210521 12:12:28.032" starttime="20210521 12:12:27.904"></status>
</kw>
<kw type="foritem" name="${i} = 2">
<kw name="SendToDatarouter">
<arguments>
<arg>${FILE_PATH}</arg>
<arg>${NR_VALID_METADATA_PATH}</arg>
<arg>X-ONAP-RequestID=${i}</arg>
<arg>${testnr}</arg>
<arg>${i}</arg>
</arguments>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${filepath}</arg>
</arguments>
<assign>
<var>${pmdata}</var>
</assign>
<msg timestamp="20210521 12:12:28.034" html="yes" level="INFO">Getting file '&lt;a href="file:///home/lasse/upstream/pm-mapper/csit/tests/filesprocessingconfigpmmapper/assets/ABigFile.xml"&gt;/home/lasse/upstream/pm-mapper/csit/tests/filesprocessingconfigpmmapper/assets/ABigFile.xml&lt;/a&gt;'.</msg>
<msg timestamp="20210521 12:12:28.034" level="INFO">${pmdata} = &lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;?xml-stylesheet type="text/xsl" href="MeasDataCollection.xsl"?&gt;
&lt;measCollecFile xmlns="http://www.3gpp.org/ftp/specs/archive/32_series/32.435#measCollec"
xmlns:...</msg>
<status status="PASS" endtime="20210521 12:12:28.035" starttime="20210521 12:12:28.034"></status>
</kw>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${metadatapath}</arg>
</arguments>
<assign>
<var>${metatdata}</var>
</assign>
<msg timestamp="20210521 12:12:28.035" html="yes" level="INFO">Getting file '&lt;a href="file:///home/lasse/upstream/pm-mapper/csit/tests/filesprocessingconfigpmmapper/assets/valid_metadata.json"&gt;/home/lasse/upstream/pm-mapper/csit/tests/filesprocessingconfigpmmapper/assets/valid_metadata.json&lt;/a&gt;'.</msg>
<msg timestamp="20210521 12:12:28.036" level="INFO">${metatdata} = {
    "productName": "gnb",
    "vendorName": "Ericsson",
    "lastEpochMicrosec": "1538478000000",
    "sourceName": "oteNB5309",
    "startEpochMicrosec": "1538478900000",
    "timeZoneOffset": "UTC...</msg>
<status status="PASS" endtime="20210521 12:12:28.036" starttime="20210521 12:12:28.035"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>${testnr}</arg>
<arg>${i}</arg>
<arg>.xml</arg>
</arguments>
<assign>
<var>${newFilename}</var>
</assign>
<msg timestamp="20210521 12:12:28.037" level="INFO">${newFilename} = Afirst-2.xml</msg>
<status status="PASS" endtime="20210521 12:12:28.037" starttime="20210521 12:12:28.036"></status>
</kw>
<kw name="PutCall">
<arguments>
<arg>${PUBLISH_NODE_URL}/${newFilename}</arg>
<arg>${request_id}</arg>
<arg>${pmdata}</arg>
<arg>${metatdata.replace("\n","")}</arg>
<arg>pmmapper</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>X-ONAP-RequestID=${request_id}</arg>
<arg>X-DMAAP-DR-META=${meta}</arg>
<arg>Content-Type=application/octet-stream</arg>
<arg>X-DMAAP-DR-ON-BEHALF-OF=${user}</arg>
<arg>Authorization=Basic cG1tYXBwZXI6cG1tYXBwZXI=</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20210521 12:12:28.039" level="INFO">${headers} = {u'X-ONAP-RequestID': u'X-ONAP-RequestID=2', u'X-DMAAP-DR-META': u'{    "productName": "gnb",    "vendorName": "Ericsson",    "lastEpochMicrosec": "1538478000000",    "sourceName": "oteNB5309",    "st...</msg>
<status status="PASS" endtime="20210521 12:12:28.040" starttime="20210521 12:12:28.038"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>requests.put('${url}', data="""${data}""", headers=${headers}, verify=False, allow_redirects=False)</arg>
<arg>requests</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20210521 12:12:28.092" level="INFO">/usr/local/lib/python2.7/dist-packages/urllib3/connectionpool.py:988: InsecureRequestWarning: Unverified HTTPS request is being made to host '172.18.0.2'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings
  InsecureRequestWarning,</msg>
<msg timestamp="20210521 12:12:28.092" level="INFO">${resp} = &lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20210521 12:12:28.093" starttime="20210521 12:12:28.040"></status>
</kw>
<msg timestamp="20210521 12:12:28.093" level="INFO">${resp} = &lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20210521 12:12:28.093" starttime="20210521 12:12:28.037"></status>
</kw>
<kw name="VerifyResponse">
<arguments>
<arg>${resp.status_code}</arg>
<arg>204</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${actual_response_value}</arg>
<arg>${expected_response_value}</arg>
</arguments>
<msg timestamp="20210521 12:12:28.095" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210521 12:12:28.095" starttime="20210521 12:12:28.094"></status>
</kw>
<status status="PASS" endtime="20210521 12:12:28.095" starttime="20210521 12:12:28.093"></status>
</kw>
<status status="PASS" endtime="20210521 12:12:28.095" starttime="20210521 12:12:28.033"></status>
</kw>
<status status="PASS" endtime="20210521 12:12:28.095" starttime="20210521 12:12:28.032"></status>
</kw>
<kw type="foritem" name="${i} = 3">
<kw name="SendToDatarouter">
<arguments>
<arg>${FILE_PATH}</arg>
<arg>${NR_VALID_METADATA_PATH}</arg>
<arg>X-ONAP-RequestID=${i}</arg>
<arg>${testnr}</arg>
<arg>${i}</arg>
</arguments>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${filepath}</arg>
</arguments>
<assign>
<var>${pmdata}</var>
</assign>
<msg timestamp="20210521 12:12:28.097" html="yes" level="INFO">Getting file '&lt;a href="file:///home/lasse/upstream/pm-mapper/csit/tests/filesprocessingconfigpmmapper/assets/ABigFile.xml"&gt;/home/lasse/upstream/pm-mapper/csit/tests/filesprocessingconfigpmmapper/assets/ABigFile.xml&lt;/a&gt;'.</msg>
<msg timestamp="20210521 12:12:28.097" level="INFO">${pmdata} = &lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;?xml-stylesheet type="text/xsl" href="MeasDataCollection.xsl"?&gt;
&lt;measCollecFile xmlns="http://www.3gpp.org/ftp/specs/archive/32_series/32.435#measCollec"
xmlns:...</msg>
<status status="PASS" endtime="20210521 12:12:28.098" starttime="20210521 12:12:28.097"></status>
</kw>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${metadatapath}</arg>
</arguments>
<assign>
<var>${metatdata}</var>
</assign>
<msg timestamp="20210521 12:12:28.098" html="yes" level="INFO">Getting file '&lt;a href="file:///home/lasse/upstream/pm-mapper/csit/tests/filesprocessingconfigpmmapper/assets/valid_metadata.json"&gt;/home/lasse/upstream/pm-mapper/csit/tests/filesprocessingconfigpmmapper/assets/valid_metadata.json&lt;/a&gt;'.</msg>
<msg timestamp="20210521 12:12:28.098" level="INFO">${metatdata} = {
    "productName": "gnb",
    "vendorName": "Ericsson",
    "lastEpochMicrosec": "1538478000000",
    "sourceName": "oteNB5309",
    "startEpochMicrosec": "1538478900000",
    "timeZoneOffset": "UTC...</msg>
<status status="PASS" endtime="20210521 12:12:28.099" starttime="20210521 12:12:28.098"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>${testnr}</arg>
<arg>${i}</arg>
<arg>.xml</arg>
</arguments>
<assign>
<var>${newFilename}</var>
</assign>
<msg timestamp="20210521 12:12:28.100" level="INFO">${newFilename} = Afirst-3.xml</msg>
<status status="PASS" endtime="20210521 12:12:28.100" starttime="20210521 12:12:28.099"></status>
</kw>
<kw name="PutCall">
<arguments>
<arg>${PUBLISH_NODE_URL}/${newFilename}</arg>
<arg>${request_id}</arg>
<arg>${pmdata}</arg>
<arg>${metatdata.replace("\n","")}</arg>
<arg>pmmapper</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>X-ONAP-RequestID=${request_id}</arg>
<arg>X-DMAAP-DR-META=${meta}</arg>
<arg>Content-Type=application/octet-stream</arg>
<arg>X-DMAAP-DR-ON-BEHALF-OF=${user}</arg>
<arg>Authorization=Basic cG1tYXBwZXI6cG1tYXBwZXI=</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20210521 12:12:28.102" level="INFO">${headers} = {u'X-ONAP-RequestID': u'X-ONAP-RequestID=3', u'X-DMAAP-DR-META': u'{    "productName": "gnb",    "vendorName": "Ericsson",    "lastEpochMicrosec": "1538478000000",    "sourceName": "oteNB5309",    "st...</msg>
<status status="PASS" endtime="20210521 12:12:28.102" starttime="20210521 12:12:28.101"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>requests.put('${url}', data="""${data}""", headers=${headers}, verify=False, allow_redirects=False)</arg>
<arg>requests</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20210521 12:12:28.161" level="INFO">/usr/local/lib/python2.7/dist-packages/urllib3/connectionpool.py:988: InsecureRequestWarning: Unverified HTTPS request is being made to host '172.18.0.2'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings
  InsecureRequestWarning,</msg>
<msg timestamp="20210521 12:12:28.161" level="INFO">${resp} = &lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20210521 12:12:28.161" starttime="20210521 12:12:28.102"></status>
</kw>
<msg timestamp="20210521 12:12:28.162" level="INFO">${resp} = &lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20210521 12:12:28.162" starttime="20210521 12:12:28.100"></status>
</kw>
<kw name="VerifyResponse">
<arguments>
<arg>${resp.status_code}</arg>
<arg>204</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${actual_response_value}</arg>
<arg>${expected_response_value}</arg>
</arguments>
<msg timestamp="20210521 12:12:28.164" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210521 12:12:28.164" starttime="20210521 12:12:28.164"></status>
</kw>
<status status="PASS" endtime="20210521 12:12:28.165" starttime="20210521 12:12:28.162"></status>
</kw>
<status status="PASS" endtime="20210521 12:12:28.165" starttime="20210521 12:12:28.095"></status>
</kw>
<status status="PASS" endtime="20210521 12:12:28.165" starttime="20210521 12:12:28.095"></status>
</kw>
<kw type="foritem" name="${i} = 4">
<kw name="SendToDatarouter">
<arguments>
<arg>${FILE_PATH}</arg>
<arg>${NR_VALID_METADATA_PATH}</arg>
<arg>X-ONAP-RequestID=${i}</arg>
<arg>${testnr}</arg>
<arg>${i}</arg>
</arguments>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${filepath}</arg>
</arguments>
<assign>
<var>${pmdata}</var>
</assign>
<msg timestamp="20210521 12:12:28.172" html="yes" level="INFO">Getting file '&lt;a href="file:///home/lasse/upstream/pm-mapper/csit/tests/filesprocessingconfigpmmapper/assets/ABigFile.xml"&gt;/home/lasse/upstream/pm-mapper/csit/tests/filesprocessingconfigpmmapper/assets/ABigFile.xml&lt;/a&gt;'.</msg>
<msg timestamp="20210521 12:12:28.173" level="INFO">${pmdata} = &lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;?xml-stylesheet type="text/xsl" href="MeasDataCollection.xsl"?&gt;
&lt;measCollecFile xmlns="http://www.3gpp.org/ftp/specs/archive/32_series/32.435#measCollec"
xmlns:...</msg>
<status status="PASS" endtime="20210521 12:12:28.173" starttime="20210521 12:12:28.172"></status>
</kw>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${metadatapath}</arg>
</arguments>
<assign>
<var>${metatdata}</var>
</assign>
<msg timestamp="20210521 12:12:28.174" html="yes" level="INFO">Getting file '&lt;a href="file:///home/lasse/upstream/pm-mapper/csit/tests/filesprocessingconfigpmmapper/assets/valid_metadata.json"&gt;/home/lasse/upstream/pm-mapper/csit/tests/filesprocessingconfigpmmapper/assets/valid_metadata.json&lt;/a&gt;'.</msg>
<msg timestamp="20210521 12:12:28.174" level="INFO">${metatdata} = {
    "productName": "gnb",
    "vendorName": "Ericsson",
    "lastEpochMicrosec": "1538478000000",
    "sourceName": "oteNB5309",
    "startEpochMicrosec": "1538478900000",
    "timeZoneOffset": "UTC...</msg>
<status status="PASS" endtime="20210521 12:12:28.174" starttime="20210521 12:12:28.173"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>${testnr}</arg>
<arg>${i}</arg>
<arg>.xml</arg>
</arguments>
<assign>
<var>${newFilename}</var>
</assign>
<msg timestamp="20210521 12:12:28.176" level="INFO">${newFilename} = Afirst-4.xml</msg>
<status status="PASS" endtime="20210521 12:12:28.176" starttime="20210521 12:12:28.174"></status>
</kw>
<kw name="PutCall">
<arguments>
<arg>${PUBLISH_NODE_URL}/${newFilename}</arg>
<arg>${request_id}</arg>
<arg>${pmdata}</arg>
<arg>${metatdata.replace("\n","")}</arg>
<arg>pmmapper</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>X-ONAP-RequestID=${request_id}</arg>
<arg>X-DMAAP-DR-META=${meta}</arg>
<arg>Content-Type=application/octet-stream</arg>
<arg>X-DMAAP-DR-ON-BEHALF-OF=${user}</arg>
<arg>Authorization=Basic cG1tYXBwZXI6cG1tYXBwZXI=</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20210521 12:12:28.179" level="INFO">${headers} = {u'X-ONAP-RequestID': u'X-ONAP-RequestID=4', u'X-DMAAP-DR-META': u'{    "productName": "gnb",    "vendorName": "Ericsson",    "lastEpochMicrosec": "1538478000000",    "sourceName": "oteNB5309",    "st...</msg>
<status status="PASS" endtime="20210521 12:12:28.179" starttime="20210521 12:12:28.178"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>requests.put('${url}', data="""${data}""", headers=${headers}, verify=False, allow_redirects=False)</arg>
<arg>requests</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20210521 12:12:28.232" level="INFO">/usr/local/lib/python2.7/dist-packages/urllib3/connectionpool.py:988: InsecureRequestWarning: Unverified HTTPS request is being made to host '172.18.0.2'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings
  InsecureRequestWarning,</msg>
<msg timestamp="20210521 12:12:28.234" level="INFO">${resp} = &lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20210521 12:12:28.234" starttime="20210521 12:12:28.179"></status>
</kw>
<msg timestamp="20210521 12:12:28.234" level="INFO">${resp} = &lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20210521 12:12:28.234" starttime="20210521 12:12:28.176"></status>
</kw>
<kw name="VerifyResponse">
<arguments>
<arg>${resp.status_code}</arg>
<arg>204</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${actual_response_value}</arg>
<arg>${expected_response_value}</arg>
</arguments>
<msg timestamp="20210521 12:12:28.236" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210521 12:12:28.236" starttime="20210521 12:12:28.235"></status>
</kw>
<status status="PASS" endtime="20210521 12:12:28.236" starttime="20210521 12:12:28.234"></status>
</kw>
<status status="PASS" endtime="20210521 12:12:28.236" starttime="20210521 12:12:28.165"></status>
</kw>
<status status="PASS" endtime="20210521 12:12:28.236" starttime="20210521 12:12:28.165"></status>
</kw>
<kw type="foritem" name="${i} = 5">
<kw name="SendToDatarouter">
<arguments>
<arg>${FILE_PATH}</arg>
<arg>${NR_VALID_METADATA_PATH}</arg>
<arg>X-ONAP-RequestID=${i}</arg>
<arg>${testnr}</arg>
<arg>${i}</arg>
</arguments>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${filepath}</arg>
</arguments>
<assign>
<var>${pmdata}</var>
</assign>
<msg timestamp="20210521 12:12:28.238" html="yes" level="INFO">Getting file '&lt;a href="file:///home/lasse/upstream/pm-mapper/csit/tests/filesprocessingconfigpmmapper/assets/ABigFile.xml"&gt;/home/lasse/upstream/pm-mapper/csit/tests/filesprocessingconfigpmmapper/assets/ABigFile.xml&lt;/a&gt;'.</msg>
<msg timestamp="20210521 12:12:28.239" level="INFO">${pmdata} = &lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;?xml-stylesheet type="text/xsl" href="MeasDataCollection.xsl"?&gt;
&lt;measCollecFile xmlns="http://www.3gpp.org/ftp/specs/archive/32_series/32.435#measCollec"
xmlns:...</msg>
<status status="PASS" endtime="20210521 12:12:28.239" starttime="20210521 12:12:28.238"></status>
</kw>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${metadatapath}</arg>
</arguments>
<assign>
<var>${metatdata}</var>
</assign>
<msg timestamp="20210521 12:12:28.239" html="yes" level="INFO">Getting file '&lt;a href="file:///home/lasse/upstream/pm-mapper/csit/tests/filesprocessingconfigpmmapper/assets/valid_metadata.json"&gt;/home/lasse/upstream/pm-mapper/csit/tests/filesprocessingconfigpmmapper/assets/valid_metadata.json&lt;/a&gt;'.</msg>
<msg timestamp="20210521 12:12:28.240" level="INFO">${metatdata} = {
    "productName": "gnb",
    "vendorName": "Ericsson",
    "lastEpochMicrosec": "1538478000000",
    "sourceName": "oteNB5309",
    "startEpochMicrosec": "1538478900000",
    "timeZoneOffset": "UTC...</msg>
<status status="PASS" endtime="20210521 12:12:28.240" starttime="20210521 12:12:28.239"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>${testnr}</arg>
<arg>${i}</arg>
<arg>.xml</arg>
</arguments>
<assign>
<var>${newFilename}</var>
</assign>
<msg timestamp="20210521 12:12:28.241" level="INFO">${newFilename} = Afirst-5.xml</msg>
<status status="PASS" endtime="20210521 12:12:28.241" starttime="20210521 12:12:28.240"></status>
</kw>
<kw name="PutCall">
<arguments>
<arg>${PUBLISH_NODE_URL}/${newFilename}</arg>
<arg>${request_id}</arg>
<arg>${pmdata}</arg>
<arg>${metatdata.replace("\n","")}</arg>
<arg>pmmapper</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>X-ONAP-RequestID=${request_id}</arg>
<arg>X-DMAAP-DR-META=${meta}</arg>
<arg>Content-Type=application/octet-stream</arg>
<arg>X-DMAAP-DR-ON-BEHALF-OF=${user}</arg>
<arg>Authorization=Basic cG1tYXBwZXI6cG1tYXBwZXI=</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20210521 12:12:28.245" level="INFO">${headers} = {u'X-ONAP-RequestID': u'X-ONAP-RequestID=5', u'X-DMAAP-DR-META': u'{    "productName": "gnb",    "vendorName": "Ericsson",    "lastEpochMicrosec": "1538478000000",    "sourceName": "oteNB5309",    "st...</msg>
<status status="PASS" endtime="20210521 12:12:28.245" starttime="20210521 12:12:28.243"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>requests.put('${url}', data="""${data}""", headers=${headers}, verify=False, allow_redirects=False)</arg>
<arg>requests</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20210521 12:12:28.304" level="INFO">/usr/local/lib/python2.7/dist-packages/urllib3/connectionpool.py:988: InsecureRequestWarning: Unverified HTTPS request is being made to host '172.18.0.2'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings
  InsecureRequestWarning,</msg>
<msg timestamp="20210521 12:12:28.305" level="INFO">${resp} = &lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20210521 12:12:28.305" starttime="20210521 12:12:28.245"></status>
</kw>
<msg timestamp="20210521 12:12:28.305" level="INFO">${resp} = &lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20210521 12:12:28.305" starttime="20210521 12:12:28.241"></status>
</kw>
<kw name="VerifyResponse">
<arguments>
<arg>${resp.status_code}</arg>
<arg>204</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${actual_response_value}</arg>
<arg>${expected_response_value}</arg>
</arguments>
<msg timestamp="20210521 12:12:28.307" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210521 12:12:28.307" starttime="20210521 12:12:28.306"></status>
</kw>
<status status="PASS" endtime="20210521 12:12:28.308" starttime="20210521 12:12:28.305"></status>
</kw>
<status status="PASS" endtime="20210521 12:12:28.308" starttime="20210521 12:12:28.237"></status>
</kw>
<status status="PASS" endtime="20210521 12:12:28.308" starttime="20210521 12:12:28.236"></status>
</kw>
<kw type="foritem" name="${i} = 6">
<kw name="SendToDatarouter">
<arguments>
<arg>${FILE_PATH}</arg>
<arg>${NR_VALID_METADATA_PATH}</arg>
<arg>X-ONAP-RequestID=${i}</arg>
<arg>${testnr}</arg>
<arg>${i}</arg>
</arguments>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${filepath}</arg>
</arguments>
<assign>
<var>${pmdata}</var>
</assign>
<msg timestamp="20210521 12:12:28.310" html="yes" level="INFO">Getting file '&lt;a href="file:///home/lasse/upstream/pm-mapper/csit/tests/filesprocessingconfigpmmapper/assets/ABigFile.xml"&gt;/home/lasse/upstream/pm-mapper/csit/tests/filesprocessingconfigpmmapper/assets/ABigFile.xml&lt;/a&gt;'.</msg>
<msg timestamp="20210521 12:12:28.310" level="INFO">${pmdata} = &lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;?xml-stylesheet type="text/xsl" href="MeasDataCollection.xsl"?&gt;
&lt;measCollecFile xmlns="http://www.3gpp.org/ftp/specs/archive/32_series/32.435#measCollec"
xmlns:...</msg>
<status status="PASS" endtime="20210521 12:12:28.310" starttime="20210521 12:12:28.309"></status>
</kw>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${metadatapath}</arg>
</arguments>
<assign>
<var>${metatdata}</var>
</assign>
<msg timestamp="20210521 12:12:28.311" html="yes" level="INFO">Getting file '&lt;a href="file:///home/lasse/upstream/pm-mapper/csit/tests/filesprocessingconfigpmmapper/assets/valid_metadata.json"&gt;/home/lasse/upstream/pm-mapper/csit/tests/filesprocessingconfigpmmapper/assets/valid_metadata.json&lt;/a&gt;'.</msg>
<msg timestamp="20210521 12:12:28.311" level="INFO">${metatdata} = {
    "productName": "gnb",
    "vendorName": "Ericsson",
    "lastEpochMicrosec": "1538478000000",
    "sourceName": "oteNB5309",
    "startEpochMicrosec": "1538478900000",
    "timeZoneOffset": "UTC...</msg>
<status status="PASS" endtime="20210521 12:12:28.311" starttime="20210521 12:12:28.310"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>${testnr}</arg>
<arg>${i}</arg>
<arg>.xml</arg>
</arguments>
<assign>
<var>${newFilename}</var>
</assign>
<msg timestamp="20210521 12:12:28.312" level="INFO">${newFilename} = Afirst-6.xml</msg>
<status status="PASS" endtime="20210521 12:12:28.312" starttime="20210521 12:12:28.311"></status>
</kw>
<kw name="PutCall">
<arguments>
<arg>${PUBLISH_NODE_URL}/${newFilename}</arg>
<arg>${request_id}</arg>
<arg>${pmdata}</arg>
<arg>${metatdata.replace("\n","")}</arg>
<arg>pmmapper</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>X-ONAP-RequestID=${request_id}</arg>
<arg>X-DMAAP-DR-META=${meta}</arg>
<arg>Content-Type=application/octet-stream</arg>
<arg>X-DMAAP-DR-ON-BEHALF-OF=${user}</arg>
<arg>Authorization=Basic cG1tYXBwZXI6cG1tYXBwZXI=</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20210521 12:12:28.320" level="INFO">${headers} = {u'X-ONAP-RequestID': u'X-ONAP-RequestID=6', u'X-DMAAP-DR-META': u'{    "productName": "gnb",    "vendorName": "Ericsson",    "lastEpochMicrosec": "1538478000000",    "sourceName": "oteNB5309",    "st...</msg>
<status status="PASS" endtime="20210521 12:12:28.320" starttime="20210521 12:12:28.319"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>requests.put('${url}', data="""${data}""", headers=${headers}, verify=False, allow_redirects=False)</arg>
<arg>requests</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20210521 12:12:28.373" level="INFO">/usr/local/lib/python2.7/dist-packages/urllib3/connectionpool.py:988: InsecureRequestWarning: Unverified HTTPS request is being made to host '172.18.0.2'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings
  InsecureRequestWarning,</msg>
<msg timestamp="20210521 12:12:28.374" level="INFO">${resp} = &lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20210521 12:12:28.374" starttime="20210521 12:12:28.321"></status>
</kw>
<msg timestamp="20210521 12:12:28.374" level="INFO">${resp} = &lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20210521 12:12:28.374" starttime="20210521 12:12:28.312"></status>
</kw>
<kw name="VerifyResponse">
<arguments>
<arg>${resp.status_code}</arg>
<arg>204</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${actual_response_value}</arg>
<arg>${expected_response_value}</arg>
</arguments>
<msg timestamp="20210521 12:12:28.376" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210521 12:12:28.376" starttime="20210521 12:12:28.375"></status>
</kw>
<status status="PASS" endtime="20210521 12:12:28.376" starttime="20210521 12:12:28.375"></status>
</kw>
<status status="PASS" endtime="20210521 12:12:28.376" starttime="20210521 12:12:28.308"></status>
</kw>
<status status="PASS" endtime="20210521 12:12:28.376" starttime="20210521 12:12:28.308"></status>
</kw>
<kw type="foritem" name="${i} = 7">
<kw name="SendToDatarouter">
<arguments>
<arg>${FILE_PATH}</arg>
<arg>${NR_VALID_METADATA_PATH}</arg>
<arg>X-ONAP-RequestID=${i}</arg>
<arg>${testnr}</arg>
<arg>${i}</arg>
</arguments>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${filepath}</arg>
</arguments>
<assign>
<var>${pmdata}</var>
</assign>
<msg timestamp="20210521 12:12:28.378" html="yes" level="INFO">Getting file '&lt;a href="file:///home/lasse/upstream/pm-mapper/csit/tests/filesprocessingconfigpmmapper/assets/ABigFile.xml"&gt;/home/lasse/upstream/pm-mapper/csit/tests/filesprocessingconfigpmmapper/assets/ABigFile.xml&lt;/a&gt;'.</msg>
<msg timestamp="20210521 12:12:28.379" level="INFO">${pmdata} = &lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;?xml-stylesheet type="text/xsl" href="MeasDataCollection.xsl"?&gt;
&lt;measCollecFile xmlns="http://www.3gpp.org/ftp/specs/archive/32_series/32.435#measCollec"
xmlns:...</msg>
<status status="PASS" endtime="20210521 12:12:28.379" starttime="20210521 12:12:28.378"></status>
</kw>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${metadatapath}</arg>
</arguments>
<assign>
<var>${metatdata}</var>
</assign>
<msg timestamp="20210521 12:12:28.379" html="yes" level="INFO">Getting file '&lt;a href="file:///home/lasse/upstream/pm-mapper/csit/tests/filesprocessingconfigpmmapper/assets/valid_metadata.json"&gt;/home/lasse/upstream/pm-mapper/csit/tests/filesprocessingconfigpmmapper/assets/valid_metadata.json&lt;/a&gt;'.</msg>
<msg timestamp="20210521 12:12:28.380" level="INFO">${metatdata} = {
    "productName": "gnb",
    "vendorName": "Ericsson",
    "lastEpochMicrosec": "1538478000000",
    "sourceName": "oteNB5309",
    "startEpochMicrosec": "1538478900000",
    "timeZoneOffset": "UTC...</msg>
<status status="PASS" endtime="20210521 12:12:28.380" starttime="20210521 12:12:28.379"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>${testnr}</arg>
<arg>${i}</arg>
<arg>.xml</arg>
</arguments>
<assign>
<var>${newFilename}</var>
</assign>
<msg timestamp="20210521 12:12:28.381" level="INFO">${newFilename} = Afirst-7.xml</msg>
<status status="PASS" endtime="20210521 12:12:28.381" starttime="20210521 12:12:28.380"></status>
</kw>
<kw name="PutCall">
<arguments>
<arg>${PUBLISH_NODE_URL}/${newFilename}</arg>
<arg>${request_id}</arg>
<arg>${pmdata}</arg>
<arg>${metatdata.replace("\n","")}</arg>
<arg>pmmapper</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>X-ONAP-RequestID=${request_id}</arg>
<arg>X-DMAAP-DR-META=${meta}</arg>
<arg>Content-Type=application/octet-stream</arg>
<arg>X-DMAAP-DR-ON-BEHALF-OF=${user}</arg>
<arg>Authorization=Basic cG1tYXBwZXI6cG1tYXBwZXI=</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20210521 12:12:28.383" level="INFO">${headers} = {u'X-ONAP-RequestID': u'X-ONAP-RequestID=7', u'X-DMAAP-DR-META': u'{    "productName": "gnb",    "vendorName": "Ericsson",    "lastEpochMicrosec": "1538478000000",    "sourceName": "oteNB5309",    "st...</msg>
<status status="PASS" endtime="20210521 12:12:28.383" starttime="20210521 12:12:28.382"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>requests.put('${url}', data="""${data}""", headers=${headers}, verify=False, allow_redirects=False)</arg>
<arg>requests</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20210521 12:12:28.419" level="INFO">/usr/local/lib/python2.7/dist-packages/urllib3/connectionpool.py:988: InsecureRequestWarning: Unverified HTTPS request is being made to host '172.18.0.2'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings
  InsecureRequestWarning,</msg>
<msg timestamp="20210521 12:12:28.420" level="INFO">${resp} = &lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20210521 12:12:28.420" starttime="20210521 12:12:28.384"></status>
</kw>
<msg timestamp="20210521 12:12:28.420" level="INFO">${resp} = &lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20210521 12:12:28.420" starttime="20210521 12:12:28.381"></status>
</kw>
<kw name="VerifyResponse">
<arguments>
<arg>${resp.status_code}</arg>
<arg>204</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${actual_response_value}</arg>
<arg>${expected_response_value}</arg>
</arguments>
<msg timestamp="20210521 12:12:28.422" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210521 12:12:28.422" starttime="20210521 12:12:28.421"></status>
</kw>
<status status="PASS" endtime="20210521 12:12:28.422" starttime="20210521 12:12:28.420"></status>
</kw>
<status status="PASS" endtime="20210521 12:12:28.422" starttime="20210521 12:12:28.377"></status>
</kw>
<status status="PASS" endtime="20210521 12:12:28.422" starttime="20210521 12:12:28.377"></status>
</kw>
<kw type="foritem" name="${i} = 8">
<kw name="SendToDatarouter">
<arguments>
<arg>${FILE_PATH}</arg>
<arg>${NR_VALID_METADATA_PATH}</arg>
<arg>X-ONAP-RequestID=${i}</arg>
<arg>${testnr}</arg>
<arg>${i}</arg>
</arguments>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${filepath}</arg>
</arguments>
<assign>
<var>${pmdata}</var>
</assign>
<msg timestamp="20210521 12:12:28.424" html="yes" level="INFO">Getting file '&lt;a href="file:///home/lasse/upstream/pm-mapper/csit/tests/filesprocessingconfigpmmapper/assets/ABigFile.xml"&gt;/home/lasse/upstream/pm-mapper/csit/tests/filesprocessingconfigpmmapper/assets/ABigFile.xml&lt;/a&gt;'.</msg>
<msg timestamp="20210521 12:12:28.425" level="INFO">${pmdata} = &lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;?xml-stylesheet type="text/xsl" href="MeasDataCollection.xsl"?&gt;
&lt;measCollecFile xmlns="http://www.3gpp.org/ftp/specs/archive/32_series/32.435#measCollec"
xmlns:...</msg>
<status status="PASS" endtime="20210521 12:12:28.425" starttime="20210521 12:12:28.424"></status>
</kw>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${metadatapath}</arg>
</arguments>
<assign>
<var>${metatdata}</var>
</assign>
<msg timestamp="20210521 12:12:28.425" html="yes" level="INFO">Getting file '&lt;a href="file:///home/lasse/upstream/pm-mapper/csit/tests/filesprocessingconfigpmmapper/assets/valid_metadata.json"&gt;/home/lasse/upstream/pm-mapper/csit/tests/filesprocessingconfigpmmapper/assets/valid_metadata.json&lt;/a&gt;'.</msg>
<msg timestamp="20210521 12:12:28.426" level="INFO">${metatdata} = {
    "productName": "gnb",
    "vendorName": "Ericsson",
    "lastEpochMicrosec": "1538478000000",
    "sourceName": "oteNB5309",
    "startEpochMicrosec": "1538478900000",
    "timeZoneOffset": "UTC...</msg>
<status status="PASS" endtime="20210521 12:12:28.426" starttime="20210521 12:12:28.425"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>${testnr}</arg>
<arg>${i}</arg>
<arg>.xml</arg>
</arguments>
<assign>
<var>${newFilename}</var>
</assign>
<msg timestamp="20210521 12:12:28.427" level="INFO">${newFilename} = Afirst-8.xml</msg>
<status status="PASS" endtime="20210521 12:12:28.427" starttime="20210521 12:12:28.426"></status>
</kw>
<kw name="PutCall">
<arguments>
<arg>${PUBLISH_NODE_URL}/${newFilename}</arg>
<arg>${request_id}</arg>
<arg>${pmdata}</arg>
<arg>${metatdata.replace("\n","")}</arg>
<arg>pmmapper</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>X-ONAP-RequestID=${request_id}</arg>
<arg>X-DMAAP-DR-META=${meta}</arg>
<arg>Content-Type=application/octet-stream</arg>
<arg>X-DMAAP-DR-ON-BEHALF-OF=${user}</arg>
<arg>Authorization=Basic cG1tYXBwZXI6cG1tYXBwZXI=</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20210521 12:12:28.429" level="INFO">${headers} = {u'X-ONAP-RequestID': u'X-ONAP-RequestID=8', u'X-DMAAP-DR-META': u'{    "productName": "gnb",    "vendorName": "Ericsson",    "lastEpochMicrosec": "1538478000000",    "sourceName": "oteNB5309",    "st...</msg>
<status status="PASS" endtime="20210521 12:12:28.429" starttime="20210521 12:12:28.428"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>requests.put('${url}', data="""${data}""", headers=${headers}, verify=False, allow_redirects=False)</arg>
<arg>requests</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20210521 12:12:28.467" level="INFO">/usr/local/lib/python2.7/dist-packages/urllib3/connectionpool.py:988: InsecureRequestWarning: Unverified HTTPS request is being made to host '172.18.0.2'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings
  InsecureRequestWarning,</msg>
<msg timestamp="20210521 12:12:28.468" level="INFO">${resp} = &lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20210521 12:12:28.468" starttime="20210521 12:12:28.429"></status>
</kw>
<msg timestamp="20210521 12:12:28.468" level="INFO">${resp} = &lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20210521 12:12:28.468" starttime="20210521 12:12:28.427"></status>
</kw>
<kw name="VerifyResponse">
<arguments>
<arg>${resp.status_code}</arg>
<arg>204</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${actual_response_value}</arg>
<arg>${expected_response_value}</arg>
</arguments>
<msg timestamp="20210521 12:12:28.470" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210521 12:12:28.470" starttime="20210521 12:12:28.469"></status>
</kw>
<status status="PASS" endtime="20210521 12:12:28.470" starttime="20210521 12:12:28.468"></status>
</kw>
<status status="PASS" endtime="20210521 12:12:28.470" starttime="20210521 12:12:28.423"></status>
</kw>
<status status="PASS" endtime="20210521 12:12:28.470" starttime="20210521 12:12:28.422"></status>
</kw>
<kw type="foritem" name="${i} = 9">
<kw name="SendToDatarouter">
<arguments>
<arg>${FILE_PATH}</arg>
<arg>${NR_VALID_METADATA_PATH}</arg>
<arg>X-ONAP-RequestID=${i}</arg>
<arg>${testnr}</arg>
<arg>${i}</arg>
</arguments>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${filepath}</arg>
</arguments>
<assign>
<var>${pmdata}</var>
</assign>
<msg timestamp="20210521 12:12:28.472" html="yes" level="INFO">Getting file '&lt;a href="file:///home/lasse/upstream/pm-mapper/csit/tests/filesprocessingconfigpmmapper/assets/ABigFile.xml"&gt;/home/lasse/upstream/pm-mapper/csit/tests/filesprocessingconfigpmmapper/assets/ABigFile.xml&lt;/a&gt;'.</msg>
<msg timestamp="20210521 12:12:28.473" level="INFO">${pmdata} = &lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;?xml-stylesheet type="text/xsl" href="MeasDataCollection.xsl"?&gt;
&lt;measCollecFile xmlns="http://www.3gpp.org/ftp/specs/archive/32_series/32.435#measCollec"
xmlns:...</msg>
<status status="PASS" endtime="20210521 12:12:28.473" starttime="20210521 12:12:28.472"></status>
</kw>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${metadatapath}</arg>
</arguments>
<assign>
<var>${metatdata}</var>
</assign>
<msg timestamp="20210521 12:12:28.474" html="yes" level="INFO">Getting file '&lt;a href="file:///home/lasse/upstream/pm-mapper/csit/tests/filesprocessingconfigpmmapper/assets/valid_metadata.json"&gt;/home/lasse/upstream/pm-mapper/csit/tests/filesprocessingconfigpmmapper/assets/valid_metadata.json&lt;/a&gt;'.</msg>
<msg timestamp="20210521 12:12:28.474" level="INFO">${metatdata} = {
    "productName": "gnb",
    "vendorName": "Ericsson",
    "lastEpochMicrosec": "1538478000000",
    "sourceName": "oteNB5309",
    "startEpochMicrosec": "1538478900000",
    "timeZoneOffset": "UTC...</msg>
<status status="PASS" endtime="20210521 12:12:28.474" starttime="20210521 12:12:28.473"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>${testnr}</arg>
<arg>${i}</arg>
<arg>.xml</arg>
</arguments>
<assign>
<var>${newFilename}</var>
</assign>
<msg timestamp="20210521 12:12:28.476" level="INFO">${newFilename} = Afirst-9.xml</msg>
<status status="PASS" endtime="20210521 12:12:28.476" starttime="20210521 12:12:28.475"></status>
</kw>
<kw name="PutCall">
<arguments>
<arg>${PUBLISH_NODE_URL}/${newFilename}</arg>
<arg>${request_id}</arg>
<arg>${pmdata}</arg>
<arg>${metatdata.replace("\n","")}</arg>
<arg>pmmapper</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>X-ONAP-RequestID=${request_id}</arg>
<arg>X-DMAAP-DR-META=${meta}</arg>
<arg>Content-Type=application/octet-stream</arg>
<arg>X-DMAAP-DR-ON-BEHALF-OF=${user}</arg>
<arg>Authorization=Basic cG1tYXBwZXI6cG1tYXBwZXI=</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20210521 12:12:28.480" level="INFO">${headers} = {u'X-ONAP-RequestID': u'X-ONAP-RequestID=9', u'X-DMAAP-DR-META': u'{    "productName": "gnb",    "vendorName": "Ericsson",    "lastEpochMicrosec": "1538478000000",    "sourceName": "oteNB5309",    "st...</msg>
<status status="PASS" endtime="20210521 12:12:28.480" starttime="20210521 12:12:28.478"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>requests.put('${url}', data="""${data}""", headers=${headers}, verify=False, allow_redirects=False)</arg>
<arg>requests</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20210521 12:12:28.520" level="INFO">/usr/local/lib/python2.7/dist-packages/urllib3/connectionpool.py:988: InsecureRequestWarning: Unverified HTTPS request is being made to host '172.18.0.2'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings
  InsecureRequestWarning,</msg>
<msg timestamp="20210521 12:12:28.521" level="INFO">${resp} = &lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20210521 12:12:28.521" starttime="20210521 12:12:28.480"></status>
</kw>
<msg timestamp="20210521 12:12:28.521" level="INFO">${resp} = &lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20210521 12:12:28.521" starttime="20210521 12:12:28.476"></status>
</kw>
<kw name="VerifyResponse">
<arguments>
<arg>${resp.status_code}</arg>
<arg>204</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${actual_response_value}</arg>
<arg>${expected_response_value}</arg>
</arguments>
<msg timestamp="20210521 12:12:28.529" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210521 12:12:28.529" starttime="20210521 12:12:28.528"></status>
</kw>
<status status="PASS" endtime="20210521 12:12:28.529" starttime="20210521 12:12:28.521"></status>
</kw>
<status status="PASS" endtime="20210521 12:12:28.530" starttime="20210521 12:12:28.471"></status>
</kw>
<status status="PASS" endtime="20210521 12:12:28.530" starttime="20210521 12:12:28.470"></status>
</kw>
<status status="PASS" endtime="20210521 12:12:28.530" starttime="20210521 12:12:27.712"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>20s</arg>
</arguments>
<msg timestamp="20210521 12:12:48.532" level="INFO">Slept 20 seconds</msg>
<status status="PASS" endtime="20210521 12:12:48.533" starttime="20210521 12:12:28.530"></status>
</kw>
<status status="PASS" endtime="20210521 12:12:48.534" starttime="20210521 12:12:27.710"></status>
</kw>
<kw name="GetLogsOutput">
<assign>
<var>${alllogs}</var>
</assign>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>${CLI_EXEC_LOGS_LIST}</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${filesString}</var>
</assign>
<msg timestamp="20210521 12:12:48.539" level="INFO">Starting process:
docker exec datarouter-node /bin/sh -c "ls /opt/app/datartr/logs"</msg>
<msg timestamp="20210521 12:12:48.551" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210521 12:12:49.438" level="INFO">Process completed.</msg>
<msg timestamp="20210521 12:12:49.439" level="INFO">${filesString} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20210521 12:12:49.439" starttime="20210521 12:12:48.537"></status>
</kw>
<kw name="Get Log Files List" library="LogReader">
<arguments>
<arg>${filesString.stdout}</arg>
</arguments>
<assign>
<var>${filesList}</var>
</assign>
<msg timestamp="20210521 12:12:49.441" level="INFO">${filesList} = [u'events-202105210912.log', u'events.log']</msg>
<status status="PASS" endtime="20210521 12:12:49.441" starttime="20210521 12:12:49.439"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<msg timestamp="20210521 12:12:49.442" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210521 12:12:49.442" starttime="20210521 12:12:49.441"></status>
</kw>
<kw type="for" name="${file} IN [ @{filesList} ]">
<kw type="foritem" name="${file} = events-202105210912.log">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>"cat /opt/app/datartr/logs/</arg>
<arg>${file}</arg>
<arg>"</arg>
</arguments>
<assign>
<var>${file_path}</var>
</assign>
<msg timestamp="20210521 12:12:49.443" level="INFO">${file_path} = "cat /opt/app/datartr/logs/events-202105210912.log"</msg>
<status status="PASS" endtime="20210521 12:12:49.443" starttime="20210521 12:12:49.442"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>docker exec datarouter-node /bin/sh -c</arg>
<arg>${file_path}</arg>
</arguments>
<assign>
<var>${exec}</var>
</assign>
<msg timestamp="20210521 12:12:49.443" level="INFO">${exec} = docker exec datarouter-node /bin/sh -c "cat /opt/app/datartr/logs/events-202105210912.log"</msg>
<status status="PASS" endtime="20210521 12:12:49.443" starttime="20210521 12:12:49.443"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>${exec}</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${single_file}</var>
</assign>
<msg timestamp="20210521 12:12:49.444" level="INFO">Starting process:
docker exec datarouter-node /bin/sh -c "cat /opt/app/datartr/logs/events-202105210912.log"</msg>
<msg timestamp="20210521 12:12:49.447" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210521 12:12:49.591" level="INFO">Process completed.</msg>
<msg timestamp="20210521 12:12:49.592" level="INFO">${single_file} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20210521 12:12:49.592" starttime="20210521 12:12:49.444"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=\n</arg>
<arg>${output}</arg>
<arg>${single_file.stdout}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<msg timestamp="20210521 12:12:49.594" level="INFO">${output} = 
2021-05-21T09:12:27.953Z|PUB|1621588347859.dmaap-dr-node|1|https://dmaap-dr-node/publish/1/Afirst-0.xml|PUT|application/octet-stream|5942|172.18.0.1|pmmapper|204
2021-05-21T09:12:28.027Z|PUB|16215883...</msg>
<status status="PASS" endtime="20210521 12:12:49.594" starttime="20210521 12:12:49.593"></status>
</kw>
<status status="PASS" endtime="20210521 12:12:49.595" starttime="20210521 12:12:49.442"></status>
</kw>
<kw type="foritem" name="${file} = events.log">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>"cat /opt/app/datartr/logs/</arg>
<arg>${file}</arg>
<arg>"</arg>
</arguments>
<assign>
<var>${file_path}</var>
</assign>
<msg timestamp="20210521 12:12:49.595" level="INFO">${file_path} = "cat /opt/app/datartr/logs/events.log"</msg>
<status status="PASS" endtime="20210521 12:12:49.595" starttime="20210521 12:12:49.595"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>docker exec datarouter-node /bin/sh -c</arg>
<arg>${file_path}</arg>
</arguments>
<assign>
<var>${exec}</var>
</assign>
<msg timestamp="20210521 12:12:49.596" level="INFO">${exec} = docker exec datarouter-node /bin/sh -c "cat /opt/app/datartr/logs/events.log"</msg>
<status status="PASS" endtime="20210521 12:12:49.596" starttime="20210521 12:12:49.596"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>${exec}</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${single_file}</var>
</assign>
<msg timestamp="20210521 12:12:49.597" level="INFO">Starting process:
docker exec datarouter-node /bin/sh -c "cat /opt/app/datartr/logs/events.log"</msg>
<msg timestamp="20210521 12:12:49.599" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210521 12:12:49.747" level="INFO">Process completed.</msg>
<msg timestamp="20210521 12:12:49.747" level="INFO">${single_file} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20210521 12:12:49.747" starttime="20210521 12:12:49.596"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=\n</arg>
<arg>${output}</arg>
<arg>${single_file.stdout}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<msg timestamp="20210521 12:12:49.749" level="INFO">${output} = 
2021-05-21T09:12:27.953Z|PUB|1621588347859.dmaap-dr-node|1|https://dmaap-dr-node/publish/1/Afirst-0.xml|PUT|application/octet-stream|5942|172.18.0.1|pmmapper|204
2021-05-21T09:12:28.027Z|PUB|16215883...</msg>
<status status="PASS" endtime="20210521 12:12:49.749" starttime="20210521 12:12:49.748"></status>
</kw>
<status status="PASS" endtime="20210521 12:12:49.749" starttime="20210521 12:12:49.595"></status>
</kw>
<status status="PASS" endtime="20210521 12:12:49.749" starttime="20210521 12:12:49.442"></status>
</kw>
<msg timestamp="20210521 12:12:49.749" level="INFO">${alllogs} = 
2021-05-21T09:12:27.953Z|PUB|1621588347859.dmaap-dr-node|1|https://dmaap-dr-node/publish/1/Afirst-0.xml|PUT|application/octet-stream|5942|172.18.0.1|pmmapper|204
2021-05-21T09:12:28.027Z|PUB|16215883...</msg>
<status status="PASS" endtime="20210521 12:12:49.750" starttime="20210521 12:12:48.535"></status>
</kw>
<kw name="GetFilteredLogs">
<arguments>
<arg>${alllogs}</arg>
<arg>${testname}</arg>
</arguments>
<assign>
<var>${filtered_logs}</var>
</assign>
<kw name="Filter Unique" library="LogReader">
<arguments>
<arg>${all_logs}</arg>
<arg>${testname}</arg>
</arguments>
<assign>
<var>${filtered_logs}</var>
</assign>
<msg timestamp="20210521 12:12:49.752" level="INFO">${filtered_logs} = set([u'2021-05-21T09:12:30.314Z|DEL|1621588348083.dmaap-dr-node|1|1|http://dcae-pm-mapper:8081/delivery/Afirst-2.xml|PUT|application/octet-stream|5942|username|429|Too Many Requests', u'2021-05-21T09:...</msg>
<status status="PASS" endtime="20210521 12:12:49.752" starttime="20210521 12:12:49.751"></status>
</kw>
<msg timestamp="20210521 12:12:49.752" level="INFO">${filtered_logs} = set([u'2021-05-21T09:12:30.314Z|DEL|1621588348083.dmaap-dr-node|1|1|http://dcae-pm-mapper:8081/delivery/Afirst-2.xml|PUT|application/octet-stream|5942|username|429|Too Many Requests', u'2021-05-21T09:...</msg>
<status status="PASS" endtime="20210521 12:12:49.753" starttime="20210521 12:12:49.750"></status>
</kw>
<kw name="GetDroppedNumber">
<arguments>
<arg>${filtered_logs}</arg>
</arguments>
<assign>
<var>${dropped_nr}</var>
</assign>
<kw name="Get Number Of Dropped Messages" library="LogReader">
<arguments>
<arg>${logs_output}</arg>
</arguments>
<assign>
<var>${number}</var>
</assign>
<msg timestamp="20210521 12:12:49.754" level="INFO">${number} = 8</msg>
<status status="PASS" endtime="20210521 12:12:49.754" starttime="20210521 12:12:49.753"></status>
</kw>
<msg timestamp="20210521 12:12:49.754" level="INFO">${dropped_nr} = 8</msg>
<status status="PASS" endtime="20210521 12:12:49.754" starttime="20210521 12:12:49.753"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>40s</arg>
</arguments>
<msg timestamp="20210521 12:13:29.759" level="INFO">Slept 40 seconds</msg>
<status status="PASS" endtime="20210521 12:13:29.759" starttime="20210521 12:12:49.754"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>${5} &lt; ${dropped_nr} &lt; ${10}</arg>
</arguments>
<assign>
<var>${isCorrectDroppedCount}</var>
</assign>
<msg timestamp="20210521 12:13:29.761" level="INFO">${isCorrectDroppedCount} = True</msg>
<status status="PASS" endtime="20210521 12:13:29.761" starttime="20210521 12:13:29.759"></status>
</kw>
<kw name="SavePmMapperLogsAndDroppedCount">
<arguments>
<arg>config_1_1</arg>
<arg>${dropped_nr}</arg>
</arguments>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>echo "Dropped: ${dropped_count}" &gt; %{WORKSPACE}/archives/${test_name}_dropped_count.log</arg>
<arg>shell=yes</arg>
</arguments>
<msg timestamp="20210521 12:13:29.763" level="INFO">Starting process:
echo "Dropped: 8" &gt; /home/lasse/upstream/pm-mapper/csit/archives/config_1_1_dropped_count.log</msg>
<msg timestamp="20210521 12:13:29.766" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210521 12:13:29.766" level="INFO">Process completed.</msg>
<status status="PASS" endtime="20210521 12:13:29.767" starttime="20210521 12:13:29.762"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>docker logs ${CLIENT_CONTAINER_NAME} &gt; %{WORKSPACE}/archives/${test_name}_pm_mapper_container_logs.log</arg>
<arg>shell=yes</arg>
</arguments>
<msg timestamp="20210521 12:13:29.768" level="INFO">Starting process:
docker logs pmmapper &gt; /home/lasse/upstream/pm-mapper/csit/archives/config_1_1_pm_mapper_container_logs.log</msg>
<msg timestamp="20210521 12:13:29.771" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210521 12:13:29.911" level="INFO">Process completed.</msg>
<status status="PASS" endtime="20210521 12:13:29.912" starttime="20210521 12:13:29.767"></status>
</kw>
<status status="PASS" endtime="20210521 12:13:29.912" starttime="20210521 12:13:29.761"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${isCorrectDroppedCount}</arg>
<arg>Pm-mapper drop: ${dropped_nr} messages. Expected drop count: 6-9</arg>
</arguments>
<status status="PASS" endtime="20210521 12:13:29.914" starttime="20210521 12:13:29.913"></status>
</kw>
<kw name="ClearLogs">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>${CLI_EXEC_CLI_PM_LOG_CLEAR}</arg>
<arg>shell=yes</arg>
</arguments>
<msg timestamp="20210521 12:13:29.915" level="INFO">Starting process:
docker exec pmmapper /bin/sh -c "echo -n "" &gt; /var/log/ONAP/dcaegen2/services/pm-mapper/pm-mapper_output.log"</msg>
<msg timestamp="20210521 12:13:29.918" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210521 12:13:30.397" level="INFO">Process completed.</msg>
<status status="PASS" endtime="20210521 12:13:30.397" starttime="20210521 12:13:29.914"></status>
</kw>
<status status="PASS" endtime="20210521 12:13:30.397" starttime="20210521 12:13:29.914"></status>
</kw>
<doc>Verify that PM Mapper rejects 6-9/10 messages. Configuration: limitRate=1, threadsCount=1</doc>
<tags>
<tag>FILES_PROCESSING_CONFIG_PM_MAPPER_1</tag>
</tags>
<timeout value="15 minutes"></timeout>
<status status="PASS" endtime="20210521 12:13:30.398" critical="yes" starttime="20210521 12:12:06.442"></status>
</test>
<test id="s1-s1-t2" name="Verify that PM Mapper rejects 0 messages when limitRate is 10 and threads count is 1">
<kw name="RestartPmmapper">
<arguments>
<arg>${CONFIG_ENVS_10_1}</arg>
</arguments>
<kw name="Remove Container" library="DockerContainerManager">
<arguments>
<arg>${CLIENT_CONTAINER_NAME}</arg>
</arguments>
<status status="PASS" endtime="20210521 12:13:31.176" starttime="20210521 12:13:30.401"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20210521 12:13:36.180" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20210521 12:13:36.180" starttime="20210521 12:13:31.176"></status>
</kw>
<kw name="Run Pmmapper Container" library="DockerContainerManager">
<arguments>
<arg>${DOCKER_CLIENT_IMAGE}</arg>
<arg>${CLIENT_CONTAINER_NAME}</arg>
<arg>${envs}</arg>
<arg>${DR_NODE_IP}</arg>
<arg>${NODE_IP}</arg>
</arguments>
<status status="PASS" endtime="20210521 12:13:36.711" starttime="20210521 12:13:36.180"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>15s</arg>
</arguments>
<msg timestamp="20210521 12:13:51.713" level="INFO">Slept 15 seconds</msg>
<status status="PASS" endtime="20210521 12:13:51.713" starttime="20210521 12:13:36.711"></status>
</kw>
<status status="PASS" endtime="20210521 12:13:51.713" starttime="20210521 12:13:30.400"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>Athird-</arg>
</arguments>
<assign>
<var>${testname}</var>
</assign>
<msg timestamp="20210521 12:13:51.714" level="INFO">${testname} = Athird-</msg>
<status status="PASS" endtime="20210521 12:13:51.714" starttime="20210521 12:13:51.714"></status>
</kw>
<kw name="SendFilesToDatarouter">
<arguments>
<arg>${testname}</arg>
</arguments>
<kw type="for" name="${i} IN RANGE [ 10 ]">
<kw type="foritem" name="${i} = 0">
<kw name="SendToDatarouter">
<arguments>
<arg>${FILE_PATH}</arg>
<arg>${NR_VALID_METADATA_PATH}</arg>
<arg>X-ONAP-RequestID=${i}</arg>
<arg>${testnr}</arg>
<arg>${i}</arg>
</arguments>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${filepath}</arg>
</arguments>
<assign>
<var>${pmdata}</var>
</assign>
<msg timestamp="20210521 12:13:51.717" html="yes" level="INFO">Getting file '&lt;a href="file:///home/lasse/upstream/pm-mapper/csit/tests/filesprocessingconfigpmmapper/assets/ABigFile.xml"&gt;/home/lasse/upstream/pm-mapper/csit/tests/filesprocessingconfigpmmapper/assets/ABigFile.xml&lt;/a&gt;'.</msg>
<msg timestamp="20210521 12:13:51.718" level="INFO">${pmdata} = &lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;?xml-stylesheet type="text/xsl" href="MeasDataCollection.xsl"?&gt;
&lt;measCollecFile xmlns="http://www.3gpp.org/ftp/specs/archive/32_series/32.435#measCollec"
xmlns:...</msg>
<status status="PASS" endtime="20210521 12:13:51.718" starttime="20210521 12:13:51.717"></status>
</kw>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${metadatapath}</arg>
</arguments>
<assign>
<var>${metatdata}</var>
</assign>
<msg timestamp="20210521 12:13:51.719" html="yes" level="INFO">Getting file '&lt;a href="file:///home/lasse/upstream/pm-mapper/csit/tests/filesprocessingconfigpmmapper/assets/valid_metadata.json"&gt;/home/lasse/upstream/pm-mapper/csit/tests/filesprocessingconfigpmmapper/assets/valid_metadata.json&lt;/a&gt;'.</msg>
<msg timestamp="20210521 12:13:51.719" level="INFO">${metatdata} = {
    "productName": "gnb",
    "vendorName": "Ericsson",
    "lastEpochMicrosec": "1538478000000",
    "sourceName": "oteNB5309",
    "startEpochMicrosec": "1538478900000",
    "timeZoneOffset": "UTC...</msg>
<status status="PASS" endtime="20210521 12:13:51.719" starttime="20210521 12:13:51.718"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>${testnr}</arg>
<arg>${i}</arg>
<arg>.xml</arg>
</arguments>
<assign>
<var>${newFilename}</var>
</assign>
<msg timestamp="20210521 12:13:51.720" level="INFO">${newFilename} = Athird-0.xml</msg>
<status status="PASS" endtime="20210521 12:13:51.720" starttime="20210521 12:13:51.719"></status>
</kw>
<kw name="PutCall">
<arguments>
<arg>${PUBLISH_NODE_URL}/${newFilename}</arg>
<arg>${request_id}</arg>
<arg>${pmdata}</arg>
<arg>${metatdata.replace("\n","")}</arg>
<arg>pmmapper</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>X-ONAP-RequestID=${request_id}</arg>
<arg>X-DMAAP-DR-META=${meta}</arg>
<arg>Content-Type=application/octet-stream</arg>
<arg>X-DMAAP-DR-ON-BEHALF-OF=${user}</arg>
<arg>Authorization=Basic cG1tYXBwZXI6cG1tYXBwZXI=</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20210521 12:13:51.724" level="INFO">${headers} = {u'X-ONAP-RequestID': u'X-ONAP-RequestID=0', u'X-DMAAP-DR-META': u'{    "productName": "gnb",    "vendorName": "Ericsson",    "lastEpochMicrosec": "1538478000000",    "sourceName": "oteNB5309",    "st...</msg>
<status status="PASS" endtime="20210521 12:13:51.724" starttime="20210521 12:13:51.722"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>requests.put('${url}', data="""${data}""", headers=${headers}, verify=False, allow_redirects=False)</arg>
<arg>requests</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20210521 12:13:51.757" level="INFO">/usr/local/lib/python2.7/dist-packages/urllib3/connectionpool.py:988: InsecureRequestWarning: Unverified HTTPS request is being made to host '172.18.0.2'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings
  InsecureRequestWarning,</msg>
<msg timestamp="20210521 12:13:51.757" level="INFO">${resp} = &lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20210521 12:13:51.757" starttime="20210521 12:13:51.724"></status>
</kw>
<msg timestamp="20210521 12:13:51.758" level="INFO">${resp} = &lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20210521 12:13:51.758" starttime="20210521 12:13:51.720"></status>
</kw>
<kw name="VerifyResponse">
<arguments>
<arg>${resp.status_code}</arg>
<arg>204</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${actual_response_value}</arg>
<arg>${expected_response_value}</arg>
</arguments>
<msg timestamp="20210521 12:13:51.762" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210521 12:13:51.762" starttime="20210521 12:13:51.760"></status>
</kw>
<status status="PASS" endtime="20210521 12:13:51.762" starttime="20210521 12:13:51.758"></status>
</kw>
<status status="PASS" endtime="20210521 12:13:51.762" starttime="20210521 12:13:51.716"></status>
</kw>
<status status="PASS" endtime="20210521 12:13:51.762" starttime="20210521 12:13:51.715"></status>
</kw>
<kw type="foritem" name="${i} = 1">
<kw name="SendToDatarouter">
<arguments>
<arg>${FILE_PATH}</arg>
<arg>${NR_VALID_METADATA_PATH}</arg>
<arg>X-ONAP-RequestID=${i}</arg>
<arg>${testnr}</arg>
<arg>${i}</arg>
</arguments>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${filepath}</arg>
</arguments>
<assign>
<var>${pmdata}</var>
</assign>
<msg timestamp="20210521 12:13:51.764" html="yes" level="INFO">Getting file '&lt;a href="file:///home/lasse/upstream/pm-mapper/csit/tests/filesprocessingconfigpmmapper/assets/ABigFile.xml"&gt;/home/lasse/upstream/pm-mapper/csit/tests/filesprocessingconfigpmmapper/assets/ABigFile.xml&lt;/a&gt;'.</msg>
<msg timestamp="20210521 12:13:51.765" level="INFO">${pmdata} = &lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;?xml-stylesheet type="text/xsl" href="MeasDataCollection.xsl"?&gt;
&lt;measCollecFile xmlns="http://www.3gpp.org/ftp/specs/archive/32_series/32.435#measCollec"
xmlns:...</msg>
<status status="PASS" endtime="20210521 12:13:51.765" starttime="20210521 12:13:51.764"></status>
</kw>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${metadatapath}</arg>
</arguments>
<assign>
<var>${metatdata}</var>
</assign>
<msg timestamp="20210521 12:13:51.765" html="yes" level="INFO">Getting file '&lt;a href="file:///home/lasse/upstream/pm-mapper/csit/tests/filesprocessingconfigpmmapper/assets/valid_metadata.json"&gt;/home/lasse/upstream/pm-mapper/csit/tests/filesprocessingconfigpmmapper/assets/valid_metadata.json&lt;/a&gt;'.</msg>
<msg timestamp="20210521 12:13:51.766" level="INFO">${metatdata} = {
    "productName": "gnb",
    "vendorName": "Ericsson",
    "lastEpochMicrosec": "1538478000000",
    "sourceName": "oteNB5309",
    "startEpochMicrosec": "1538478900000",
    "timeZoneOffset": "UTC...</msg>
<status status="PASS" endtime="20210521 12:13:51.766" starttime="20210521 12:13:51.765"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>${testnr}</arg>
<arg>${i}</arg>
<arg>.xml</arg>
</arguments>
<assign>
<var>${newFilename}</var>
</assign>
<msg timestamp="20210521 12:13:51.766" level="INFO">${newFilename} = Athird-1.xml</msg>
<status status="PASS" endtime="20210521 12:13:51.767" starttime="20210521 12:13:51.766"></status>
</kw>
<kw name="PutCall">
<arguments>
<arg>${PUBLISH_NODE_URL}/${newFilename}</arg>
<arg>${request_id}</arg>
<arg>${pmdata}</arg>
<arg>${metatdata.replace("\n","")}</arg>
<arg>pmmapper</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>X-ONAP-RequestID=${request_id}</arg>
<arg>X-DMAAP-DR-META=${meta}</arg>
<arg>Content-Type=application/octet-stream</arg>
<arg>X-DMAAP-DR-ON-BEHALF-OF=${user}</arg>
<arg>Authorization=Basic cG1tYXBwZXI6cG1tYXBwZXI=</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20210521 12:13:51.769" level="INFO">${headers} = {u'X-ONAP-RequestID': u'X-ONAP-RequestID=1', u'X-DMAAP-DR-META': u'{    "productName": "gnb",    "vendorName": "Ericsson",    "lastEpochMicrosec": "1538478000000",    "sourceName": "oteNB5309",    "st...</msg>
<status status="PASS" endtime="20210521 12:13:51.769" starttime="20210521 12:13:51.768"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>requests.put('${url}', data="""${data}""", headers=${headers}, verify=False, allow_redirects=False)</arg>
<arg>requests</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20210521 12:13:51.808" level="INFO">/usr/local/lib/python2.7/dist-packages/urllib3/connectionpool.py:988: InsecureRequestWarning: Unverified HTTPS request is being made to host '172.18.0.2'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings
  InsecureRequestWarning,</msg>
<msg timestamp="20210521 12:13:51.808" level="INFO">${resp} = &lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20210521 12:13:51.808" starttime="20210521 12:13:51.769"></status>
</kw>
<msg timestamp="20210521 12:13:51.809" level="INFO">${resp} = &lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20210521 12:13:51.809" starttime="20210521 12:13:51.767"></status>
</kw>
<kw name="VerifyResponse">
<arguments>
<arg>${resp.status_code}</arg>
<arg>204</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${actual_response_value}</arg>
<arg>${expected_response_value}</arg>
</arguments>
<msg timestamp="20210521 12:13:51.811" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210521 12:13:51.812" starttime="20210521 12:13:51.811"></status>
</kw>
<status status="PASS" endtime="20210521 12:13:51.812" starttime="20210521 12:13:51.809"></status>
</kw>
<status status="PASS" endtime="20210521 12:13:51.812" starttime="20210521 12:13:51.763"></status>
</kw>
<status status="PASS" endtime="20210521 12:13:51.814" starttime="20210521 12:13:51.763"></status>
</kw>
<kw type="foritem" name="${i} = 2">
<kw name="SendToDatarouter">
<arguments>
<arg>${FILE_PATH}</arg>
<arg>${NR_VALID_METADATA_PATH}</arg>
<arg>X-ONAP-RequestID=${i}</arg>
<arg>${testnr}</arg>
<arg>${i}</arg>
</arguments>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${filepath}</arg>
</arguments>
<assign>
<var>${pmdata}</var>
</assign>
<msg timestamp="20210521 12:13:51.816" html="yes" level="INFO">Getting file '&lt;a href="file:///home/lasse/upstream/pm-mapper/csit/tests/filesprocessingconfigpmmapper/assets/ABigFile.xml"&gt;/home/lasse/upstream/pm-mapper/csit/tests/filesprocessingconfigpmmapper/assets/ABigFile.xml&lt;/a&gt;'.</msg>
<msg timestamp="20210521 12:13:51.816" level="INFO">${pmdata} = &lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;?xml-stylesheet type="text/xsl" href="MeasDataCollection.xsl"?&gt;
&lt;measCollecFile xmlns="http://www.3gpp.org/ftp/specs/archive/32_series/32.435#measCollec"
xmlns:...</msg>
<status status="PASS" endtime="20210521 12:13:51.816" starttime="20210521 12:13:51.816"></status>
</kw>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${metadatapath}</arg>
</arguments>
<assign>
<var>${metatdata}</var>
</assign>
<msg timestamp="20210521 12:13:51.817" html="yes" level="INFO">Getting file '&lt;a href="file:///home/lasse/upstream/pm-mapper/csit/tests/filesprocessingconfigpmmapper/assets/valid_metadata.json"&gt;/home/lasse/upstream/pm-mapper/csit/tests/filesprocessingconfigpmmapper/assets/valid_metadata.json&lt;/a&gt;'.</msg>
<msg timestamp="20210521 12:13:51.817" level="INFO">${metatdata} = {
    "productName": "gnb",
    "vendorName": "Ericsson",
    "lastEpochMicrosec": "1538478000000",
    "sourceName": "oteNB5309",
    "startEpochMicrosec": "1538478900000",
    "timeZoneOffset": "UTC...</msg>
<status status="PASS" endtime="20210521 12:13:51.817" starttime="20210521 12:13:51.817"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>${testnr}</arg>
<arg>${i}</arg>
<arg>.xml</arg>
</arguments>
<assign>
<var>${newFilename}</var>
</assign>
<msg timestamp="20210521 12:13:51.818" level="INFO">${newFilename} = Athird-2.xml</msg>
<status status="PASS" endtime="20210521 12:13:51.818" starttime="20210521 12:13:51.818"></status>
</kw>
<kw name="PutCall">
<arguments>
<arg>${PUBLISH_NODE_URL}/${newFilename}</arg>
<arg>${request_id}</arg>
<arg>${pmdata}</arg>
<arg>${metatdata.replace("\n","")}</arg>
<arg>pmmapper</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>X-ONAP-RequestID=${request_id}</arg>
<arg>X-DMAAP-DR-META=${meta}</arg>
<arg>Content-Type=application/octet-stream</arg>
<arg>X-DMAAP-DR-ON-BEHALF-OF=${user}</arg>
<arg>Authorization=Basic cG1tYXBwZXI6cG1tYXBwZXI=</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20210521 12:13:51.821" level="INFO">${headers} = {u'X-ONAP-RequestID': u'X-ONAP-RequestID=2', u'X-DMAAP-DR-META': u'{    "productName": "gnb",    "vendorName": "Ericsson",    "lastEpochMicrosec": "1538478000000",    "sourceName": "oteNB5309",    "st...</msg>
<status status="PASS" endtime="20210521 12:13:51.821" starttime="20210521 12:13:51.820"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>requests.put('${url}', data="""${data}""", headers=${headers}, verify=False, allow_redirects=False)</arg>
<arg>requests</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20210521 12:13:51.866" level="INFO">/usr/local/lib/python2.7/dist-packages/urllib3/connectionpool.py:988: InsecureRequestWarning: Unverified HTTPS request is being made to host '172.18.0.2'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings
  InsecureRequestWarning,</msg>
<msg timestamp="20210521 12:13:51.866" level="INFO">${resp} = &lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20210521 12:13:51.866" starttime="20210521 12:13:51.821"></status>
</kw>
<msg timestamp="20210521 12:13:51.867" level="INFO">${resp} = &lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20210521 12:13:51.867" starttime="20210521 12:13:51.818"></status>
</kw>
<kw name="VerifyResponse">
<arguments>
<arg>${resp.status_code}</arg>
<arg>204</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${actual_response_value}</arg>
<arg>${expected_response_value}</arg>
</arguments>
<msg timestamp="20210521 12:13:51.869" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210521 12:13:51.870" starttime="20210521 12:13:51.868"></status>
</kw>
<status status="PASS" endtime="20210521 12:13:51.870" starttime="20210521 12:13:51.867"></status>
</kw>
<status status="PASS" endtime="20210521 12:13:51.870" starttime="20210521 12:13:51.814"></status>
</kw>
<status status="PASS" endtime="20210521 12:13:51.870" starttime="20210521 12:13:51.814"></status>
</kw>
<kw type="foritem" name="${i} = 3">
<kw name="SendToDatarouter">
<arguments>
<arg>${FILE_PATH}</arg>
<arg>${NR_VALID_METADATA_PATH}</arg>
<arg>X-ONAP-RequestID=${i}</arg>
<arg>${testnr}</arg>
<arg>${i}</arg>
</arguments>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${filepath}</arg>
</arguments>
<assign>
<var>${pmdata}</var>
</assign>
<msg timestamp="20210521 12:13:51.876" html="yes" level="INFO">Getting file '&lt;a href="file:///home/lasse/upstream/pm-mapper/csit/tests/filesprocessingconfigpmmapper/assets/ABigFile.xml"&gt;/home/lasse/upstream/pm-mapper/csit/tests/filesprocessingconfigpmmapper/assets/ABigFile.xml&lt;/a&gt;'.</msg>
<msg timestamp="20210521 12:13:51.877" level="INFO">${pmdata} = &lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;?xml-stylesheet type="text/xsl" href="MeasDataCollection.xsl"?&gt;
&lt;measCollecFile xmlns="http://www.3gpp.org/ftp/specs/archive/32_series/32.435#measCollec"
xmlns:...</msg>
<status status="PASS" endtime="20210521 12:13:51.877" starttime="20210521 12:13:51.875"></status>
</kw>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${metadatapath}</arg>
</arguments>
<assign>
<var>${metatdata}</var>
</assign>
<msg timestamp="20210521 12:13:51.878" html="yes" level="INFO">Getting file '&lt;a href="file:///home/lasse/upstream/pm-mapper/csit/tests/filesprocessingconfigpmmapper/assets/valid_metadata.json"&gt;/home/lasse/upstream/pm-mapper/csit/tests/filesprocessingconfigpmmapper/assets/valid_metadata.json&lt;/a&gt;'.</msg>
<msg timestamp="20210521 12:13:51.879" level="INFO">${metatdata} = {
    "productName": "gnb",
    "vendorName": "Ericsson",
    "lastEpochMicrosec": "1538478000000",
    "sourceName": "oteNB5309",
    "startEpochMicrosec": "1538478900000",
    "timeZoneOffset": "UTC...</msg>
<status status="PASS" endtime="20210521 12:13:51.879" starttime="20210521 12:13:51.877"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>${testnr}</arg>
<arg>${i}</arg>
<arg>.xml</arg>
</arguments>
<assign>
<var>${newFilename}</var>
</assign>
<msg timestamp="20210521 12:13:51.880" level="INFO">${newFilename} = Athird-3.xml</msg>
<status status="PASS" endtime="20210521 12:13:51.880" starttime="20210521 12:13:51.879"></status>
</kw>
<kw name="PutCall">
<arguments>
<arg>${PUBLISH_NODE_URL}/${newFilename}</arg>
<arg>${request_id}</arg>
<arg>${pmdata}</arg>
<arg>${metatdata.replace("\n","")}</arg>
<arg>pmmapper</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>X-ONAP-RequestID=${request_id}</arg>
<arg>X-DMAAP-DR-META=${meta}</arg>
<arg>Content-Type=application/octet-stream</arg>
<arg>X-DMAAP-DR-ON-BEHALF-OF=${user}</arg>
<arg>Authorization=Basic cG1tYXBwZXI6cG1tYXBwZXI=</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20210521 12:13:51.884" level="INFO">${headers} = {u'X-ONAP-RequestID': u'X-ONAP-RequestID=3', u'X-DMAAP-DR-META': u'{    "productName": "gnb",    "vendorName": "Ericsson",    "lastEpochMicrosec": "1538478000000",    "sourceName": "oteNB5309",    "st...</msg>
<status status="PASS" endtime="20210521 12:13:51.885" starttime="20210521 12:13:51.883"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>requests.put('${url}', data="""${data}""", headers=${headers}, verify=False, allow_redirects=False)</arg>
<arg>requests</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20210521 12:13:51.947" level="INFO">/usr/local/lib/python2.7/dist-packages/urllib3/connectionpool.py:988: InsecureRequestWarning: Unverified HTTPS request is being made to host '172.18.0.2'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings
  InsecureRequestWarning,</msg>
<msg timestamp="20210521 12:13:51.947" level="INFO">${resp} = &lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20210521 12:13:51.947" starttime="20210521 12:13:51.885"></status>
</kw>
<msg timestamp="20210521 12:13:51.948" level="INFO">${resp} = &lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20210521 12:13:51.948" starttime="20210521 12:13:51.881"></status>
</kw>
<kw name="VerifyResponse">
<arguments>
<arg>${resp.status_code}</arg>
<arg>204</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${actual_response_value}</arg>
<arg>${expected_response_value}</arg>
</arguments>
<msg timestamp="20210521 12:13:51.950" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210521 12:13:51.950" starttime="20210521 12:13:51.949"></status>
</kw>
<status status="PASS" endtime="20210521 12:13:51.950" starttime="20210521 12:13:51.948"></status>
</kw>
<status status="PASS" endtime="20210521 12:13:51.950" starttime="20210521 12:13:51.870"></status>
</kw>
<status status="PASS" endtime="20210521 12:13:51.950" starttime="20210521 12:13:51.870"></status>
</kw>
<kw type="foritem" name="${i} = 4">
<kw name="SendToDatarouter">
<arguments>
<arg>${FILE_PATH}</arg>
<arg>${NR_VALID_METADATA_PATH}</arg>
<arg>X-ONAP-RequestID=${i}</arg>
<arg>${testnr}</arg>
<arg>${i}</arg>
</arguments>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${filepath}</arg>
</arguments>
<assign>
<var>${pmdata}</var>
</assign>
<msg timestamp="20210521 12:13:51.956" html="yes" level="INFO">Getting file '&lt;a href="file:///home/lasse/upstream/pm-mapper/csit/tests/filesprocessingconfigpmmapper/assets/ABigFile.xml"&gt;/home/lasse/upstream/pm-mapper/csit/tests/filesprocessingconfigpmmapper/assets/ABigFile.xml&lt;/a&gt;'.</msg>
<msg timestamp="20210521 12:13:51.957" level="INFO">${pmdata} = &lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;?xml-stylesheet type="text/xsl" href="MeasDataCollection.xsl"?&gt;
&lt;measCollecFile xmlns="http://www.3gpp.org/ftp/specs/archive/32_series/32.435#measCollec"
xmlns:...</msg>
<status status="PASS" endtime="20210521 12:13:51.957" starttime="20210521 12:13:51.954"></status>
</kw>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${metadatapath}</arg>
</arguments>
<assign>
<var>${metatdata}</var>
</assign>
<msg timestamp="20210521 12:13:51.958" html="yes" level="INFO">Getting file '&lt;a href="file:///home/lasse/upstream/pm-mapper/csit/tests/filesprocessingconfigpmmapper/assets/valid_metadata.json"&gt;/home/lasse/upstream/pm-mapper/csit/tests/filesprocessingconfigpmmapper/assets/valid_metadata.json&lt;/a&gt;'.</msg>
<msg timestamp="20210521 12:13:51.958" level="INFO">${metatdata} = {
    "productName": "gnb",
    "vendorName": "Ericsson",
    "lastEpochMicrosec": "1538478000000",
    "sourceName": "oteNB5309",
    "startEpochMicrosec": "1538478900000",
    "timeZoneOffset": "UTC...</msg>
<status status="PASS" endtime="20210521 12:13:51.958" starttime="20210521 12:13:51.957"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>${testnr}</arg>
<arg>${i}</arg>
<arg>.xml</arg>
</arguments>
<assign>
<var>${newFilename}</var>
</assign>
<msg timestamp="20210521 12:13:51.960" level="INFO">${newFilename} = Athird-4.xml</msg>
<status status="PASS" endtime="20210521 12:13:51.960" starttime="20210521 12:13:51.959"></status>
</kw>
<kw name="PutCall">
<arguments>
<arg>${PUBLISH_NODE_URL}/${newFilename}</arg>
<arg>${request_id}</arg>
<arg>${pmdata}</arg>
<arg>${metatdata.replace("\n","")}</arg>
<arg>pmmapper</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>X-ONAP-RequestID=${request_id}</arg>
<arg>X-DMAAP-DR-META=${meta}</arg>
<arg>Content-Type=application/octet-stream</arg>
<arg>X-DMAAP-DR-ON-BEHALF-OF=${user}</arg>
<arg>Authorization=Basic cG1tYXBwZXI6cG1tYXBwZXI=</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20210521 12:13:51.967" level="INFO">${headers} = {u'X-ONAP-RequestID': u'X-ONAP-RequestID=4', u'X-DMAAP-DR-META': u'{    "productName": "gnb",    "vendorName": "Ericsson",    "lastEpochMicrosec": "1538478000000",    "sourceName": "oteNB5309",    "st...</msg>
<status status="PASS" endtime="20210521 12:13:51.967" starttime="20210521 12:13:51.962"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>requests.put('${url}', data="""${data}""", headers=${headers}, verify=False, allow_redirects=False)</arg>
<arg>requests</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20210521 12:13:51.995" level="INFO">/usr/local/lib/python2.7/dist-packages/urllib3/connectionpool.py:988: InsecureRequestWarning: Unverified HTTPS request is being made to host '172.18.0.2'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings
  InsecureRequestWarning,</msg>
<msg timestamp="20210521 12:13:51.996" level="INFO">${resp} = &lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20210521 12:13:51.996" starttime="20210521 12:13:51.968"></status>
</kw>
<msg timestamp="20210521 12:13:51.996" level="INFO">${resp} = &lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20210521 12:13:51.996" starttime="20210521 12:13:51.960"></status>
</kw>
<kw name="VerifyResponse">
<arguments>
<arg>${resp.status_code}</arg>
<arg>204</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${actual_response_value}</arg>
<arg>${expected_response_value}</arg>
</arguments>
<msg timestamp="20210521 12:13:51.998" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210521 12:13:51.998" starttime="20210521 12:13:51.997"></status>
</kw>
<status status="PASS" endtime="20210521 12:13:51.998" starttime="20210521 12:13:51.996"></status>
</kw>
<status status="PASS" endtime="20210521 12:13:51.998" starttime="20210521 12:13:51.950"></status>
</kw>
<status status="PASS" endtime="20210521 12:13:51.998" starttime="20210521 12:13:51.950"></status>
</kw>
<kw type="foritem" name="${i} = 5">
<kw name="SendToDatarouter">
<arguments>
<arg>${FILE_PATH}</arg>
<arg>${NR_VALID_METADATA_PATH}</arg>
<arg>X-ONAP-RequestID=${i}</arg>
<arg>${testnr}</arg>
<arg>${i}</arg>
</arguments>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${filepath}</arg>
</arguments>
<assign>
<var>${pmdata}</var>
</assign>
<msg timestamp="20210521 12:13:52.000" html="yes" level="INFO">Getting file '&lt;a href="file:///home/lasse/upstream/pm-mapper/csit/tests/filesprocessingconfigpmmapper/assets/ABigFile.xml"&gt;/home/lasse/upstream/pm-mapper/csit/tests/filesprocessingconfigpmmapper/assets/ABigFile.xml&lt;/a&gt;'.</msg>
<msg timestamp="20210521 12:13:52.001" level="INFO">${pmdata} = &lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;?xml-stylesheet type="text/xsl" href="MeasDataCollection.xsl"?&gt;
&lt;measCollecFile xmlns="http://www.3gpp.org/ftp/specs/archive/32_series/32.435#measCollec"
xmlns:...</msg>
<status status="PASS" endtime="20210521 12:13:52.001" starttime="20210521 12:13:52.000"></status>
</kw>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${metadatapath}</arg>
</arguments>
<assign>
<var>${metatdata}</var>
</assign>
<msg timestamp="20210521 12:13:52.001" html="yes" level="INFO">Getting file '&lt;a href="file:///home/lasse/upstream/pm-mapper/csit/tests/filesprocessingconfigpmmapper/assets/valid_metadata.json"&gt;/home/lasse/upstream/pm-mapper/csit/tests/filesprocessingconfigpmmapper/assets/valid_metadata.json&lt;/a&gt;'.</msg>
<msg timestamp="20210521 12:13:52.002" level="INFO">${metatdata} = {
    "productName": "gnb",
    "vendorName": "Ericsson",
    "lastEpochMicrosec": "1538478000000",
    "sourceName": "oteNB5309",
    "startEpochMicrosec": "1538478900000",
    "timeZoneOffset": "UTC...</msg>
<status status="PASS" endtime="20210521 12:13:52.002" starttime="20210521 12:13:52.001"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>${testnr}</arg>
<arg>${i}</arg>
<arg>.xml</arg>
</arguments>
<assign>
<var>${newFilename}</var>
</assign>
<msg timestamp="20210521 12:13:52.003" level="INFO">${newFilename} = Athird-5.xml</msg>
<status status="PASS" endtime="20210521 12:13:52.003" starttime="20210521 12:13:52.002"></status>
</kw>
<kw name="PutCall">
<arguments>
<arg>${PUBLISH_NODE_URL}/${newFilename}</arg>
<arg>${request_id}</arg>
<arg>${pmdata}</arg>
<arg>${metatdata.replace("\n","")}</arg>
<arg>pmmapper</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>X-ONAP-RequestID=${request_id}</arg>
<arg>X-DMAAP-DR-META=${meta}</arg>
<arg>Content-Type=application/octet-stream</arg>
<arg>X-DMAAP-DR-ON-BEHALF-OF=${user}</arg>
<arg>Authorization=Basic cG1tYXBwZXI6cG1tYXBwZXI=</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20210521 12:13:52.006" level="INFO">${headers} = {u'X-ONAP-RequestID': u'X-ONAP-RequestID=5', u'X-DMAAP-DR-META': u'{    "productName": "gnb",    "vendorName": "Ericsson",    "lastEpochMicrosec": "1538478000000",    "sourceName": "oteNB5309",    "st...</msg>
<status status="PASS" endtime="20210521 12:13:52.006" starttime="20210521 12:13:52.004"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>requests.put('${url}', data="""${data}""", headers=${headers}, verify=False, allow_redirects=False)</arg>
<arg>requests</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20210521 12:13:52.044" level="INFO">/usr/local/lib/python2.7/dist-packages/urllib3/connectionpool.py:988: InsecureRequestWarning: Unverified HTTPS request is being made to host '172.18.0.2'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings
  InsecureRequestWarning,</msg>
<msg timestamp="20210521 12:13:52.045" level="INFO">${resp} = &lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20210521 12:13:52.045" starttime="20210521 12:13:52.006"></status>
</kw>
<msg timestamp="20210521 12:13:52.045" level="INFO">${resp} = &lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20210521 12:13:52.045" starttime="20210521 12:13:52.003"></status>
</kw>
<kw name="VerifyResponse">
<arguments>
<arg>${resp.status_code}</arg>
<arg>204</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${actual_response_value}</arg>
<arg>${expected_response_value}</arg>
</arguments>
<msg timestamp="20210521 12:13:52.049" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210521 12:13:52.049" starttime="20210521 12:13:52.048"></status>
</kw>
<status status="PASS" endtime="20210521 12:13:52.049" starttime="20210521 12:13:52.046"></status>
</kw>
<status status="PASS" endtime="20210521 12:13:52.049" starttime="20210521 12:13:51.999"></status>
</kw>
<status status="PASS" endtime="20210521 12:13:52.049" starttime="20210521 12:13:51.999"></status>
</kw>
<kw type="foritem" name="${i} = 6">
<kw name="SendToDatarouter">
<arguments>
<arg>${FILE_PATH}</arg>
<arg>${NR_VALID_METADATA_PATH}</arg>
<arg>X-ONAP-RequestID=${i}</arg>
<arg>${testnr}</arg>
<arg>${i}</arg>
</arguments>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${filepath}</arg>
</arguments>
<assign>
<var>${pmdata}</var>
</assign>
<msg timestamp="20210521 12:13:52.051" html="yes" level="INFO">Getting file '&lt;a href="file:///home/lasse/upstream/pm-mapper/csit/tests/filesprocessingconfigpmmapper/assets/ABigFile.xml"&gt;/home/lasse/upstream/pm-mapper/csit/tests/filesprocessingconfigpmmapper/assets/ABigFile.xml&lt;/a&gt;'.</msg>
<msg timestamp="20210521 12:13:52.052" level="INFO">${pmdata} = &lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;?xml-stylesheet type="text/xsl" href="MeasDataCollection.xsl"?&gt;
&lt;measCollecFile xmlns="http://www.3gpp.org/ftp/specs/archive/32_series/32.435#measCollec"
xmlns:...</msg>
<status status="PASS" endtime="20210521 12:13:52.052" starttime="20210521 12:13:52.051"></status>
</kw>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${metadatapath}</arg>
</arguments>
<assign>
<var>${metatdata}</var>
</assign>
<msg timestamp="20210521 12:13:52.052" html="yes" level="INFO">Getting file '&lt;a href="file:///home/lasse/upstream/pm-mapper/csit/tests/filesprocessingconfigpmmapper/assets/valid_metadata.json"&gt;/home/lasse/upstream/pm-mapper/csit/tests/filesprocessingconfigpmmapper/assets/valid_metadata.json&lt;/a&gt;'.</msg>
<msg timestamp="20210521 12:13:52.053" level="INFO">${metatdata} = {
    "productName": "gnb",
    "vendorName": "Ericsson",
    "lastEpochMicrosec": "1538478000000",
    "sourceName": "oteNB5309",
    "startEpochMicrosec": "1538478900000",
    "timeZoneOffset": "UTC...</msg>
<status status="PASS" endtime="20210521 12:13:52.053" starttime="20210521 12:13:52.052"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>${testnr}</arg>
<arg>${i}</arg>
<arg>.xml</arg>
</arguments>
<assign>
<var>${newFilename}</var>
</assign>
<msg timestamp="20210521 12:13:52.053" level="INFO">${newFilename} = Athird-6.xml</msg>
<status status="PASS" endtime="20210521 12:13:52.053" starttime="20210521 12:13:52.053"></status>
</kw>
<kw name="PutCall">
<arguments>
<arg>${PUBLISH_NODE_URL}/${newFilename}</arg>
<arg>${request_id}</arg>
<arg>${pmdata}</arg>
<arg>${metatdata.replace("\n","")}</arg>
<arg>pmmapper</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>X-ONAP-RequestID=${request_id}</arg>
<arg>X-DMAAP-DR-META=${meta}</arg>
<arg>Content-Type=application/octet-stream</arg>
<arg>X-DMAAP-DR-ON-BEHALF-OF=${user}</arg>
<arg>Authorization=Basic cG1tYXBwZXI6cG1tYXBwZXI=</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20210521 12:13:52.061" level="INFO">${headers} = {u'X-ONAP-RequestID': u'X-ONAP-RequestID=6', u'X-DMAAP-DR-META': u'{    "productName": "gnb",    "vendorName": "Ericsson",    "lastEpochMicrosec": "1538478000000",    "sourceName": "oteNB5309",    "st...</msg>
<status status="PASS" endtime="20210521 12:13:52.061" starttime="20210521 12:13:52.056"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>requests.put('${url}', data="""${data}""", headers=${headers}, verify=False, allow_redirects=False)</arg>
<arg>requests</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20210521 12:13:52.094" level="INFO">/usr/local/lib/python2.7/dist-packages/urllib3/connectionpool.py:988: InsecureRequestWarning: Unverified HTTPS request is being made to host '172.18.0.2'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings
  InsecureRequestWarning,</msg>
<msg timestamp="20210521 12:13:52.094" level="INFO">${resp} = &lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20210521 12:13:52.094" starttime="20210521 12:13:52.062"></status>
</kw>
<msg timestamp="20210521 12:13:52.095" level="INFO">${resp} = &lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20210521 12:13:52.095" starttime="20210521 12:13:52.054"></status>
</kw>
<kw name="VerifyResponse">
<arguments>
<arg>${resp.status_code}</arg>
<arg>204</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${actual_response_value}</arg>
<arg>${expected_response_value}</arg>
</arguments>
<msg timestamp="20210521 12:13:52.110" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210521 12:13:52.110" starttime="20210521 12:13:52.110"></status>
</kw>
<status status="PASS" endtime="20210521 12:13:52.111" starttime="20210521 12:13:52.095"></status>
</kw>
<status status="PASS" endtime="20210521 12:13:52.111" starttime="20210521 12:13:52.050"></status>
</kw>
<status status="PASS" endtime="20210521 12:13:52.111" starttime="20210521 12:13:52.049"></status>
</kw>
<kw type="foritem" name="${i} = 7">
<kw name="SendToDatarouter">
<arguments>
<arg>${FILE_PATH}</arg>
<arg>${NR_VALID_METADATA_PATH}</arg>
<arg>X-ONAP-RequestID=${i}</arg>
<arg>${testnr}</arg>
<arg>${i}</arg>
</arguments>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${filepath}</arg>
</arguments>
<assign>
<var>${pmdata}</var>
</assign>
<msg timestamp="20210521 12:13:52.113" html="yes" level="INFO">Getting file '&lt;a href="file:///home/lasse/upstream/pm-mapper/csit/tests/filesprocessingconfigpmmapper/assets/ABigFile.xml"&gt;/home/lasse/upstream/pm-mapper/csit/tests/filesprocessingconfigpmmapper/assets/ABigFile.xml&lt;/a&gt;'.</msg>
<msg timestamp="20210521 12:13:52.113" level="INFO">${pmdata} = &lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;?xml-stylesheet type="text/xsl" href="MeasDataCollection.xsl"?&gt;
&lt;measCollecFile xmlns="http://www.3gpp.org/ftp/specs/archive/32_series/32.435#measCollec"
xmlns:...</msg>
<status status="PASS" endtime="20210521 12:13:52.114" starttime="20210521 12:13:52.112"></status>
</kw>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${metadatapath}</arg>
</arguments>
<assign>
<var>${metatdata}</var>
</assign>
<msg timestamp="20210521 12:13:52.114" html="yes" level="INFO">Getting file '&lt;a href="file:///home/lasse/upstream/pm-mapper/csit/tests/filesprocessingconfigpmmapper/assets/valid_metadata.json"&gt;/home/lasse/upstream/pm-mapper/csit/tests/filesprocessingconfigpmmapper/assets/valid_metadata.json&lt;/a&gt;'.</msg>
<msg timestamp="20210521 12:13:52.115" level="INFO">${metatdata} = {
    "productName": "gnb",
    "vendorName": "Ericsson",
    "lastEpochMicrosec": "1538478000000",
    "sourceName": "oteNB5309",
    "startEpochMicrosec": "1538478900000",
    "timeZoneOffset": "UTC...</msg>
<status status="PASS" endtime="20210521 12:13:52.115" starttime="20210521 12:13:52.114"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>${testnr}</arg>
<arg>${i}</arg>
<arg>.xml</arg>
</arguments>
<assign>
<var>${newFilename}</var>
</assign>
<msg timestamp="20210521 12:13:52.116" level="INFO">${newFilename} = Athird-7.xml</msg>
<status status="PASS" endtime="20210521 12:13:52.116" starttime="20210521 12:13:52.115"></status>
</kw>
<kw name="PutCall">
<arguments>
<arg>${PUBLISH_NODE_URL}/${newFilename}</arg>
<arg>${request_id}</arg>
<arg>${pmdata}</arg>
<arg>${metatdata.replace("\n","")}</arg>
<arg>pmmapper</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>X-ONAP-RequestID=${request_id}</arg>
<arg>X-DMAAP-DR-META=${meta}</arg>
<arg>Content-Type=application/octet-stream</arg>
<arg>X-DMAAP-DR-ON-BEHALF-OF=${user}</arg>
<arg>Authorization=Basic cG1tYXBwZXI6cG1tYXBwZXI=</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20210521 12:13:52.126" level="INFO">${headers} = {u'X-ONAP-RequestID': u'X-ONAP-RequestID=7', u'X-DMAAP-DR-META': u'{    "productName": "gnb",    "vendorName": "Ericsson",    "lastEpochMicrosec": "1538478000000",    "sourceName": "oteNB5309",    "st...</msg>
<status status="PASS" endtime="20210521 12:13:52.126" starttime="20210521 12:13:52.124"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>requests.put('${url}', data="""${data}""", headers=${headers}, verify=False, allow_redirects=False)</arg>
<arg>requests</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20210521 12:13:52.160" level="INFO">/usr/local/lib/python2.7/dist-packages/urllib3/connectionpool.py:988: InsecureRequestWarning: Unverified HTTPS request is being made to host '172.18.0.2'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings
  InsecureRequestWarning,</msg>
<msg timestamp="20210521 12:13:52.161" level="INFO">${resp} = &lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20210521 12:13:52.161" starttime="20210521 12:13:52.126"></status>
</kw>
<msg timestamp="20210521 12:13:52.162" level="INFO">${resp} = &lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20210521 12:13:52.162" starttime="20210521 12:13:52.116"></status>
</kw>
<kw name="VerifyResponse">
<arguments>
<arg>${resp.status_code}</arg>
<arg>204</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${actual_response_value}</arg>
<arg>${expected_response_value}</arg>
</arguments>
<msg timestamp="20210521 12:13:52.163" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210521 12:13:52.163" starttime="20210521 12:13:52.163"></status>
</kw>
<status status="PASS" endtime="20210521 12:13:52.164" starttime="20210521 12:13:52.162"></status>
</kw>
<status status="PASS" endtime="20210521 12:13:52.164" starttime="20210521 12:13:52.111"></status>
</kw>
<status status="PASS" endtime="20210521 12:13:52.164" starttime="20210521 12:13:52.111"></status>
</kw>
<kw type="foritem" name="${i} = 8">
<kw name="SendToDatarouter">
<arguments>
<arg>${FILE_PATH}</arg>
<arg>${NR_VALID_METADATA_PATH}</arg>
<arg>X-ONAP-RequestID=${i}</arg>
<arg>${testnr}</arg>
<arg>${i}</arg>
</arguments>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${filepath}</arg>
</arguments>
<assign>
<var>${pmdata}</var>
</assign>
<msg timestamp="20210521 12:13:52.166" html="yes" level="INFO">Getting file '&lt;a href="file:///home/lasse/upstream/pm-mapper/csit/tests/filesprocessingconfigpmmapper/assets/ABigFile.xml"&gt;/home/lasse/upstream/pm-mapper/csit/tests/filesprocessingconfigpmmapper/assets/ABigFile.xml&lt;/a&gt;'.</msg>
<msg timestamp="20210521 12:13:52.166" level="INFO">${pmdata} = &lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;?xml-stylesheet type="text/xsl" href="MeasDataCollection.xsl"?&gt;
&lt;measCollecFile xmlns="http://www.3gpp.org/ftp/specs/archive/32_series/32.435#measCollec"
xmlns:...</msg>
<status status="PASS" endtime="20210521 12:13:52.166" starttime="20210521 12:13:52.165"></status>
</kw>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${metadatapath}</arg>
</arguments>
<assign>
<var>${metatdata}</var>
</assign>
<msg timestamp="20210521 12:13:52.167" html="yes" level="INFO">Getting file '&lt;a href="file:///home/lasse/upstream/pm-mapper/csit/tests/filesprocessingconfigpmmapper/assets/valid_metadata.json"&gt;/home/lasse/upstream/pm-mapper/csit/tests/filesprocessingconfigpmmapper/assets/valid_metadata.json&lt;/a&gt;'.</msg>
<msg timestamp="20210521 12:13:52.167" level="INFO">${metatdata} = {
    "productName": "gnb",
    "vendorName": "Ericsson",
    "lastEpochMicrosec": "1538478000000",
    "sourceName": "oteNB5309",
    "startEpochMicrosec": "1538478900000",
    "timeZoneOffset": "UTC...</msg>
<status status="PASS" endtime="20210521 12:13:52.167" starttime="20210521 12:13:52.167"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>${testnr}</arg>
<arg>${i}</arg>
<arg>.xml</arg>
</arguments>
<assign>
<var>${newFilename}</var>
</assign>
<msg timestamp="20210521 12:13:52.169" level="INFO">${newFilename} = Athird-8.xml</msg>
<status status="PASS" endtime="20210521 12:13:52.169" starttime="20210521 12:13:52.168"></status>
</kw>
<kw name="PutCall">
<arguments>
<arg>${PUBLISH_NODE_URL}/${newFilename}</arg>
<arg>${request_id}</arg>
<arg>${pmdata}</arg>
<arg>${metatdata.replace("\n","")}</arg>
<arg>pmmapper</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>X-ONAP-RequestID=${request_id}</arg>
<arg>X-DMAAP-DR-META=${meta}</arg>
<arg>Content-Type=application/octet-stream</arg>
<arg>X-DMAAP-DR-ON-BEHALF-OF=${user}</arg>
<arg>Authorization=Basic cG1tYXBwZXI6cG1tYXBwZXI=</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20210521 12:13:52.175" level="INFO">${headers} = {u'X-ONAP-RequestID': u'X-ONAP-RequestID=8', u'X-DMAAP-DR-META': u'{    "productName": "gnb",    "vendorName": "Ericsson",    "lastEpochMicrosec": "1538478000000",    "sourceName": "oteNB5309",    "st...</msg>
<status status="PASS" endtime="20210521 12:13:52.175" starttime="20210521 12:13:52.171"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>requests.put('${url}', data="""${data}""", headers=${headers}, verify=False, allow_redirects=False)</arg>
<arg>requests</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20210521 12:13:52.208" level="INFO">/usr/local/lib/python2.7/dist-packages/urllib3/connectionpool.py:988: InsecureRequestWarning: Unverified HTTPS request is being made to host '172.18.0.2'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings
  InsecureRequestWarning,</msg>
<msg timestamp="20210521 12:13:52.209" level="INFO">${resp} = &lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20210521 12:13:52.209" starttime="20210521 12:13:52.175"></status>
</kw>
<msg timestamp="20210521 12:13:52.209" level="INFO">${resp} = &lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20210521 12:13:52.209" starttime="20210521 12:13:52.169"></status>
</kw>
<kw name="VerifyResponse">
<arguments>
<arg>${resp.status_code}</arg>
<arg>204</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${actual_response_value}</arg>
<arg>${expected_response_value}</arg>
</arguments>
<msg timestamp="20210521 12:13:52.217" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210521 12:13:52.217" starttime="20210521 12:13:52.212"></status>
</kw>
<status status="PASS" endtime="20210521 12:13:52.217" starttime="20210521 12:13:52.209"></status>
</kw>
<status status="PASS" endtime="20210521 12:13:52.218" starttime="20210521 12:13:52.164"></status>
</kw>
<status status="PASS" endtime="20210521 12:13:52.218" starttime="20210521 12:13:52.164"></status>
</kw>
<kw type="foritem" name="${i} = 9">
<kw name="SendToDatarouter">
<arguments>
<arg>${FILE_PATH}</arg>
<arg>${NR_VALID_METADATA_PATH}</arg>
<arg>X-ONAP-RequestID=${i}</arg>
<arg>${testnr}</arg>
<arg>${i}</arg>
</arguments>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${filepath}</arg>
</arguments>
<assign>
<var>${pmdata}</var>
</assign>
<msg timestamp="20210521 12:13:52.222" html="yes" level="INFO">Getting file '&lt;a href="file:///home/lasse/upstream/pm-mapper/csit/tests/filesprocessingconfigpmmapper/assets/ABigFile.xml"&gt;/home/lasse/upstream/pm-mapper/csit/tests/filesprocessingconfigpmmapper/assets/ABigFile.xml&lt;/a&gt;'.</msg>
<msg timestamp="20210521 12:13:52.223" level="INFO">${pmdata} = &lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;?xml-stylesheet type="text/xsl" href="MeasDataCollection.xsl"?&gt;
&lt;measCollecFile xmlns="http://www.3gpp.org/ftp/specs/archive/32_series/32.435#measCollec"
xmlns:...</msg>
<status status="PASS" endtime="20210521 12:13:52.223" starttime="20210521 12:13:52.221"></status>
</kw>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${metadatapath}</arg>
</arguments>
<assign>
<var>${metatdata}</var>
</assign>
<msg timestamp="20210521 12:13:52.224" html="yes" level="INFO">Getting file '&lt;a href="file:///home/lasse/upstream/pm-mapper/csit/tests/filesprocessingconfigpmmapper/assets/valid_metadata.json"&gt;/home/lasse/upstream/pm-mapper/csit/tests/filesprocessingconfigpmmapper/assets/valid_metadata.json&lt;/a&gt;'.</msg>
<msg timestamp="20210521 12:13:52.224" level="INFO">${metatdata} = {
    "productName": "gnb",
    "vendorName": "Ericsson",
    "lastEpochMicrosec": "1538478000000",
    "sourceName": "oteNB5309",
    "startEpochMicrosec": "1538478900000",
    "timeZoneOffset": "UTC...</msg>
<status status="PASS" endtime="20210521 12:13:52.224" starttime="20210521 12:13:52.223"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>${testnr}</arg>
<arg>${i}</arg>
<arg>.xml</arg>
</arguments>
<assign>
<var>${newFilename}</var>
</assign>
<msg timestamp="20210521 12:13:52.225" level="INFO">${newFilename} = Athird-9.xml</msg>
<status status="PASS" endtime="20210521 12:13:52.225" starttime="20210521 12:13:52.224"></status>
</kw>
<kw name="PutCall">
<arguments>
<arg>${PUBLISH_NODE_URL}/${newFilename}</arg>
<arg>${request_id}</arg>
<arg>${pmdata}</arg>
<arg>${metatdata.replace("\n","")}</arg>
<arg>pmmapper</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>X-ONAP-RequestID=${request_id}</arg>
<arg>X-DMAAP-DR-META=${meta}</arg>
<arg>Content-Type=application/octet-stream</arg>
<arg>X-DMAAP-DR-ON-BEHALF-OF=${user}</arg>
<arg>Authorization=Basic cG1tYXBwZXI6cG1tYXBwZXI=</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20210521 12:13:52.228" level="INFO">${headers} = {u'X-ONAP-RequestID': u'X-ONAP-RequestID=9', u'X-DMAAP-DR-META': u'{    "productName": "gnb",    "vendorName": "Ericsson",    "lastEpochMicrosec": "1538478000000",    "sourceName": "oteNB5309",    "st...</msg>
<status status="PASS" endtime="20210521 12:13:52.228" starttime="20210521 12:13:52.226"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>requests.put('${url}', data="""${data}""", headers=${headers}, verify=False, allow_redirects=False)</arg>
<arg>requests</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20210521 12:13:52.261" level="INFO">/usr/local/lib/python2.7/dist-packages/urllib3/connectionpool.py:988: InsecureRequestWarning: Unverified HTTPS request is being made to host '172.18.0.2'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings
  InsecureRequestWarning,</msg>
<msg timestamp="20210521 12:13:52.262" level="INFO">${resp} = &lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20210521 12:13:52.262" starttime="20210521 12:13:52.228"></status>
</kw>
<msg timestamp="20210521 12:13:52.262" level="INFO">${resp} = &lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20210521 12:13:52.262" starttime="20210521 12:13:52.225"></status>
</kw>
<kw name="VerifyResponse">
<arguments>
<arg>${resp.status_code}</arg>
<arg>204</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${actual_response_value}</arg>
<arg>${expected_response_value}</arg>
</arguments>
<msg timestamp="20210521 12:13:52.264" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210521 12:13:52.264" starttime="20210521 12:13:52.264"></status>
</kw>
<status status="PASS" endtime="20210521 12:13:52.265" starttime="20210521 12:13:52.263"></status>
</kw>
<status status="PASS" endtime="20210521 12:13:52.265" starttime="20210521 12:13:52.218"></status>
</kw>
<status status="PASS" endtime="20210521 12:13:52.265" starttime="20210521 12:13:52.218"></status>
</kw>
<status status="PASS" endtime="20210521 12:13:52.265" starttime="20210521 12:13:51.715"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>20s</arg>
</arguments>
<msg timestamp="20210521 12:14:12.270" level="INFO">Slept 20 seconds</msg>
<status status="PASS" endtime="20210521 12:14:12.270" starttime="20210521 12:13:52.265"></status>
</kw>
<status status="PASS" endtime="20210521 12:14:12.270" starttime="20210521 12:13:51.715"></status>
</kw>
<kw name="GetLogsOutput">
<assign>
<var>${alllogs}</var>
</assign>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>${CLI_EXEC_LOGS_LIST}</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${filesString}</var>
</assign>
<msg timestamp="20210521 12:14:12.271" level="INFO">Starting process:
docker exec datarouter-node /bin/sh -c "ls /opt/app/datartr/logs"</msg>
<msg timestamp="20210521 12:14:12.274" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210521 12:14:12.435" level="INFO">Process completed.</msg>
<msg timestamp="20210521 12:14:12.435" level="INFO">${filesString} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20210521 12:14:12.435" starttime="20210521 12:14:12.271"></status>
</kw>
<kw name="Get Log Files List" library="LogReader">
<arguments>
<arg>${filesString.stdout}</arg>
</arguments>
<assign>
<var>${filesList}</var>
</assign>
<msg timestamp="20210521 12:14:12.437" level="INFO">${filesList} = [u'events-202105210912.log', u'events-202105210913.log', u'events.log']</msg>
<status status="PASS" endtime="20210521 12:14:12.437" starttime="20210521 12:14:12.436"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<msg timestamp="20210521 12:14:12.437" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210521 12:14:12.437" starttime="20210521 12:14:12.437"></status>
</kw>
<kw type="for" name="${file} IN [ @{filesList} ]">
<kw type="foritem" name="${file} = events-202105210912.log">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>"cat /opt/app/datartr/logs/</arg>
<arg>${file}</arg>
<arg>"</arg>
</arguments>
<assign>
<var>${file_path}</var>
</assign>
<msg timestamp="20210521 12:14:12.438" level="INFO">${file_path} = "cat /opt/app/datartr/logs/events-202105210912.log"</msg>
<status status="PASS" endtime="20210521 12:14:12.439" starttime="20210521 12:14:12.438"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>docker exec datarouter-node /bin/sh -c</arg>
<arg>${file_path}</arg>
</arguments>
<assign>
<var>${exec}</var>
</assign>
<msg timestamp="20210521 12:14:12.439" level="INFO">${exec} = docker exec datarouter-node /bin/sh -c "cat /opt/app/datartr/logs/events-202105210912.log"</msg>
<status status="PASS" endtime="20210521 12:14:12.439" starttime="20210521 12:14:12.439"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>${exec}</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${single_file}</var>
</assign>
<msg timestamp="20210521 12:14:12.440" level="INFO">Starting process:
docker exec datarouter-node /bin/sh -c "cat /opt/app/datartr/logs/events-202105210912.log"</msg>
<msg timestamp="20210521 12:14:12.443" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210521 12:14:12.590" level="INFO">Process completed.</msg>
<msg timestamp="20210521 12:14:12.591" level="INFO">${single_file} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20210521 12:14:12.591" starttime="20210521 12:14:12.440"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=\n</arg>
<arg>${output}</arg>
<arg>${single_file.stdout}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<msg timestamp="20210521 12:14:12.593" level="INFO">${output} = 
2021-05-21T09:12:27.953Z|PUB|1621588347859.dmaap-dr-node|1|https://dmaap-dr-node/publish/1/Afirst-0.xml|PUT|application/octet-stream|5942|172.18.0.1|pmmapper|204
2021-05-21T09:12:28.027Z|PUB|16215883...</msg>
<status status="PASS" endtime="20210521 12:14:12.593" starttime="20210521 12:14:12.592"></status>
</kw>
<status status="PASS" endtime="20210521 12:14:12.593" starttime="20210521 12:14:12.438"></status>
</kw>
<kw type="foritem" name="${file} = events-202105210913.log">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>"cat /opt/app/datartr/logs/</arg>
<arg>${file}</arg>
<arg>"</arg>
</arguments>
<assign>
<var>${file_path}</var>
</assign>
<msg timestamp="20210521 12:14:12.594" level="INFO">${file_path} = "cat /opt/app/datartr/logs/events-202105210913.log"</msg>
<status status="PASS" endtime="20210521 12:14:12.594" starttime="20210521 12:14:12.593"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>docker exec datarouter-node /bin/sh -c</arg>
<arg>${file_path}</arg>
</arguments>
<assign>
<var>${exec}</var>
</assign>
<msg timestamp="20210521 12:14:12.594" level="INFO">${exec} = docker exec datarouter-node /bin/sh -c "cat /opt/app/datartr/logs/events-202105210913.log"</msg>
<status status="PASS" endtime="20210521 12:14:12.594" starttime="20210521 12:14:12.594"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>${exec}</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${single_file}</var>
</assign>
<msg timestamp="20210521 12:14:12.595" level="INFO">Starting process:
docker exec datarouter-node /bin/sh -c "cat /opt/app/datartr/logs/events-202105210913.log"</msg>
<msg timestamp="20210521 12:14:12.598" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210521 12:14:12.749" level="INFO">Process completed.</msg>
<msg timestamp="20210521 12:14:12.749" level="INFO">${single_file} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20210521 12:14:12.749" starttime="20210521 12:14:12.595"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=\n</arg>
<arg>${output}</arg>
<arg>${single_file.stdout}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<msg timestamp="20210521 12:14:12.751" level="INFO">${output} = 
2021-05-21T09:12:27.953Z|PUB|1621588347859.dmaap-dr-node|1|https://dmaap-dr-node/publish/1/Afirst-0.xml|PUT|application/octet-stream|5942|172.18.0.1|pmmapper|204
2021-05-21T09:12:28.027Z|PUB|16215883...</msg>
<status status="PASS" endtime="20210521 12:14:12.751" starttime="20210521 12:14:12.750"></status>
</kw>
<status status="PASS" endtime="20210521 12:14:12.751" starttime="20210521 12:14:12.593"></status>
</kw>
<kw type="foritem" name="${file} = events.log">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>"cat /opt/app/datartr/logs/</arg>
<arg>${file}</arg>
<arg>"</arg>
</arguments>
<assign>
<var>${file_path}</var>
</assign>
<msg timestamp="20210521 12:14:12.752" level="INFO">${file_path} = "cat /opt/app/datartr/logs/events.log"</msg>
<status status="PASS" endtime="20210521 12:14:12.752" starttime="20210521 12:14:12.751"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>docker exec datarouter-node /bin/sh -c</arg>
<arg>${file_path}</arg>
</arguments>
<assign>
<var>${exec}</var>
</assign>
<msg timestamp="20210521 12:14:12.752" level="INFO">${exec} = docker exec datarouter-node /bin/sh -c "cat /opt/app/datartr/logs/events.log"</msg>
<status status="PASS" endtime="20210521 12:14:12.752" starttime="20210521 12:14:12.752"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>${exec}</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${single_file}</var>
</assign>
<msg timestamp="20210521 12:14:12.753" level="INFO">Starting process:
docker exec datarouter-node /bin/sh -c "cat /opt/app/datartr/logs/events.log"</msg>
<msg timestamp="20210521 12:14:12.756" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210521 12:14:12.899" level="INFO">Process completed.</msg>
<msg timestamp="20210521 12:14:12.899" level="INFO">${single_file} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20210521 12:14:12.899" starttime="20210521 12:14:12.753"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=\n</arg>
<arg>${output}</arg>
<arg>${single_file.stdout}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<msg timestamp="20210521 12:14:12.901" level="INFO">${output} = 
2021-05-21T09:12:27.953Z|PUB|1621588347859.dmaap-dr-node|1|https://dmaap-dr-node/publish/1/Afirst-0.xml|PUT|application/octet-stream|5942|172.18.0.1|pmmapper|204
2021-05-21T09:12:28.027Z|PUB|16215883...</msg>
<status status="PASS" endtime="20210521 12:14:12.901" starttime="20210521 12:14:12.900"></status>
</kw>
<status status="PASS" endtime="20210521 12:14:12.901" starttime="20210521 12:14:12.751"></status>
</kw>
<status status="PASS" endtime="20210521 12:14:12.901" starttime="20210521 12:14:12.438"></status>
</kw>
<msg timestamp="20210521 12:14:12.901" level="INFO">${alllogs} = 
2021-05-21T09:12:27.953Z|PUB|1621588347859.dmaap-dr-node|1|https://dmaap-dr-node/publish/1/Afirst-0.xml|PUT|application/octet-stream|5942|172.18.0.1|pmmapper|204
2021-05-21T09:12:28.027Z|PUB|16215883...</msg>
<status status="PASS" endtime="20210521 12:14:12.902" starttime="20210521 12:14:12.271"></status>
</kw>
<kw name="GetFilteredLogs">
<arguments>
<arg>${alllogs}</arg>
<arg>${testname}</arg>
</arguments>
<assign>
<var>${filtered_logs}</var>
</assign>
<kw name="Filter Unique" library="LogReader">
<arguments>
<arg>${all_logs}</arg>
<arg>${testname}</arg>
</arguments>
<assign>
<var>${filtered_logs}</var>
</assign>
<msg timestamp="20210521 12:14:12.903" level="INFO">${filtered_logs} = set([u'2021-05-21T09:13:52.844Z|DEL|1621588432087.dmaap-dr-node|1|1|http://dcae-pm-mapper:8081/delivery/Athird-6.xml|PUT|application/octet-stream|5942|username|200|null', u'2021-05-21T09:13:52.859Z|DE...</msg>
<status status="PASS" endtime="20210521 12:14:12.904" starttime="20210521 12:14:12.903"></status>
</kw>
<msg timestamp="20210521 12:14:12.904" level="INFO">${filtered_logs} = set([u'2021-05-21T09:13:52.844Z|DEL|1621588432087.dmaap-dr-node|1|1|http://dcae-pm-mapper:8081/delivery/Athird-6.xml|PUT|application/octet-stream|5942|username|200|null', u'2021-05-21T09:13:52.859Z|DE...</msg>
<status status="PASS" endtime="20210521 12:14:12.904" starttime="20210521 12:14:12.902"></status>
</kw>
<kw name="GetDroppedNumber">
<arguments>
<arg>${filtered_logs}</arg>
</arguments>
<assign>
<var>${dropped_nr}</var>
</assign>
<kw name="Get Number Of Dropped Messages" library="LogReader">
<arguments>
<arg>${logs_output}</arg>
</arguments>
<assign>
<var>${number}</var>
</assign>
<msg timestamp="20210521 12:14:12.905" level="INFO">${number} = 0</msg>
<status status="PASS" endtime="20210521 12:14:12.905" starttime="20210521 12:14:12.905"></status>
</kw>
<msg timestamp="20210521 12:14:12.906" level="INFO">${dropped_nr} = 0</msg>
<status status="PASS" endtime="20210521 12:14:12.906" starttime="20210521 12:14:12.904"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>15s</arg>
</arguments>
<msg timestamp="20210521 12:14:27.908" level="INFO">Slept 15 seconds</msg>
<status status="PASS" endtime="20210521 12:14:27.909" starttime="20210521 12:14:12.906"></status>
</kw>
<kw name="SavePmMapperLogsAndDroppedCount">
<arguments>
<arg>config_10_1</arg>
<arg>${dropped_nr}</arg>
</arguments>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>echo "Dropped: ${dropped_count}" &gt; %{WORKSPACE}/archives/${test_name}_dropped_count.log</arg>
<arg>shell=yes</arg>
</arguments>
<msg timestamp="20210521 12:14:27.911" level="INFO">Starting process:
echo "Dropped: 0" &gt; /home/lasse/upstream/pm-mapper/csit/archives/config_10_1_dropped_count.log</msg>
<msg timestamp="20210521 12:14:27.917" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210521 12:14:27.917" level="INFO">Process completed.</msg>
<status status="PASS" endtime="20210521 12:14:27.918" starttime="20210521 12:14:27.910"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>docker logs ${CLIENT_CONTAINER_NAME} &gt; %{WORKSPACE}/archives/${test_name}_pm_mapper_container_logs.log</arg>
<arg>shell=yes</arg>
</arguments>
<msg timestamp="20210521 12:14:27.921" level="INFO">Starting process:
docker logs pmmapper &gt; /home/lasse/upstream/pm-mapper/csit/archives/config_10_1_pm_mapper_container_logs.log</msg>
<msg timestamp="20210521 12:14:27.927" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210521 12:14:27.993" level="INFO">Process completed.</msg>
<status status="PASS" endtime="20210521 12:14:27.993" starttime="20210521 12:14:27.919"></status>
</kw>
<status status="PASS" endtime="20210521 12:14:27.994" starttime="20210521 12:14:27.909"></status>
</kw>
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<arguments>
<arg>${dropped_nr}</arg>
<arg>0</arg>
<arg>Pm-mapper drop: ${dropped_nr} messages. Expected drop count: 0</arg>
</arguments>
<msg timestamp="20210521 12:14:27.995" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210521 12:14:27.995" starttime="20210521 12:14:27.994"></status>
</kw>
<kw name="ClearLogs">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>${CLI_EXEC_CLI_PM_LOG_CLEAR}</arg>
<arg>shell=yes</arg>
</arguments>
<msg timestamp="20210521 12:14:27.997" level="INFO">Starting process:
docker exec pmmapper /bin/sh -c "echo -n "" &gt; /var/log/ONAP/dcaegen2/services/pm-mapper/pm-mapper_output.log"</msg>
<msg timestamp="20210521 12:14:28.000" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210521 12:14:28.135" level="INFO">Process completed.</msg>
<status status="PASS" endtime="20210521 12:14:28.135" starttime="20210521 12:14:27.996"></status>
</kw>
<status status="PASS" endtime="20210521 12:14:28.136" starttime="20210521 12:14:27.996"></status>
</kw>
<doc>Verify that PM Mapper rejects 0/10 messages. Configuration: limitRate=10, threadsCount=1</doc>
<tags>
<tag>FILES_PROCESSING_CONFIG_PM_MAPPER_2</tag>
</tags>
<timeout value="25 minutes"></timeout>
<status status="PASS" endtime="20210521 12:14:28.136" critical="yes" starttime="20210521 12:13:30.399"></status>
</test>
<test id="s1-s1-t3" name="Verify that PM Mapper rejects 0 messages when limitRate is 1 and threads count is 10">
<kw name="RestartPmmapper">
<arguments>
<arg>${CONFIG_ENVS_1_10}</arg>
</arguments>
<kw name="Remove Container" library="DockerContainerManager">
<arguments>
<arg>${CLIENT_CONTAINER_NAME}</arg>
</arguments>
<status status="PASS" endtime="20210521 12:14:28.852" starttime="20210521 12:14:28.139"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20210521 12:14:33.855" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20210521 12:14:33.855" starttime="20210521 12:14:28.853"></status>
</kw>
<kw name="Run Pmmapper Container" library="DockerContainerManager">
<arguments>
<arg>${DOCKER_CLIENT_IMAGE}</arg>
<arg>${CLIENT_CONTAINER_NAME}</arg>
<arg>${envs}</arg>
<arg>${DR_NODE_IP}</arg>
<arg>${NODE_IP}</arg>
</arguments>
<status status="PASS" endtime="20210521 12:14:34.425" starttime="20210521 12:14:33.856"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>15s</arg>
</arguments>
<msg timestamp="20210521 12:14:49.427" level="INFO">Slept 15 seconds</msg>
<status status="PASS" endtime="20210521 12:14:49.428" starttime="20210521 12:14:34.425"></status>
</kw>
<status status="PASS" endtime="20210521 12:14:49.428" starttime="20210521 12:14:28.138"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>Afourth-</arg>
</arguments>
<assign>
<var>${testname}</var>
</assign>
<msg timestamp="20210521 12:14:49.430" level="INFO">${testname} = Afourth-</msg>
<status status="PASS" endtime="20210521 12:14:49.430" starttime="20210521 12:14:49.429"></status>
</kw>
<kw name="SendFilesToDatarouter">
<arguments>
<arg>${testname}</arg>
</arguments>
<kw type="for" name="${i} IN RANGE [ 10 ]">
<kw type="foritem" name="${i} = 0">
<kw name="SendToDatarouter">
<arguments>
<arg>${FILE_PATH}</arg>
<arg>${NR_VALID_METADATA_PATH}</arg>
<arg>X-ONAP-RequestID=${i}</arg>
<arg>${testnr}</arg>
<arg>${i}</arg>
</arguments>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${filepath}</arg>
</arguments>
<assign>
<var>${pmdata}</var>
</assign>
<msg timestamp="20210521 12:14:49.435" html="yes" level="INFO">Getting file '&lt;a href="file:///home/lasse/upstream/pm-mapper/csit/tests/filesprocessingconfigpmmapper/assets/ABigFile.xml"&gt;/home/lasse/upstream/pm-mapper/csit/tests/filesprocessingconfigpmmapper/assets/ABigFile.xml&lt;/a&gt;'.</msg>
<msg timestamp="20210521 12:14:49.436" level="INFO">${pmdata} = &lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;?xml-stylesheet type="text/xsl" href="MeasDataCollection.xsl"?&gt;
&lt;measCollecFile xmlns="http://www.3gpp.org/ftp/specs/archive/32_series/32.435#measCollec"
xmlns:...</msg>
<status status="PASS" endtime="20210521 12:14:49.437" starttime="20210521 12:14:49.435"></status>
</kw>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${metadatapath}</arg>
</arguments>
<assign>
<var>${metatdata}</var>
</assign>
<msg timestamp="20210521 12:14:49.438" html="yes" level="INFO">Getting file '&lt;a href="file:///home/lasse/upstream/pm-mapper/csit/tests/filesprocessingconfigpmmapper/assets/valid_metadata.json"&gt;/home/lasse/upstream/pm-mapper/csit/tests/filesprocessingconfigpmmapper/assets/valid_metadata.json&lt;/a&gt;'.</msg>
<msg timestamp="20210521 12:14:49.438" level="INFO">${metatdata} = {
    "productName": "gnb",
    "vendorName": "Ericsson",
    "lastEpochMicrosec": "1538478000000",
    "sourceName": "oteNB5309",
    "startEpochMicrosec": "1538478900000",
    "timeZoneOffset": "UTC...</msg>
<status status="PASS" endtime="20210521 12:14:49.438" starttime="20210521 12:14:49.437"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>${testnr}</arg>
<arg>${i}</arg>
<arg>.xml</arg>
</arguments>
<assign>
<var>${newFilename}</var>
</assign>
<msg timestamp="20210521 12:14:49.440" level="INFO">${newFilename} = Afourth-0.xml</msg>
<status status="PASS" endtime="20210521 12:14:49.440" starttime="20210521 12:14:49.439"></status>
</kw>
<kw name="PutCall">
<arguments>
<arg>${PUBLISH_NODE_URL}/${newFilename}</arg>
<arg>${request_id}</arg>
<arg>${pmdata}</arg>
<arg>${metatdata.replace("\n","")}</arg>
<arg>pmmapper</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>X-ONAP-RequestID=${request_id}</arg>
<arg>X-DMAAP-DR-META=${meta}</arg>
<arg>Content-Type=application/octet-stream</arg>
<arg>X-DMAAP-DR-ON-BEHALF-OF=${user}</arg>
<arg>Authorization=Basic cG1tYXBwZXI6cG1tYXBwZXI=</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20210521 12:14:49.446" level="INFO">${headers} = {u'X-ONAP-RequestID': u'X-ONAP-RequestID=0', u'X-DMAAP-DR-META': u'{    "productName": "gnb",    "vendorName": "Ericsson",    "lastEpochMicrosec": "1538478000000",    "sourceName": "oteNB5309",    "st...</msg>
<status status="PASS" endtime="20210521 12:14:49.446" starttime="20210521 12:14:49.443"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>requests.put('${url}', data="""${data}""", headers=${headers}, verify=False, allow_redirects=False)</arg>
<arg>requests</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20210521 12:14:49.478" level="INFO">/usr/local/lib/python2.7/dist-packages/urllib3/connectionpool.py:988: InsecureRequestWarning: Unverified HTTPS request is being made to host '172.18.0.2'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings
  InsecureRequestWarning,</msg>
<msg timestamp="20210521 12:14:49.478" level="INFO">${resp} = &lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20210521 12:14:49.478" starttime="20210521 12:14:49.446"></status>
</kw>
<msg timestamp="20210521 12:14:49.479" level="INFO">${resp} = &lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20210521 12:14:49.479" starttime="20210521 12:14:49.440"></status>
</kw>
<kw name="VerifyResponse">
<arguments>
<arg>${resp.status_code}</arg>
<arg>204</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${actual_response_value}</arg>
<arg>${expected_response_value}</arg>
</arguments>
<msg timestamp="20210521 12:14:49.480" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210521 12:14:49.480" starttime="20210521 12:14:49.480"></status>
</kw>
<status status="PASS" endtime="20210521 12:14:49.481" starttime="20210521 12:14:49.479"></status>
</kw>
<status status="PASS" endtime="20210521 12:14:49.481" starttime="20210521 12:14:49.432"></status>
</kw>
<status status="PASS" endtime="20210521 12:14:49.481" starttime="20210521 12:14:49.432"></status>
</kw>
<kw type="foritem" name="${i} = 1">
<kw name="SendToDatarouter">
<arguments>
<arg>${FILE_PATH}</arg>
<arg>${NR_VALID_METADATA_PATH}</arg>
<arg>X-ONAP-RequestID=${i}</arg>
<arg>${testnr}</arg>
<arg>${i}</arg>
</arguments>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${filepath}</arg>
</arguments>
<assign>
<var>${pmdata}</var>
</assign>
<msg timestamp="20210521 12:14:49.483" html="yes" level="INFO">Getting file '&lt;a href="file:///home/lasse/upstream/pm-mapper/csit/tests/filesprocessingconfigpmmapper/assets/ABigFile.xml"&gt;/home/lasse/upstream/pm-mapper/csit/tests/filesprocessingconfigpmmapper/assets/ABigFile.xml&lt;/a&gt;'.</msg>
<msg timestamp="20210521 12:14:49.483" level="INFO">${pmdata} = &lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;?xml-stylesheet type="text/xsl" href="MeasDataCollection.xsl"?&gt;
&lt;measCollecFile xmlns="http://www.3gpp.org/ftp/specs/archive/32_series/32.435#measCollec"
xmlns:...</msg>
<status status="PASS" endtime="20210521 12:14:49.483" starttime="20210521 12:14:49.482"></status>
</kw>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${metadatapath}</arg>
</arguments>
<assign>
<var>${metatdata}</var>
</assign>
<msg timestamp="20210521 12:14:49.484" html="yes" level="INFO">Getting file '&lt;a href="file:///home/lasse/upstream/pm-mapper/csit/tests/filesprocessingconfigpmmapper/assets/valid_metadata.json"&gt;/home/lasse/upstream/pm-mapper/csit/tests/filesprocessingconfigpmmapper/assets/valid_metadata.json&lt;/a&gt;'.</msg>
<msg timestamp="20210521 12:14:49.484" level="INFO">${metatdata} = {
    "productName": "gnb",
    "vendorName": "Ericsson",
    "lastEpochMicrosec": "1538478000000",
    "sourceName": "oteNB5309",
    "startEpochMicrosec": "1538478900000",
    "timeZoneOffset": "UTC...</msg>
<status status="PASS" endtime="20210521 12:14:49.484" starttime="20210521 12:14:49.484"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>${testnr}</arg>
<arg>${i}</arg>
<arg>.xml</arg>
</arguments>
<assign>
<var>${newFilename}</var>
</assign>
<msg timestamp="20210521 12:14:49.485" level="INFO">${newFilename} = Afourth-1.xml</msg>
<status status="PASS" endtime="20210521 12:14:49.485" starttime="20210521 12:14:49.485"></status>
</kw>
<kw name="PutCall">
<arguments>
<arg>${PUBLISH_NODE_URL}/${newFilename}</arg>
<arg>${request_id}</arg>
<arg>${pmdata}</arg>
<arg>${metatdata.replace("\n","")}</arg>
<arg>pmmapper</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>X-ONAP-RequestID=${request_id}</arg>
<arg>X-DMAAP-DR-META=${meta}</arg>
<arg>Content-Type=application/octet-stream</arg>
<arg>X-DMAAP-DR-ON-BEHALF-OF=${user}</arg>
<arg>Authorization=Basic cG1tYXBwZXI6cG1tYXBwZXI=</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20210521 12:14:49.488" level="INFO">${headers} = {u'X-ONAP-RequestID': u'X-ONAP-RequestID=1', u'X-DMAAP-DR-META': u'{    "productName": "gnb",    "vendorName": "Ericsson",    "lastEpochMicrosec": "1538478000000",    "sourceName": "oteNB5309",    "st...</msg>
<status status="PASS" endtime="20210521 12:14:49.488" starttime="20210521 12:14:49.486"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>requests.put('${url}', data="""${data}""", headers=${headers}, verify=False, allow_redirects=False)</arg>
<arg>requests</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20210521 12:14:49.519" level="INFO">/usr/local/lib/python2.7/dist-packages/urllib3/connectionpool.py:988: InsecureRequestWarning: Unverified HTTPS request is being made to host '172.18.0.2'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings
  InsecureRequestWarning,</msg>
<msg timestamp="20210521 12:14:49.519" level="INFO">${resp} = &lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20210521 12:14:49.519" starttime="20210521 12:14:49.488"></status>
</kw>
<msg timestamp="20210521 12:14:49.519" level="INFO">${resp} = &lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20210521 12:14:49.519" starttime="20210521 12:14:49.485"></status>
</kw>
<kw name="VerifyResponse">
<arguments>
<arg>${resp.status_code}</arg>
<arg>204</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${actual_response_value}</arg>
<arg>${expected_response_value}</arg>
</arguments>
<msg timestamp="20210521 12:14:49.521" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210521 12:14:49.521" starttime="20210521 12:14:49.521"></status>
</kw>
<status status="PASS" endtime="20210521 12:14:49.521" starttime="20210521 12:14:49.520"></status>
</kw>
<status status="PASS" endtime="20210521 12:14:49.522" starttime="20210521 12:14:49.481"></status>
</kw>
<status status="PASS" endtime="20210521 12:14:49.522" starttime="20210521 12:14:49.481"></status>
</kw>
<kw type="foritem" name="${i} = 2">
<kw name="SendToDatarouter">
<arguments>
<arg>${FILE_PATH}</arg>
<arg>${NR_VALID_METADATA_PATH}</arg>
<arg>X-ONAP-RequestID=${i}</arg>
<arg>${testnr}</arg>
<arg>${i}</arg>
</arguments>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${filepath}</arg>
</arguments>
<assign>
<var>${pmdata}</var>
</assign>
<msg timestamp="20210521 12:14:49.524" html="yes" level="INFO">Getting file '&lt;a href="file:///home/lasse/upstream/pm-mapper/csit/tests/filesprocessingconfigpmmapper/assets/ABigFile.xml"&gt;/home/lasse/upstream/pm-mapper/csit/tests/filesprocessingconfigpmmapper/assets/ABigFile.xml&lt;/a&gt;'.</msg>
<msg timestamp="20210521 12:14:49.524" level="INFO">${pmdata} = &lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;?xml-stylesheet type="text/xsl" href="MeasDataCollection.xsl"?&gt;
&lt;measCollecFile xmlns="http://www.3gpp.org/ftp/specs/archive/32_series/32.435#measCollec"
xmlns:...</msg>
<status status="PASS" endtime="20210521 12:14:49.524" starttime="20210521 12:14:49.523"></status>
</kw>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${metadatapath}</arg>
</arguments>
<assign>
<var>${metatdata}</var>
</assign>
<msg timestamp="20210521 12:14:49.525" html="yes" level="INFO">Getting file '&lt;a href="file:///home/lasse/upstream/pm-mapper/csit/tests/filesprocessingconfigpmmapper/assets/valid_metadata.json"&gt;/home/lasse/upstream/pm-mapper/csit/tests/filesprocessingconfigpmmapper/assets/valid_metadata.json&lt;/a&gt;'.</msg>
<msg timestamp="20210521 12:14:49.525" level="INFO">${metatdata} = {
    "productName": "gnb",
    "vendorName": "Ericsson",
    "lastEpochMicrosec": "1538478000000",
    "sourceName": "oteNB5309",
    "startEpochMicrosec": "1538478900000",
    "timeZoneOffset": "UTC...</msg>
<status status="PASS" endtime="20210521 12:14:49.526" starttime="20210521 12:14:49.525"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>${testnr}</arg>
<arg>${i}</arg>
<arg>.xml</arg>
</arguments>
<assign>
<var>${newFilename}</var>
</assign>
<msg timestamp="20210521 12:14:49.526" level="INFO">${newFilename} = Afourth-2.xml</msg>
<status status="PASS" endtime="20210521 12:14:49.526" starttime="20210521 12:14:49.526"></status>
</kw>
<kw name="PutCall">
<arguments>
<arg>${PUBLISH_NODE_URL}/${newFilename}</arg>
<arg>${request_id}</arg>
<arg>${pmdata}</arg>
<arg>${metatdata.replace("\n","")}</arg>
<arg>pmmapper</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>X-ONAP-RequestID=${request_id}</arg>
<arg>X-DMAAP-DR-META=${meta}</arg>
<arg>Content-Type=application/octet-stream</arg>
<arg>X-DMAAP-DR-ON-BEHALF-OF=${user}</arg>
<arg>Authorization=Basic cG1tYXBwZXI6cG1tYXBwZXI=</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20210521 12:14:49.529" level="INFO">${headers} = {u'X-ONAP-RequestID': u'X-ONAP-RequestID=2', u'X-DMAAP-DR-META': u'{    "productName": "gnb",    "vendorName": "Ericsson",    "lastEpochMicrosec": "1538478000000",    "sourceName": "oteNB5309",    "st...</msg>
<status status="PASS" endtime="20210521 12:14:49.529" starttime="20210521 12:14:49.528"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>requests.put('${url}', data="""${data}""", headers=${headers}, verify=False, allow_redirects=False)</arg>
<arg>requests</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20210521 12:14:49.558" level="INFO">/usr/local/lib/python2.7/dist-packages/urllib3/connectionpool.py:988: InsecureRequestWarning: Unverified HTTPS request is being made to host '172.18.0.2'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings
  InsecureRequestWarning,</msg>
<msg timestamp="20210521 12:14:49.559" level="INFO">${resp} = &lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20210521 12:14:49.559" starttime="20210521 12:14:49.529"></status>
</kw>
<msg timestamp="20210521 12:14:49.559" level="INFO">${resp} = &lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20210521 12:14:49.559" starttime="20210521 12:14:49.527"></status>
</kw>
<kw name="VerifyResponse">
<arguments>
<arg>${resp.status_code}</arg>
<arg>204</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${actual_response_value}</arg>
<arg>${expected_response_value}</arg>
</arguments>
<msg timestamp="20210521 12:14:49.561" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210521 12:14:49.561" starttime="20210521 12:14:49.560"></status>
</kw>
<status status="PASS" endtime="20210521 12:14:49.561" starttime="20210521 12:14:49.559"></status>
</kw>
<status status="PASS" endtime="20210521 12:14:49.561" starttime="20210521 12:14:49.522"></status>
</kw>
<status status="PASS" endtime="20210521 12:14:49.561" starttime="20210521 12:14:49.522"></status>
</kw>
<kw type="foritem" name="${i} = 3">
<kw name="SendToDatarouter">
<arguments>
<arg>${FILE_PATH}</arg>
<arg>${NR_VALID_METADATA_PATH}</arg>
<arg>X-ONAP-RequestID=${i}</arg>
<arg>${testnr}</arg>
<arg>${i}</arg>
</arguments>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${filepath}</arg>
</arguments>
<assign>
<var>${pmdata}</var>
</assign>
<msg timestamp="20210521 12:14:49.563" html="yes" level="INFO">Getting file '&lt;a href="file:///home/lasse/upstream/pm-mapper/csit/tests/filesprocessingconfigpmmapper/assets/ABigFile.xml"&gt;/home/lasse/upstream/pm-mapper/csit/tests/filesprocessingconfigpmmapper/assets/ABigFile.xml&lt;/a&gt;'.</msg>
<msg timestamp="20210521 12:14:49.563" level="INFO">${pmdata} = &lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;?xml-stylesheet type="text/xsl" href="MeasDataCollection.xsl"?&gt;
&lt;measCollecFile xmlns="http://www.3gpp.org/ftp/specs/archive/32_series/32.435#measCollec"
xmlns:...</msg>
<status status="PASS" endtime="20210521 12:14:49.563" starttime="20210521 12:14:49.562"></status>
</kw>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${metadatapath}</arg>
</arguments>
<assign>
<var>${metatdata}</var>
</assign>
<msg timestamp="20210521 12:14:49.564" html="yes" level="INFO">Getting file '&lt;a href="file:///home/lasse/upstream/pm-mapper/csit/tests/filesprocessingconfigpmmapper/assets/valid_metadata.json"&gt;/home/lasse/upstream/pm-mapper/csit/tests/filesprocessingconfigpmmapper/assets/valid_metadata.json&lt;/a&gt;'.</msg>
<msg timestamp="20210521 12:14:49.564" level="INFO">${metatdata} = {
    "productName": "gnb",
    "vendorName": "Ericsson",
    "lastEpochMicrosec": "1538478000000",
    "sourceName": "oteNB5309",
    "startEpochMicrosec": "1538478900000",
    "timeZoneOffset": "UTC...</msg>
<status status="PASS" endtime="20210521 12:14:49.564" starttime="20210521 12:14:49.563"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>${testnr}</arg>
<arg>${i}</arg>
<arg>.xml</arg>
</arguments>
<assign>
<var>${newFilename}</var>
</assign>
<msg timestamp="20210521 12:14:49.565" level="INFO">${newFilename} = Afourth-3.xml</msg>
<status status="PASS" endtime="20210521 12:14:49.565" starttime="20210521 12:14:49.564"></status>
</kw>
<kw name="PutCall">
<arguments>
<arg>${PUBLISH_NODE_URL}/${newFilename}</arg>
<arg>${request_id}</arg>
<arg>${pmdata}</arg>
<arg>${metatdata.replace("\n","")}</arg>
<arg>pmmapper</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>X-ONAP-RequestID=${request_id}</arg>
<arg>X-DMAAP-DR-META=${meta}</arg>
<arg>Content-Type=application/octet-stream</arg>
<arg>X-DMAAP-DR-ON-BEHALF-OF=${user}</arg>
<arg>Authorization=Basic cG1tYXBwZXI6cG1tYXBwZXI=</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20210521 12:14:49.567" level="INFO">${headers} = {u'X-ONAP-RequestID': u'X-ONAP-RequestID=3', u'X-DMAAP-DR-META': u'{    "productName": "gnb",    "vendorName": "Ericsson",    "lastEpochMicrosec": "1538478000000",    "sourceName": "oteNB5309",    "st...</msg>
<status status="PASS" endtime="20210521 12:14:49.567" starttime="20210521 12:14:49.566"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>requests.put('${url}', data="""${data}""", headers=${headers}, verify=False, allow_redirects=False)</arg>
<arg>requests</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20210521 12:14:49.593" level="INFO">/usr/local/lib/python2.7/dist-packages/urllib3/connectionpool.py:988: InsecureRequestWarning: Unverified HTTPS request is being made to host '172.18.0.2'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings
  InsecureRequestWarning,</msg>
<msg timestamp="20210521 12:14:49.593" level="INFO">${resp} = &lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20210521 12:14:49.593" starttime="20210521 12:14:49.567"></status>
</kw>
<msg timestamp="20210521 12:14:49.594" level="INFO">${resp} = &lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20210521 12:14:49.594" starttime="20210521 12:14:49.565"></status>
</kw>
<kw name="VerifyResponse">
<arguments>
<arg>${resp.status_code}</arg>
<arg>204</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${actual_response_value}</arg>
<arg>${expected_response_value}</arg>
</arguments>
<msg timestamp="20210521 12:14:49.595" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210521 12:14:49.595" starttime="20210521 12:14:49.595"></status>
</kw>
<status status="PASS" endtime="20210521 12:14:49.596" starttime="20210521 12:14:49.594"></status>
</kw>
<status status="PASS" endtime="20210521 12:14:49.596" starttime="20210521 12:14:49.561"></status>
</kw>
<status status="PASS" endtime="20210521 12:14:49.596" starttime="20210521 12:14:49.561"></status>
</kw>
<kw type="foritem" name="${i} = 4">
<kw name="SendToDatarouter">
<arguments>
<arg>${FILE_PATH}</arg>
<arg>${NR_VALID_METADATA_PATH}</arg>
<arg>X-ONAP-RequestID=${i}</arg>
<arg>${testnr}</arg>
<arg>${i}</arg>
</arguments>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${filepath}</arg>
</arguments>
<assign>
<var>${pmdata}</var>
</assign>
<msg timestamp="20210521 12:14:49.597" html="yes" level="INFO">Getting file '&lt;a href="file:///home/lasse/upstream/pm-mapper/csit/tests/filesprocessingconfigpmmapper/assets/ABigFile.xml"&gt;/home/lasse/upstream/pm-mapper/csit/tests/filesprocessingconfigpmmapper/assets/ABigFile.xml&lt;/a&gt;'.</msg>
<msg timestamp="20210521 12:14:49.598" level="INFO">${pmdata} = &lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;?xml-stylesheet type="text/xsl" href="MeasDataCollection.xsl"?&gt;
&lt;measCollecFile xmlns="http://www.3gpp.org/ftp/specs/archive/32_series/32.435#measCollec"
xmlns:...</msg>
<status status="PASS" endtime="20210521 12:14:49.598" starttime="20210521 12:14:49.597"></status>
</kw>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${metadatapath}</arg>
</arguments>
<assign>
<var>${metatdata}</var>
</assign>
<msg timestamp="20210521 12:14:49.598" html="yes" level="INFO">Getting file '&lt;a href="file:///home/lasse/upstream/pm-mapper/csit/tests/filesprocessingconfigpmmapper/assets/valid_metadata.json"&gt;/home/lasse/upstream/pm-mapper/csit/tests/filesprocessingconfigpmmapper/assets/valid_metadata.json&lt;/a&gt;'.</msg>
<msg timestamp="20210521 12:14:49.599" level="INFO">${metatdata} = {
    "productName": "gnb",
    "vendorName": "Ericsson",
    "lastEpochMicrosec": "1538478000000",
    "sourceName": "oteNB5309",
    "startEpochMicrosec": "1538478900000",
    "timeZoneOffset": "UTC...</msg>
<status status="PASS" endtime="20210521 12:14:49.599" starttime="20210521 12:14:49.598"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>${testnr}</arg>
<arg>${i}</arg>
<arg>.xml</arg>
</arguments>
<assign>
<var>${newFilename}</var>
</assign>
<msg timestamp="20210521 12:14:49.599" level="INFO">${newFilename} = Afourth-4.xml</msg>
<status status="PASS" endtime="20210521 12:14:49.600" starttime="20210521 12:14:49.599"></status>
</kw>
<kw name="PutCall">
<arguments>
<arg>${PUBLISH_NODE_URL}/${newFilename}</arg>
<arg>${request_id}</arg>
<arg>${pmdata}</arg>
<arg>${metatdata.replace("\n","")}</arg>
<arg>pmmapper</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>X-ONAP-RequestID=${request_id}</arg>
<arg>X-DMAAP-DR-META=${meta}</arg>
<arg>Content-Type=application/octet-stream</arg>
<arg>X-DMAAP-DR-ON-BEHALF-OF=${user}</arg>
<arg>Authorization=Basic cG1tYXBwZXI6cG1tYXBwZXI=</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20210521 12:14:49.602" level="INFO">${headers} = {u'X-ONAP-RequestID': u'X-ONAP-RequestID=4', u'X-DMAAP-DR-META': u'{    "productName": "gnb",    "vendorName": "Ericsson",    "lastEpochMicrosec": "1538478000000",    "sourceName": "oteNB5309",    "st...</msg>
<status status="PASS" endtime="20210521 12:14:49.602" starttime="20210521 12:14:49.601"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>requests.put('${url}', data="""${data}""", headers=${headers}, verify=False, allow_redirects=False)</arg>
<arg>requests</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20210521 12:14:49.648" level="INFO">/usr/local/lib/python2.7/dist-packages/urllib3/connectionpool.py:988: InsecureRequestWarning: Unverified HTTPS request is being made to host '172.18.0.2'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings
  InsecureRequestWarning,</msg>
<msg timestamp="20210521 12:14:49.648" level="INFO">${resp} = &lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20210521 12:14:49.649" starttime="20210521 12:14:49.603"></status>
</kw>
<msg timestamp="20210521 12:14:49.649" level="INFO">${resp} = &lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20210521 12:14:49.649" starttime="20210521 12:14:49.600"></status>
</kw>
<kw name="VerifyResponse">
<arguments>
<arg>${resp.status_code}</arg>
<arg>204</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${actual_response_value}</arg>
<arg>${expected_response_value}</arg>
</arguments>
<msg timestamp="20210521 12:14:49.651" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210521 12:14:49.651" starttime="20210521 12:14:49.650"></status>
</kw>
<status status="PASS" endtime="20210521 12:14:49.651" starttime="20210521 12:14:49.649"></status>
</kw>
<status status="PASS" endtime="20210521 12:14:49.651" starttime="20210521 12:14:49.596"></status>
</kw>
<status status="PASS" endtime="20210521 12:14:49.651" starttime="20210521 12:14:49.596"></status>
</kw>
<kw type="foritem" name="${i} = 5">
<kw name="SendToDatarouter">
<arguments>
<arg>${FILE_PATH}</arg>
<arg>${NR_VALID_METADATA_PATH}</arg>
<arg>X-ONAP-RequestID=${i}</arg>
<arg>${testnr}</arg>
<arg>${i}</arg>
</arguments>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${filepath}</arg>
</arguments>
<assign>
<var>${pmdata}</var>
</assign>
<msg timestamp="20210521 12:14:49.653" html="yes" level="INFO">Getting file '&lt;a href="file:///home/lasse/upstream/pm-mapper/csit/tests/filesprocessingconfigpmmapper/assets/ABigFile.xml"&gt;/home/lasse/upstream/pm-mapper/csit/tests/filesprocessingconfigpmmapper/assets/ABigFile.xml&lt;/a&gt;'.</msg>
<msg timestamp="20210521 12:14:49.653" level="INFO">${pmdata} = &lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;?xml-stylesheet type="text/xsl" href="MeasDataCollection.xsl"?&gt;
&lt;measCollecFile xmlns="http://www.3gpp.org/ftp/specs/archive/32_series/32.435#measCollec"
xmlns:...</msg>
<status status="PASS" endtime="20210521 12:14:49.653" starttime="20210521 12:14:49.653"></status>
</kw>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${metadatapath}</arg>
</arguments>
<assign>
<var>${metatdata}</var>
</assign>
<msg timestamp="20210521 12:14:49.654" html="yes" level="INFO">Getting file '&lt;a href="file:///home/lasse/upstream/pm-mapper/csit/tests/filesprocessingconfigpmmapper/assets/valid_metadata.json"&gt;/home/lasse/upstream/pm-mapper/csit/tests/filesprocessingconfigpmmapper/assets/valid_metadata.json&lt;/a&gt;'.</msg>
<msg timestamp="20210521 12:14:49.655" level="INFO">${metatdata} = {
    "productName": "gnb",
    "vendorName": "Ericsson",
    "lastEpochMicrosec": "1538478000000",
    "sourceName": "oteNB5309",
    "startEpochMicrosec": "1538478900000",
    "timeZoneOffset": "UTC...</msg>
<status status="PASS" endtime="20210521 12:14:49.655" starttime="20210521 12:14:49.654"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>${testnr}</arg>
<arg>${i}</arg>
<arg>.xml</arg>
</arguments>
<assign>
<var>${newFilename}</var>
</assign>
<msg timestamp="20210521 12:14:49.655" level="INFO">${newFilename} = Afourth-5.xml</msg>
<status status="PASS" endtime="20210521 12:14:49.656" starttime="20210521 12:14:49.655"></status>
</kw>
<kw name="PutCall">
<arguments>
<arg>${PUBLISH_NODE_URL}/${newFilename}</arg>
<arg>${request_id}</arg>
<arg>${pmdata}</arg>
<arg>${metatdata.replace("\n","")}</arg>
<arg>pmmapper</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>X-ONAP-RequestID=${request_id}</arg>
<arg>X-DMAAP-DR-META=${meta}</arg>
<arg>Content-Type=application/octet-stream</arg>
<arg>X-DMAAP-DR-ON-BEHALF-OF=${user}</arg>
<arg>Authorization=Basic cG1tYXBwZXI6cG1tYXBwZXI=</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20210521 12:14:49.659" level="INFO">${headers} = {u'X-ONAP-RequestID': u'X-ONAP-RequestID=5', u'X-DMAAP-DR-META': u'{    "productName": "gnb",    "vendorName": "Ericsson",    "lastEpochMicrosec": "1538478000000",    "sourceName": "oteNB5309",    "st...</msg>
<status status="PASS" endtime="20210521 12:14:49.659" starttime="20210521 12:14:49.657"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>requests.put('${url}', data="""${data}""", headers=${headers}, verify=False, allow_redirects=False)</arg>
<arg>requests</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20210521 12:14:49.688" level="INFO">/usr/local/lib/python2.7/dist-packages/urllib3/connectionpool.py:988: InsecureRequestWarning: Unverified HTTPS request is being made to host '172.18.0.2'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings
  InsecureRequestWarning,</msg>
<msg timestamp="20210521 12:14:49.688" level="INFO">${resp} = &lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20210521 12:14:49.688" starttime="20210521 12:14:49.659"></status>
</kw>
<msg timestamp="20210521 12:14:49.689" level="INFO">${resp} = &lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20210521 12:14:49.689" starttime="20210521 12:14:49.656"></status>
</kw>
<kw name="VerifyResponse">
<arguments>
<arg>${resp.status_code}</arg>
<arg>204</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${actual_response_value}</arg>
<arg>${expected_response_value}</arg>
</arguments>
<msg timestamp="20210521 12:14:49.691" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210521 12:14:49.691" starttime="20210521 12:14:49.690"></status>
</kw>
<status status="PASS" endtime="20210521 12:14:49.692" starttime="20210521 12:14:49.689"></status>
</kw>
<status status="PASS" endtime="20210521 12:14:49.692" starttime="20210521 12:14:49.651"></status>
</kw>
<status status="PASS" endtime="20210521 12:14:49.692" starttime="20210521 12:14:49.651"></status>
</kw>
<kw type="foritem" name="${i} = 6">
<kw name="SendToDatarouter">
<arguments>
<arg>${FILE_PATH}</arg>
<arg>${NR_VALID_METADATA_PATH}</arg>
<arg>X-ONAP-RequestID=${i}</arg>
<arg>${testnr}</arg>
<arg>${i}</arg>
</arguments>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${filepath}</arg>
</arguments>
<assign>
<var>${pmdata}</var>
</assign>
<msg timestamp="20210521 12:14:49.699" html="yes" level="INFO">Getting file '&lt;a href="file:///home/lasse/upstream/pm-mapper/csit/tests/filesprocessingconfigpmmapper/assets/ABigFile.xml"&gt;/home/lasse/upstream/pm-mapper/csit/tests/filesprocessingconfigpmmapper/assets/ABigFile.xml&lt;/a&gt;'.</msg>
<msg timestamp="20210521 12:14:49.700" level="INFO">${pmdata} = &lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;?xml-stylesheet type="text/xsl" href="MeasDataCollection.xsl"?&gt;
&lt;measCollecFile xmlns="http://www.3gpp.org/ftp/specs/archive/32_series/32.435#measCollec"
xmlns:...</msg>
<status status="PASS" endtime="20210521 12:14:49.700" starttime="20210521 12:14:49.697"></status>
</kw>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${metadatapath}</arg>
</arguments>
<assign>
<var>${metatdata}</var>
</assign>
<msg timestamp="20210521 12:14:49.701" html="yes" level="INFO">Getting file '&lt;a href="file:///home/lasse/upstream/pm-mapper/csit/tests/filesprocessingconfigpmmapper/assets/valid_metadata.json"&gt;/home/lasse/upstream/pm-mapper/csit/tests/filesprocessingconfigpmmapper/assets/valid_metadata.json&lt;/a&gt;'.</msg>
<msg timestamp="20210521 12:14:49.701" level="INFO">${metatdata} = {
    "productName": "gnb",
    "vendorName": "Ericsson",
    "lastEpochMicrosec": "1538478000000",
    "sourceName": "oteNB5309",
    "startEpochMicrosec": "1538478900000",
    "timeZoneOffset": "UTC...</msg>
<status status="PASS" endtime="20210521 12:14:49.701" starttime="20210521 12:14:49.700"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>${testnr}</arg>
<arg>${i}</arg>
<arg>.xml</arg>
</arguments>
<assign>
<var>${newFilename}</var>
</assign>
<msg timestamp="20210521 12:14:49.703" level="INFO">${newFilename} = Afourth-6.xml</msg>
<status status="PASS" endtime="20210521 12:14:49.703" starttime="20210521 12:14:49.702"></status>
</kw>
<kw name="PutCall">
<arguments>
<arg>${PUBLISH_NODE_URL}/${newFilename}</arg>
<arg>${request_id}</arg>
<arg>${pmdata}</arg>
<arg>${metatdata.replace("\n","")}</arg>
<arg>pmmapper</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>X-ONAP-RequestID=${request_id}</arg>
<arg>X-DMAAP-DR-META=${meta}</arg>
<arg>Content-Type=application/octet-stream</arg>
<arg>X-DMAAP-DR-ON-BEHALF-OF=${user}</arg>
<arg>Authorization=Basic cG1tYXBwZXI6cG1tYXBwZXI=</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20210521 12:14:49.707" level="INFO">${headers} = {u'X-ONAP-RequestID': u'X-ONAP-RequestID=6', u'X-DMAAP-DR-META': u'{    "productName": "gnb",    "vendorName": "Ericsson",    "lastEpochMicrosec": "1538478000000",    "sourceName": "oteNB5309",    "st...</msg>
<status status="PASS" endtime="20210521 12:14:49.707" starttime="20210521 12:14:49.705"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>requests.put('${url}', data="""${data}""", headers=${headers}, verify=False, allow_redirects=False)</arg>
<arg>requests</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20210521 12:14:49.751" level="INFO">/usr/local/lib/python2.7/dist-packages/urllib3/connectionpool.py:988: InsecureRequestWarning: Unverified HTTPS request is being made to host '172.18.0.2'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings
  InsecureRequestWarning,</msg>
<msg timestamp="20210521 12:14:49.752" level="INFO">${resp} = &lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20210521 12:14:49.752" starttime="20210521 12:14:49.707"></status>
</kw>
<msg timestamp="20210521 12:14:49.752" level="INFO">${resp} = &lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20210521 12:14:49.752" starttime="20210521 12:14:49.703"></status>
</kw>
<kw name="VerifyResponse">
<arguments>
<arg>${resp.status_code}</arg>
<arg>204</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${actual_response_value}</arg>
<arg>${expected_response_value}</arg>
</arguments>
<msg timestamp="20210521 12:14:49.754" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210521 12:14:49.754" starttime="20210521 12:14:49.753"></status>
</kw>
<status status="PASS" endtime="20210521 12:14:49.754" starttime="20210521 12:14:49.752"></status>
</kw>
<status status="PASS" endtime="20210521 12:14:49.756" starttime="20210521 12:14:49.693"></status>
</kw>
<status status="PASS" endtime="20210521 12:14:49.756" starttime="20210521 12:14:49.692"></status>
</kw>
<kw type="foritem" name="${i} = 7">
<kw name="SendToDatarouter">
<arguments>
<arg>${FILE_PATH}</arg>
<arg>${NR_VALID_METADATA_PATH}</arg>
<arg>X-ONAP-RequestID=${i}</arg>
<arg>${testnr}</arg>
<arg>${i}</arg>
</arguments>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${filepath}</arg>
</arguments>
<assign>
<var>${pmdata}</var>
</assign>
<msg timestamp="20210521 12:14:49.759" html="yes" level="INFO">Getting file '&lt;a href="file:///home/lasse/upstream/pm-mapper/csit/tests/filesprocessingconfigpmmapper/assets/ABigFile.xml"&gt;/home/lasse/upstream/pm-mapper/csit/tests/filesprocessingconfigpmmapper/assets/ABigFile.xml&lt;/a&gt;'.</msg>
<msg timestamp="20210521 12:14:49.760" level="INFO">${pmdata} = &lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;?xml-stylesheet type="text/xsl" href="MeasDataCollection.xsl"?&gt;
&lt;measCollecFile xmlns="http://www.3gpp.org/ftp/specs/archive/32_series/32.435#measCollec"
xmlns:...</msg>
<status status="PASS" endtime="20210521 12:14:49.760" starttime="20210521 12:14:49.758"></status>
</kw>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${metadatapath}</arg>
</arguments>
<assign>
<var>${metatdata}</var>
</assign>
<msg timestamp="20210521 12:14:49.761" html="yes" level="INFO">Getting file '&lt;a href="file:///home/lasse/upstream/pm-mapper/csit/tests/filesprocessingconfigpmmapper/assets/valid_metadata.json"&gt;/home/lasse/upstream/pm-mapper/csit/tests/filesprocessingconfigpmmapper/assets/valid_metadata.json&lt;/a&gt;'.</msg>
<msg timestamp="20210521 12:14:49.761" level="INFO">${metatdata} = {
    "productName": "gnb",
    "vendorName": "Ericsson",
    "lastEpochMicrosec": "1538478000000",
    "sourceName": "oteNB5309",
    "startEpochMicrosec": "1538478900000",
    "timeZoneOffset": "UTC...</msg>
<status status="PASS" endtime="20210521 12:14:49.761" starttime="20210521 12:14:49.760"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>${testnr}</arg>
<arg>${i}</arg>
<arg>.xml</arg>
</arguments>
<assign>
<var>${newFilename}</var>
</assign>
<msg timestamp="20210521 12:14:49.762" level="INFO">${newFilename} = Afourth-7.xml</msg>
<status status="PASS" endtime="20210521 12:14:49.762" starttime="20210521 12:14:49.761"></status>
</kw>
<kw name="PutCall">
<arguments>
<arg>${PUBLISH_NODE_URL}/${newFilename}</arg>
<arg>${request_id}</arg>
<arg>${pmdata}</arg>
<arg>${metatdata.replace("\n","")}</arg>
<arg>pmmapper</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>X-ONAP-RequestID=${request_id}</arg>
<arg>X-DMAAP-DR-META=${meta}</arg>
<arg>Content-Type=application/octet-stream</arg>
<arg>X-DMAAP-DR-ON-BEHALF-OF=${user}</arg>
<arg>Authorization=Basic cG1tYXBwZXI6cG1tYXBwZXI=</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20210521 12:14:49.767" level="INFO">${headers} = {u'X-ONAP-RequestID': u'X-ONAP-RequestID=7', u'X-DMAAP-DR-META': u'{    "productName": "gnb",    "vendorName": "Ericsson",    "lastEpochMicrosec": "1538478000000",    "sourceName": "oteNB5309",    "st...</msg>
<status status="PASS" endtime="20210521 12:14:49.767" starttime="20210521 12:14:49.765"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>requests.put('${url}', data="""${data}""", headers=${headers}, verify=False, allow_redirects=False)</arg>
<arg>requests</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20210521 12:14:49.808" level="INFO">/usr/local/lib/python2.7/dist-packages/urllib3/connectionpool.py:988: InsecureRequestWarning: Unverified HTTPS request is being made to host '172.18.0.2'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings
  InsecureRequestWarning,</msg>
<msg timestamp="20210521 12:14:49.810" level="INFO">${resp} = &lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20210521 12:14:49.810" starttime="20210521 12:14:49.768"></status>
</kw>
<msg timestamp="20210521 12:14:49.810" level="INFO">${resp} = &lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20210521 12:14:49.810" starttime="20210521 12:14:49.763"></status>
</kw>
<kw name="VerifyResponse">
<arguments>
<arg>${resp.status_code}</arg>
<arg>204</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${actual_response_value}</arg>
<arg>${expected_response_value}</arg>
</arguments>
<msg timestamp="20210521 12:14:49.813" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210521 12:14:49.813" starttime="20210521 12:14:49.812"></status>
</kw>
<status status="PASS" endtime="20210521 12:14:49.813" starttime="20210521 12:14:49.810"></status>
</kw>
<status status="PASS" endtime="20210521 12:14:49.813" starttime="20210521 12:14:49.757"></status>
</kw>
<status status="PASS" endtime="20210521 12:14:49.813" starttime="20210521 12:14:49.756"></status>
</kw>
<kw type="foritem" name="${i} = 8">
<kw name="SendToDatarouter">
<arguments>
<arg>${FILE_PATH}</arg>
<arg>${NR_VALID_METADATA_PATH}</arg>
<arg>X-ONAP-RequestID=${i}</arg>
<arg>${testnr}</arg>
<arg>${i}</arg>
</arguments>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${filepath}</arg>
</arguments>
<assign>
<var>${pmdata}</var>
</assign>
<msg timestamp="20210521 12:14:49.815" html="yes" level="INFO">Getting file '&lt;a href="file:///home/lasse/upstream/pm-mapper/csit/tests/filesprocessingconfigpmmapper/assets/ABigFile.xml"&gt;/home/lasse/upstream/pm-mapper/csit/tests/filesprocessingconfigpmmapper/assets/ABigFile.xml&lt;/a&gt;'.</msg>
<msg timestamp="20210521 12:14:49.816" level="INFO">${pmdata} = &lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;?xml-stylesheet type="text/xsl" href="MeasDataCollection.xsl"?&gt;
&lt;measCollecFile xmlns="http://www.3gpp.org/ftp/specs/archive/32_series/32.435#measCollec"
xmlns:...</msg>
<status status="PASS" endtime="20210521 12:14:49.816" starttime="20210521 12:14:49.815"></status>
</kw>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${metadatapath}</arg>
</arguments>
<assign>
<var>${metatdata}</var>
</assign>
<msg timestamp="20210521 12:14:49.816" html="yes" level="INFO">Getting file '&lt;a href="file:///home/lasse/upstream/pm-mapper/csit/tests/filesprocessingconfigpmmapper/assets/valid_metadata.json"&gt;/home/lasse/upstream/pm-mapper/csit/tests/filesprocessingconfigpmmapper/assets/valid_metadata.json&lt;/a&gt;'.</msg>
<msg timestamp="20210521 12:14:49.817" level="INFO">${metatdata} = {
    "productName": "gnb",
    "vendorName": "Ericsson",
    "lastEpochMicrosec": "1538478000000",
    "sourceName": "oteNB5309",
    "startEpochMicrosec": "1538478900000",
    "timeZoneOffset": "UTC...</msg>
<status status="PASS" endtime="20210521 12:14:49.817" starttime="20210521 12:14:49.816"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>${testnr}</arg>
<arg>${i}</arg>
<arg>.xml</arg>
</arguments>
<assign>
<var>${newFilename}</var>
</assign>
<msg timestamp="20210521 12:14:49.818" level="INFO">${newFilename} = Afourth-8.xml</msg>
<status status="PASS" endtime="20210521 12:14:49.818" starttime="20210521 12:14:49.817"></status>
</kw>
<kw name="PutCall">
<arguments>
<arg>${PUBLISH_NODE_URL}/${newFilename}</arg>
<arg>${request_id}</arg>
<arg>${pmdata}</arg>
<arg>${metatdata.replace("\n","")}</arg>
<arg>pmmapper</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>X-ONAP-RequestID=${request_id}</arg>
<arg>X-DMAAP-DR-META=${meta}</arg>
<arg>Content-Type=application/octet-stream</arg>
<arg>X-DMAAP-DR-ON-BEHALF-OF=${user}</arg>
<arg>Authorization=Basic cG1tYXBwZXI6cG1tYXBwZXI=</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20210521 12:14:49.821" level="INFO">${headers} = {u'X-ONAP-RequestID': u'X-ONAP-RequestID=8', u'X-DMAAP-DR-META': u'{    "productName": "gnb",    "vendorName": "Ericsson",    "lastEpochMicrosec": "1538478000000",    "sourceName": "oteNB5309",    "st...</msg>
<status status="PASS" endtime="20210521 12:14:49.821" starttime="20210521 12:14:49.820"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>requests.put('${url}', data="""${data}""", headers=${headers}, verify=False, allow_redirects=False)</arg>
<arg>requests</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20210521 12:14:49.860" level="INFO">/usr/local/lib/python2.7/dist-packages/urllib3/connectionpool.py:988: InsecureRequestWarning: Unverified HTTPS request is being made to host '172.18.0.2'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings
  InsecureRequestWarning,</msg>
<msg timestamp="20210521 12:14:49.861" level="INFO">${resp} = &lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20210521 12:14:49.861" starttime="20210521 12:14:49.821"></status>
</kw>
<msg timestamp="20210521 12:14:49.862" level="INFO">${resp} = &lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20210521 12:14:49.862" starttime="20210521 12:14:49.818"></status>
</kw>
<kw name="VerifyResponse">
<arguments>
<arg>${resp.status_code}</arg>
<arg>204</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${actual_response_value}</arg>
<arg>${expected_response_value}</arg>
</arguments>
<msg timestamp="20210521 12:14:49.864" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210521 12:14:49.864" starttime="20210521 12:14:49.863"></status>
</kw>
<status status="PASS" endtime="20210521 12:14:49.864" starttime="20210521 12:14:49.862"></status>
</kw>
<status status="PASS" endtime="20210521 12:14:49.864" starttime="20210521 12:14:49.813"></status>
</kw>
<status status="PASS" endtime="20210521 12:14:49.864" starttime="20210521 12:14:49.813"></status>
</kw>
<kw type="foritem" name="${i} = 9">
<kw name="SendToDatarouter">
<arguments>
<arg>${FILE_PATH}</arg>
<arg>${NR_VALID_METADATA_PATH}</arg>
<arg>X-ONAP-RequestID=${i}</arg>
<arg>${testnr}</arg>
<arg>${i}</arg>
</arguments>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${filepath}</arg>
</arguments>
<assign>
<var>${pmdata}</var>
</assign>
<msg timestamp="20210521 12:14:49.866" html="yes" level="INFO">Getting file '&lt;a href="file:///home/lasse/upstream/pm-mapper/csit/tests/filesprocessingconfigpmmapper/assets/ABigFile.xml"&gt;/home/lasse/upstream/pm-mapper/csit/tests/filesprocessingconfigpmmapper/assets/ABigFile.xml&lt;/a&gt;'.</msg>
<msg timestamp="20210521 12:14:49.866" level="INFO">${pmdata} = &lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;?xml-stylesheet type="text/xsl" href="MeasDataCollection.xsl"?&gt;
&lt;measCollecFile xmlns="http://www.3gpp.org/ftp/specs/archive/32_series/32.435#measCollec"
xmlns:...</msg>
<status status="PASS" endtime="20210521 12:14:49.867" starttime="20210521 12:14:49.866"></status>
</kw>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${metadatapath}</arg>
</arguments>
<assign>
<var>${metatdata}</var>
</assign>
<msg timestamp="20210521 12:14:49.867" html="yes" level="INFO">Getting file '&lt;a href="file:///home/lasse/upstream/pm-mapper/csit/tests/filesprocessingconfigpmmapper/assets/valid_metadata.json"&gt;/home/lasse/upstream/pm-mapper/csit/tests/filesprocessingconfigpmmapper/assets/valid_metadata.json&lt;/a&gt;'.</msg>
<msg timestamp="20210521 12:14:49.867" level="INFO">${metatdata} = {
    "productName": "gnb",
    "vendorName": "Ericsson",
    "lastEpochMicrosec": "1538478000000",
    "sourceName": "oteNB5309",
    "startEpochMicrosec": "1538478900000",
    "timeZoneOffset": "UTC...</msg>
<status status="PASS" endtime="20210521 12:14:49.867" starttime="20210521 12:14:49.867"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>${testnr}</arg>
<arg>${i}</arg>
<arg>.xml</arg>
</arguments>
<assign>
<var>${newFilename}</var>
</assign>
<msg timestamp="20210521 12:14:49.868" level="INFO">${newFilename} = Afourth-9.xml</msg>
<status status="PASS" endtime="20210521 12:14:49.868" starttime="20210521 12:14:49.868"></status>
</kw>
<kw name="PutCall">
<arguments>
<arg>${PUBLISH_NODE_URL}/${newFilename}</arg>
<arg>${request_id}</arg>
<arg>${pmdata}</arg>
<arg>${metatdata.replace("\n","")}</arg>
<arg>pmmapper</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>X-ONAP-RequestID=${request_id}</arg>
<arg>X-DMAAP-DR-META=${meta}</arg>
<arg>Content-Type=application/octet-stream</arg>
<arg>X-DMAAP-DR-ON-BEHALF-OF=${user}</arg>
<arg>Authorization=Basic cG1tYXBwZXI6cG1tYXBwZXI=</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20210521 12:14:49.871" level="INFO">${headers} = {u'X-ONAP-RequestID': u'X-ONAP-RequestID=9', u'X-DMAAP-DR-META': u'{    "productName": "gnb",    "vendorName": "Ericsson",    "lastEpochMicrosec": "1538478000000",    "sourceName": "oteNB5309",    "st...</msg>
<status status="PASS" endtime="20210521 12:14:49.871" starttime="20210521 12:14:49.870"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>requests.put('${url}', data="""${data}""", headers=${headers}, verify=False, allow_redirects=False)</arg>
<arg>requests</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20210521 12:14:49.913" level="INFO">/usr/local/lib/python2.7/dist-packages/urllib3/connectionpool.py:988: InsecureRequestWarning: Unverified HTTPS request is being made to host '172.18.0.2'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings
  InsecureRequestWarning,</msg>
<msg timestamp="20210521 12:14:49.914" level="INFO">${resp} = &lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20210521 12:14:49.914" starttime="20210521 12:14:49.871"></status>
</kw>
<msg timestamp="20210521 12:14:49.914" level="INFO">${resp} = &lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20210521 12:14:49.914" starttime="20210521 12:14:49.868"></status>
</kw>
<kw name="VerifyResponse">
<arguments>
<arg>${resp.status_code}</arg>
<arg>204</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${actual_response_value}</arg>
<arg>${expected_response_value}</arg>
</arguments>
<msg timestamp="20210521 12:14:49.916" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210521 12:14:49.916" starttime="20210521 12:14:49.915"></status>
</kw>
<status status="PASS" endtime="20210521 12:14:49.916" starttime="20210521 12:14:49.914"></status>
</kw>
<status status="PASS" endtime="20210521 12:14:49.916" starttime="20210521 12:14:49.865"></status>
</kw>
<status status="PASS" endtime="20210521 12:14:49.917" starttime="20210521 12:14:49.864"></status>
</kw>
<status status="PASS" endtime="20210521 12:14:49.917" starttime="20210521 12:14:49.431"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>20s</arg>
</arguments>
<msg timestamp="20210521 12:15:09.918" level="INFO">Slept 20 seconds</msg>
<status status="PASS" endtime="20210521 12:15:09.918" starttime="20210521 12:14:49.917"></status>
</kw>
<status status="PASS" endtime="20210521 12:15:09.919" starttime="20210521 12:14:49.430"></status>
</kw>
<kw name="GetLogsOutput">
<assign>
<var>${alllogs}</var>
</assign>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>${CLI_EXEC_LOGS_LIST}</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${filesString}</var>
</assign>
<msg timestamp="20210521 12:15:09.925" level="INFO">Starting process:
docker exec datarouter-node /bin/sh -c "ls /opt/app/datartr/logs"</msg>
<msg timestamp="20210521 12:15:09.938" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210521 12:15:10.212" level="INFO">Process completed.</msg>
<msg timestamp="20210521 12:15:10.213" level="INFO">${filesString} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20210521 12:15:10.213" starttime="20210521 12:15:09.923"></status>
</kw>
<kw name="Get Log Files List" library="LogReader">
<arguments>
<arg>${filesString.stdout}</arg>
</arguments>
<assign>
<var>${filesList}</var>
</assign>
<msg timestamp="20210521 12:15:10.215" level="INFO">${filesList} = [u'events-202105210912.log', u'events-202105210913.log', u'events-202105210914.log', u'events.log']</msg>
<status status="PASS" endtime="20210521 12:15:10.216" starttime="20210521 12:15:10.214"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<msg timestamp="20210521 12:15:10.216" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210521 12:15:10.217" starttime="20210521 12:15:10.216"></status>
</kw>
<kw type="for" name="${file} IN [ @{filesList} ]">
<kw type="foritem" name="${file} = events-202105210912.log">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>"cat /opt/app/datartr/logs/</arg>
<arg>${file}</arg>
<arg>"</arg>
</arguments>
<assign>
<var>${file_path}</var>
</assign>
<msg timestamp="20210521 12:15:10.218" level="INFO">${file_path} = "cat /opt/app/datartr/logs/events-202105210912.log"</msg>
<status status="PASS" endtime="20210521 12:15:10.218" starttime="20210521 12:15:10.217"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>docker exec datarouter-node /bin/sh -c</arg>
<arg>${file_path}</arg>
</arguments>
<assign>
<var>${exec}</var>
</assign>
<msg timestamp="20210521 12:15:10.219" level="INFO">${exec} = docker exec datarouter-node /bin/sh -c "cat /opt/app/datartr/logs/events-202105210912.log"</msg>
<status status="PASS" endtime="20210521 12:15:10.219" starttime="20210521 12:15:10.218"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>${exec}</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${single_file}</var>
</assign>
<msg timestamp="20210521 12:15:10.219" level="INFO">Starting process:
docker exec datarouter-node /bin/sh -c "cat /opt/app/datartr/logs/events-202105210912.log"</msg>
<msg timestamp="20210521 12:15:10.222" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210521 12:15:10.367" level="INFO">Process completed.</msg>
<msg timestamp="20210521 12:15:10.368" level="INFO">${single_file} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20210521 12:15:10.368" starttime="20210521 12:15:10.219"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=\n</arg>
<arg>${output}</arg>
<arg>${single_file.stdout}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<msg timestamp="20210521 12:15:10.370" level="INFO">${output} = 
2021-05-21T09:12:27.953Z|PUB|1621588347859.dmaap-dr-node|1|https://dmaap-dr-node/publish/1/Afirst-0.xml|PUT|application/octet-stream|5942|172.18.0.1|pmmapper|204
2021-05-21T09:12:28.027Z|PUB|16215883...</msg>
<status status="PASS" endtime="20210521 12:15:10.370" starttime="20210521 12:15:10.369"></status>
</kw>
<status status="PASS" endtime="20210521 12:15:10.370" starttime="20210521 12:15:10.217"></status>
</kw>
<kw type="foritem" name="${file} = events-202105210913.log">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>"cat /opt/app/datartr/logs/</arg>
<arg>${file}</arg>
<arg>"</arg>
</arguments>
<assign>
<var>${file_path}</var>
</assign>
<msg timestamp="20210521 12:15:10.371" level="INFO">${file_path} = "cat /opt/app/datartr/logs/events-202105210913.log"</msg>
<status status="PASS" endtime="20210521 12:15:10.371" starttime="20210521 12:15:10.371"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>docker exec datarouter-node /bin/sh -c</arg>
<arg>${file_path}</arg>
</arguments>
<assign>
<var>${exec}</var>
</assign>
<msg timestamp="20210521 12:15:10.372" level="INFO">${exec} = docker exec datarouter-node /bin/sh -c "cat /opt/app/datartr/logs/events-202105210913.log"</msg>
<status status="PASS" endtime="20210521 12:15:10.372" starttime="20210521 12:15:10.372"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>${exec}</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${single_file}</var>
</assign>
<msg timestamp="20210521 12:15:10.373" level="INFO">Starting process:
docker exec datarouter-node /bin/sh -c "cat /opt/app/datartr/logs/events-202105210913.log"</msg>
<msg timestamp="20210521 12:15:10.376" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210521 12:15:10.517" level="INFO">Process completed.</msg>
<msg timestamp="20210521 12:15:10.517" level="INFO">${single_file} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20210521 12:15:10.518" starttime="20210521 12:15:10.372"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=\n</arg>
<arg>${output}</arg>
<arg>${single_file.stdout}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<msg timestamp="20210521 12:15:10.519" level="INFO">${output} = 
2021-05-21T09:12:27.953Z|PUB|1621588347859.dmaap-dr-node|1|https://dmaap-dr-node/publish/1/Afirst-0.xml|PUT|application/octet-stream|5942|172.18.0.1|pmmapper|204
2021-05-21T09:12:28.027Z|PUB|16215883...</msg>
<status status="PASS" endtime="20210521 12:15:10.519" starttime="20210521 12:15:10.518"></status>
</kw>
<status status="PASS" endtime="20210521 12:15:10.519" starttime="20210521 12:15:10.370"></status>
</kw>
<kw type="foritem" name="${file} = events-202105210914.log">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>"cat /opt/app/datartr/logs/</arg>
<arg>${file}</arg>
<arg>"</arg>
</arguments>
<assign>
<var>${file_path}</var>
</assign>
<msg timestamp="20210521 12:15:10.520" level="INFO">${file_path} = "cat /opt/app/datartr/logs/events-202105210914.log"</msg>
<status status="PASS" endtime="20210521 12:15:10.520" starttime="20210521 12:15:10.519"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>docker exec datarouter-node /bin/sh -c</arg>
<arg>${file_path}</arg>
</arguments>
<assign>
<var>${exec}</var>
</assign>
<msg timestamp="20210521 12:15:10.521" level="INFO">${exec} = docker exec datarouter-node /bin/sh -c "cat /opt/app/datartr/logs/events-202105210914.log"</msg>
<status status="PASS" endtime="20210521 12:15:10.521" starttime="20210521 12:15:10.520"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>${exec}</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${single_file}</var>
</assign>
<msg timestamp="20210521 12:15:10.522" level="INFO">Starting process:
docker exec datarouter-node /bin/sh -c "cat /opt/app/datartr/logs/events-202105210914.log"</msg>
<msg timestamp="20210521 12:15:10.525" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210521 12:15:10.696" level="INFO">Process completed.</msg>
<msg timestamp="20210521 12:15:10.697" level="INFO">${single_file} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20210521 12:15:10.697" starttime="20210521 12:15:10.522"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=\n</arg>
<arg>${output}</arg>
<arg>${single_file.stdout}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<msg timestamp="20210521 12:15:10.699" level="INFO">${output} = 
2021-05-21T09:12:27.953Z|PUB|1621588347859.dmaap-dr-node|1|https://dmaap-dr-node/publish/1/Afirst-0.xml|PUT|application/octet-stream|5942|172.18.0.1|pmmapper|204
2021-05-21T09:12:28.027Z|PUB|16215883...</msg>
<status status="PASS" endtime="20210521 12:15:10.699" starttime="20210521 12:15:10.698"></status>
</kw>
<status status="PASS" endtime="20210521 12:15:10.699" starttime="20210521 12:15:10.519"></status>
</kw>
<kw type="foritem" name="${file} = events.log">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>"cat /opt/app/datartr/logs/</arg>
<arg>${file}</arg>
<arg>"</arg>
</arguments>
<assign>
<var>${file_path}</var>
</assign>
<msg timestamp="20210521 12:15:10.700" level="INFO">${file_path} = "cat /opt/app/datartr/logs/events.log"</msg>
<status status="PASS" endtime="20210521 12:15:10.701" starttime="20210521 12:15:10.700"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>docker exec datarouter-node /bin/sh -c</arg>
<arg>${file_path}</arg>
</arguments>
<assign>
<var>${exec}</var>
</assign>
<msg timestamp="20210521 12:15:10.702" level="INFO">${exec} = docker exec datarouter-node /bin/sh -c "cat /opt/app/datartr/logs/events.log"</msg>
<status status="PASS" endtime="20210521 12:15:10.702" starttime="20210521 12:15:10.701"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>${exec}</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${single_file}</var>
</assign>
<msg timestamp="20210521 12:15:10.703" level="INFO">Starting process:
docker exec datarouter-node /bin/sh -c "cat /opt/app/datartr/logs/events.log"</msg>
<msg timestamp="20210521 12:15:10.706" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210521 12:15:10.859" level="INFO">Process completed.</msg>
<msg timestamp="20210521 12:15:10.860" level="INFO">${single_file} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20210521 12:15:10.860" starttime="20210521 12:15:10.702"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=\n</arg>
<arg>${output}</arg>
<arg>${single_file.stdout}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<msg timestamp="20210521 12:15:10.861" level="INFO">${output} = 
2021-05-21T09:12:27.953Z|PUB|1621588347859.dmaap-dr-node|1|https://dmaap-dr-node/publish/1/Afirst-0.xml|PUT|application/octet-stream|5942|172.18.0.1|pmmapper|204
2021-05-21T09:12:28.027Z|PUB|16215883...</msg>
<status status="PASS" endtime="20210521 12:15:10.861" starttime="20210521 12:15:10.860"></status>
</kw>
<status status="PASS" endtime="20210521 12:15:10.862" starttime="20210521 12:15:10.699"></status>
</kw>
<status status="PASS" endtime="20210521 12:15:10.862" starttime="20210521 12:15:10.217"></status>
</kw>
<msg timestamp="20210521 12:15:10.862" level="INFO">${alllogs} = 
2021-05-21T09:12:27.953Z|PUB|1621588347859.dmaap-dr-node|1|https://dmaap-dr-node/publish/1/Afirst-0.xml|PUT|application/octet-stream|5942|172.18.0.1|pmmapper|204
2021-05-21T09:12:28.027Z|PUB|16215883...</msg>
<status status="PASS" endtime="20210521 12:15:10.862" starttime="20210521 12:15:09.920"></status>
</kw>
<kw name="GetFilteredLogs">
<arguments>
<arg>${alllogs}</arg>
<arg>${testname}</arg>
</arguments>
<assign>
<var>${filtered_logs}</var>
</assign>
<kw name="Filter Unique" library="LogReader">
<arguments>
<arg>${all_logs}</arg>
<arg>${testname}</arg>
</arguments>
<assign>
<var>${filtered_logs}</var>
</assign>
<msg timestamp="20210521 12:15:10.864" level="INFO">${filtered_logs} = set([u'2021-05-21T09:14:53.354Z|DEL|1621588489644.dmaap-dr-node|1|1|http://dcae-pm-mapper:8081/delivery/Afourth-4.xml|PUT|application/octet-stream|5942|username|200|null', u'2021-05-21T09:14:53.323Z|D...</msg>
<status status="PASS" endtime="20210521 12:15:10.864" starttime="20210521 12:15:10.863"></status>
</kw>
<msg timestamp="20210521 12:15:10.864" level="INFO">${filtered_logs} = set([u'2021-05-21T09:14:53.354Z|DEL|1621588489644.dmaap-dr-node|1|1|http://dcae-pm-mapper:8081/delivery/Afourth-4.xml|PUT|application/octet-stream|5942|username|200|null', u'2021-05-21T09:14:53.323Z|D...</msg>
<status status="PASS" endtime="20210521 12:15:10.864" starttime="20210521 12:15:10.862"></status>
</kw>
<kw name="GetDroppedNumber">
<arguments>
<arg>${filtered_logs}</arg>
</arguments>
<assign>
<var>${dropped_nr}</var>
</assign>
<kw name="Get Number Of Dropped Messages" library="LogReader">
<arguments>
<arg>${logs_output}</arg>
</arguments>
<assign>
<var>${number}</var>
</assign>
<msg timestamp="20210521 12:15:10.866" level="INFO">${number} = 0</msg>
<status status="PASS" endtime="20210521 12:15:10.866" starttime="20210521 12:15:10.865"></status>
</kw>
<msg timestamp="20210521 12:15:10.866" level="INFO">${dropped_nr} = 0</msg>
<status status="PASS" endtime="20210521 12:15:10.866" starttime="20210521 12:15:10.865"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>15s</arg>
</arguments>
<msg timestamp="20210521 12:15:25.871" level="INFO">Slept 15 seconds</msg>
<status status="PASS" endtime="20210521 12:15:25.871" starttime="20210521 12:15:10.866"></status>
</kw>
<kw name="SavePmMapperLogsAndDroppedCount">
<arguments>
<arg>config_1_10</arg>
<arg>${dropped_nr}</arg>
</arguments>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>echo "Dropped: ${dropped_count}" &gt; %{WORKSPACE}/archives/${test_name}_dropped_count.log</arg>
<arg>shell=yes</arg>
</arguments>
<msg timestamp="20210521 12:15:25.878" level="INFO">Starting process:
echo "Dropped: 0" &gt; /home/lasse/upstream/pm-mapper/csit/archives/config_1_10_dropped_count.log</msg>
<msg timestamp="20210521 12:15:25.889" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210521 12:15:25.890" level="INFO">Process completed.</msg>
<status status="PASS" endtime="20210521 12:15:25.892" starttime="20210521 12:15:25.875"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>docker logs ${CLIENT_CONTAINER_NAME} &gt; %{WORKSPACE}/archives/${test_name}_pm_mapper_container_logs.log</arg>
<arg>shell=yes</arg>
</arguments>
<msg timestamp="20210521 12:15:25.898" level="INFO">Starting process:
docker logs pmmapper &gt; /home/lasse/upstream/pm-mapper/csit/archives/config_1_10_pm_mapper_container_logs.log</msg>
<msg timestamp="20210521 12:15:25.905" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210521 12:15:25.966" level="INFO">Process completed.</msg>
<status status="PASS" endtime="20210521 12:15:25.967" starttime="20210521 12:15:25.894"></status>
</kw>
<status status="PASS" endtime="20210521 12:15:25.968" starttime="20210521 12:15:25.872"></status>
</kw>
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<arguments>
<arg>${dropped_nr}</arg>
<arg>0</arg>
<arg>Pm-mapper drop: ${dropped_nr} messages. Expected drop count: 0</arg>
</arguments>
<msg timestamp="20210521 12:15:25.969" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210521 12:15:25.969" starttime="20210521 12:15:25.968"></status>
</kw>
<kw name="ClearLogs">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>${CLI_EXEC_CLI_PM_LOG_CLEAR}</arg>
<arg>shell=yes</arg>
</arguments>
<msg timestamp="20210521 12:15:25.970" level="INFO">Starting process:
docker exec pmmapper /bin/sh -c "echo -n "" &gt; /var/log/ONAP/dcaegen2/services/pm-mapper/pm-mapper_output.log"</msg>
<msg timestamp="20210521 12:15:25.973" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20210521 12:15:26.103" level="INFO">Process completed.</msg>
<status status="PASS" endtime="20210521 12:15:26.104" starttime="20210521 12:15:25.970"></status>
</kw>
<status status="PASS" endtime="20210521 12:15:26.104" starttime="20210521 12:15:25.969"></status>
</kw>
<doc>Verify that PM Mapper rejects 0/10 messages. Configuration: limitRate=1, threadsCount=10</doc>
<tags>
<tag>FILES_PROCESSING_CONFIG_PM_MAPPER_3</tag>
</tags>
<timeout value="25 minutes"></timeout>
<status status="PASS" endtime="20210521 12:15:26.105" critical="yes" starttime="20210521 12:14:28.137"></status>
</test>
<doc>Testing PM Mapper functionality</doc>
<status status="PASS" endtime="20210521 12:15:26.106" starttime="20210521 12:12:06.285"></status>
</suite>
<doc>Files Processing Config PM Mapper Testcases</doc>
<status status="PASS" endtime="20210521 12:15:26.115" starttime="20210521 12:12:06.252"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="3">Critical Tests</stat>
<stat fail="0" pass="3">All Tests</stat>
</total>
<tag>
<stat fail="0" pass="1">FILES_PROCESSING_CONFIG_PM_MAPPER_1</stat>
<stat fail="0" pass="1">FILES_PROCESSING_CONFIG_PM_MAPPER_2</stat>
<stat fail="0" pass="1">FILES_PROCESSING_CONFIG_PM_MAPPER_3</stat>
</tag>
<suite>
<stat fail="0" id="s1" name="plans/filesprocessingconfigpmmapper" pass="3">plans/filesprocessingconfigpmmapper</stat>
<stat fail="0" id="s1-s1" name="Filesprocessingconfigpmmapper" pass="3">plans/filesprocessingconfigpmmapper.Filesprocessingconfigpmmapper</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
